// three-webgl.min.js - http://github.com/mrdoob/three.js
'use strict';var THREE=THREE||{REVISION:"52"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}};self.Int32Array=self.Int32Array||Array;self.Float32Array=self.Float32Array||Array;String.prototype.startsWith=String.prototype.startsWith||function(a){return this.slice(0,a.length)===a};String.prototype.endsWith=String.prototype.endsWith||function(a){var a=String(a),b=this.lastIndexOf(a);return(-1<b&&b)===this.length-a.length};
String.prototype.trim=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")};
(function(){for(var a=0,b=["ms","moz","webkit","o"],c=0;c<b.length&&!window.requestAnimationFrame;++c)window.requestAnimationFrame=window[b[c]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[b[c]+"CancelAnimationFrame"]||window[b[c]+"CancelRequestAnimationFrame"];void 0===window.requestAnimationFrame&&(window.requestAnimationFrame=function(b){var c=Date.now(),f=Math.max(0,16-(c-a)),g=window.setTimeout(function(){b(c+f)},f);a=c+f;return g});window.cancelAnimationFrame=window.cancelAnimationFrame||
function(a){window.clearTimeout(a)}})();THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;
THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.UVMapping=function(){};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};
THREE.RepeatWrapping=1E3;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.UnsignedShort4444Type=1016;
THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.Clock=function(a){this.autoStart=void 0!==a?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};
THREE.Clock.prototype.start=function(){this.oldTime=this.startTime=Date.now();this.running=!0};THREE.Clock.prototype.stop=function(){this.getElapsedTime();this.running=!1};THREE.Clock.prototype.getElapsedTime=function(){return this.elapsedTime+=this.getDelta()};THREE.Clock.prototype.getDelta=function(){var a=0;this.autoStart&&!this.running&&this.start();if(this.running){var b=Date.now(),a=0.001*(b-this.oldTime);this.oldTime=b;this.elapsedTime+=a}return a};
THREE.Color=function(a){void 0!==a&&this.setHex(a);return this};
THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,copy:function(a){this.r=a.r;this.g=a.g;this.b=a.b;return this},copyGammaToLinear:function(a){this.r=a.r*a.r;this.g=a.g*a.g;this.b=a.b*a.b;return this},copyLinearToGamma:function(a){this.r=Math.sqrt(a.r);this.g=Math.sqrt(a.g);this.b=Math.sqrt(a.b);return this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);
this.b=Math.sqrt(this.b);return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSV:function(a,b,c){var d,e,f;0===c?this.r=this.g=this.b=0:(d=Math.floor(6*a),e=6*a-d,a=c*(1-b),f=c*(1-b*e),b=c*(1-b*(1-e)),0===d?(this.r=c,this.g=b,this.b=a):1===d?(this.r=f,this.g=c,this.b=a):2===d?(this.r=a,this.g=c,this.b=b):3===d?(this.r=a,this.g=f,this.b=c):4===d?(this.r=b,this.g=a,this.b=c):5===d&&(this.r=c,this.g=a,this.b=f));return this},setHex:function(a){a=Math.floor(a);this.r=(a>>16&
255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},lerpSelf:function(a,b){this.r+=(a.r-this.r)*b;this.g+=(a.g-this.g)*b;this.b+=(a.b-this.b)*b;return this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getContextStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){this.x=a;this.y=b;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a):this.set(0,
0);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,a=this.y-a.y;return b*b+a*a},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,
b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;return this},equals:function(a){return a.x===this.x&&a.y===this.y},isZero:function(a){return this.lengthSq()<(void 0!==a?a:1E-4)},clone:function(){return new THREE.Vector2(this.x,this.y)}};THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};
THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},
sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},multiply:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideSelf:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a):
this.z=this.y=this.x=0;return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){this.x+=
(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this},cross:function(a,b){this.x=a.y*b.z-a.z*b.y;this.y=a.z*b.x-a.x*b.z;this.z=a.x*b.y-a.y*b.x;return this},crossSelf:function(a){var b=this.x,c=this.y,d=this.z;this.x=c*a.z-d*a.y;this.y=d*a.x-b*a.z;this.z=b*a.y-c*a.x;return this},angleTo:function(a){return Math.acos(this.dot(a)/this.length()/a.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){return(new THREE.Vector3).sub(this,
a).lengthSq()},getPositionFromMatrix:function(a){this.x=a.elements[12];this.y=a.elements[13];this.z=a.elements[14];return this},setEulerFromRotationMatrix:function(a,b){function c(a){return Math.min(Math.max(a,-1),1)}var d=a.elements,e=d[0],f=d[4],g=d[8],j=d[1],l=d[5],k=d[9],i=d[2],o=d[6],d=d[10];void 0===b||"XYZ"===b?(this.y=Math.asin(c(g)),0.99999>Math.abs(g)?(this.x=Math.atan2(-k,d),this.z=Math.atan2(-f,e)):(this.x=Math.atan2(o,l),this.z=0)):"YXZ"===b?(this.x=Math.asin(-c(k)),0.99999>Math.abs(k)?
(this.y=Math.atan2(g,d),this.z=Math.atan2(j,l)):(this.y=Math.atan2(-i,e),this.z=0)):"ZXY"===b?(this.x=Math.asin(c(o)),0.99999>Math.abs(o)?(this.y=Math.atan2(-i,d),this.z=Math.atan2(-f,l)):(this.y=0,this.z=Math.atan2(j,e))):"ZYX"===b?(this.y=Math.asin(-c(i)),0.99999>Math.abs(i)?(this.x=Math.atan2(o,d),this.z=Math.atan2(j,e)):(this.x=0,this.z=Math.atan2(-f,l))):"YZX"===b?(this.z=Math.asin(c(j)),0.99999>Math.abs(j)?(this.x=Math.atan2(-k,l),this.y=Math.atan2(-i,e)):(this.x=0,this.y=Math.atan2(g,d))):
"XZY"===b&&(this.z=Math.asin(-c(f)),0.99999>Math.abs(f)?(this.x=Math.atan2(o,l),this.y=Math.atan2(g,e)):(this.x=Math.atan2(-k,d),this.y=0));return this},setEulerFromQuaternion:function(a,b){function c(a){return Math.min(Math.max(a,-1),1)}var d=a.x*a.x,e=a.y*a.y,f=a.z*a.z,g=a.w*a.w;void 0===b||"XYZ"===b?(this.x=Math.atan2(2*(a.x*a.w-a.y*a.z),g-d-e+f),this.y=Math.asin(c(2*(a.x*a.z+a.y*a.w))),this.z=Math.atan2(2*(a.z*a.w-a.x*a.y),g+d-e-f)):"YXZ"===b?(this.x=Math.asin(c(2*(a.x*a.w-a.y*a.z))),this.y=Math.atan2(2*
(a.x*a.z+a.y*a.w),g-d-e+f),this.z=Math.atan2(2*(a.x*a.y+a.z*a.w),g-d+e-f)):"ZXY"===b?(this.x=Math.asin(c(2*(a.x*a.w+a.y*a.z))),this.y=Math.atan2(2*(a.y*a.w-a.z*a.x),g-d-e+f),this.z=Math.atan2(2*(a.z*a.w-a.x*a.y),g-d+e-f)):"ZYX"===b?(this.x=Math.atan2(2*(a.x*a.w+a.z*a.y),g-d-e+f),this.y=Math.asin(c(2*(a.y*a.w-a.x*a.z))),this.z=Math.atan2(2*(a.x*a.y+a.z*a.w),g+d-e-f)):"YZX"===b?(this.x=Math.atan2(2*(a.x*a.w-a.z*a.y),g-d+e-f),this.y=Math.atan2(2*(a.y*a.w-a.x*a.z),g+d-e-f),this.z=Math.asin(c(2*(a.x*a.y+
a.z*a.w)))):"XZY"===b&&(this.x=Math.atan2(2*(a.x*a.w+a.y*a.z),g-d+e-f),this.y=Math.atan2(2*(a.x*a.z+a.y*a.w),g+d-e-f),this.z=Math.asin(c(2*(a.z*a.w-a.x*a.y))));return this},getScaleFromMatrix:function(a){var b=this.set(a.elements[0],a.elements[1],a.elements[2]).length(),c=this.set(a.elements[4],a.elements[5],a.elements[6]).length(),a=this.set(a.elements[8],a.elements[9],a.elements[10]).length();this.x=b;this.y=c;this.z=a;return this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},
isZero:function(a){return this.lengthSq()<(void 0!==a?a:1E-4)},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}};THREE.Vector4=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};
THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=void 0!==a.w?a.w:1;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},subSelf:function(a){this.x-=
a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a,this.w/=a):(this.z=this.y=this.x=0,this.w=1);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.dot(this)},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return Math.abs(this.x)+
Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);1E-4>b?(this.x=1,this.z=this.y=0):
(this.x=a.x/b,this.y=a.y/b,this.z=a.z/b);return this},setAxisAngleFromRotationMatrix:function(a){var b,c,d,a=a.elements,e=a[0];d=a[4];var f=a[8],g=a[1],j=a[5],l=a[9];c=a[2];b=a[6];var k=a[10];if(0.01>Math.abs(d-g)&&0.01>Math.abs(f-c)&&0.01>Math.abs(l-b)){if(0.1>Math.abs(d+g)&&0.1>Math.abs(f+c)&&0.1>Math.abs(l+b)&&0.1>Math.abs(e+j+k-3))return this.set(1,0,0,0),this;a=Math.PI;e=(e+1)/2;j=(j+1)/2;k=(k+1)/2;d=(d+g)/4;f=(f+c)/4;l=(l+b)/4;e>j&&e>k?0.01>e?(b=0,d=c=0.707106781):(b=Math.sqrt(e),c=d/b,d=f/
b):j>k?0.01>j?(b=0.707106781,c=0,d=0.707106781):(c=Math.sqrt(j),b=d/c,d=l/c):0.01>k?(c=b=0.707106781,d=0):(d=Math.sqrt(k),b=f/d,c=l/d);this.set(b,c,d,a);return this}a=Math.sqrt((b-l)*(b-l)+(f-c)*(f-c)+(g-d)*(g-d));0.001>Math.abs(a)&&(a=1);this.x=(b-l)/a;this.y=(f-c)/a;this.z=(g-d)/a;this.w=Math.acos((e+j+k-1)/2);return this}};THREE.Matrix3=function(){this.elements=new Float32Array(9)};
THREE.Matrix3.prototype={constructor:THREE.Matrix3,getInverse:function(a){var b=a.elements,a=b[10]*b[5]-b[6]*b[9],c=-b[10]*b[1]+b[2]*b[9],d=b[6]*b[1]-b[2]*b[5],e=-b[10]*b[4]+b[6]*b[8],f=b[10]*b[0]-b[2]*b[8],g=-b[6]*b[0]+b[2]*b[4],j=b[9]*b[4]-b[5]*b[8],l=-b[9]*b[0]+b[1]*b[8],k=b[5]*b[0]-b[1]*b[4],b=b[0]*a+b[1]*e+b[2]*j;0===b&&console.warn("Matrix3.getInverse(): determinant == 0");var b=1/b,i=this.elements;i[0]=b*a;i[1]=b*c;i[2]=b*d;i[3]=b*e;i[4]=b*f;i[5]=b*g;i[6]=b*j;i[7]=b*l;i[8]=b*k;return this},
transpose:function(){var a,b=this.elements;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this},transposeIntoArray:function(a){var b=this.m;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this}};THREE.Matrix4=function(a,b,c,d,e,f,g,j,l,k,i,o,m,s,n,u){this.elements=new Float32Array(16);this.set(void 0!==a?a:1,b||0,c||0,d||0,e||0,void 0!==f?f:1,g||0,j||0,l||0,k||0,void 0!==i?i:1,o||0,m||0,s||0,n||0,void 0!==u?u:1)};
THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,d,e,f,g,j,l,k,i,o,m,s,n,u){var p=this.elements;p[0]=a;p[4]=b;p[8]=c;p[12]=d;p[1]=e;p[5]=f;p[9]=g;p[13]=j;p[2]=l;p[6]=k;p[10]=i;p[14]=o;p[3]=m;p[7]=s;p[11]=n;p[15]=u;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){a=a.elements;this.set(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15]);return this},lookAt:function(a,b,c){var d=this.elements,
e=THREE.Matrix4.__v1,f=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;g.sub(a,b).normalize();0===g.length()&&(g.z=1);e.cross(c,g).normalize();0===e.length()&&(g.x+=1E-4,e.cross(c,g).normalize());f.cross(g,e);d[0]=e.x;d[4]=f.x;d[8]=g.x;d[1]=e.y;d[5]=f.y;d[9]=g.y;d[2]=e.z;d[6]=f.z;d[10]=g.z;return this},multiply:function(a,b){var c=a.elements,d=b.elements,e=this.elements,f=c[0],g=c[4],j=c[8],l=c[12],k=c[1],i=c[5],o=c[9],m=c[13],s=c[2],n=c[6],u=c[10],p=c[14],r=c[3],A=c[7],w=c[11],c=c[15],v=d[0],B=d[4],y=d[8],
x=d[12],R=d[1],M=d[5],T=d[9],D=d[13],G=d[2],I=d[6],Q=d[10],F=d[14],N=d[3],C=d[7],E=d[11],d=d[15];e[0]=f*v+g*R+j*G+l*N;e[4]=f*B+g*M+j*I+l*C;e[8]=f*y+g*T+j*Q+l*E;e[12]=f*x+g*D+j*F+l*d;e[1]=k*v+i*R+o*G+m*N;e[5]=k*B+i*M+o*I+m*C;e[9]=k*y+i*T+o*Q+m*E;e[13]=k*x+i*D+o*F+m*d;e[2]=s*v+n*R+u*G+p*N;e[6]=s*B+n*M+u*I+p*C;e[10]=s*y+n*T+u*Q+p*E;e[14]=s*x+n*D+u*F+p*d;e[3]=r*v+A*R+w*G+c*N;e[7]=r*B+A*M+w*I+c*C;e[11]=r*y+A*T+w*Q+c*E;e[15]=r*x+A*D+w*F+c*d;return this},multiplySelf:function(a){return this.multiply(this,
a)},multiplyToArray:function(a,b,c){var d=this.elements;this.multiply(a,b);c[0]=d[0];c[1]=d[1];c[2]=d[2];c[3]=d[3];c[4]=d[4];c[5]=d[5];c[6]=d[6];c[7]=d[7];c[8]=d[8];c[9]=d[9];c[10]=d[10];c[11]=d[11];c[12]=d[12];c[13]=d[13];c[14]=d[14];c[15]=d[15];return this},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[4]*=a;b[8]*=a;b[12]*=a;b[1]*=a;b[5]*=a;b[9]*=a;b[13]*=a;b[2]*=a;b[6]*=a;b[10]*=a;b[14]*=a;b[3]*=a;b[7]*=a;b[11]*=a;b[15]*=a;return this},multiplyVector3:function(a){var b=this.elements,
c=a.x,d=a.y,e=a.z,f=1/(b[3]*c+b[7]*d+b[11]*e+b[15]);a.x=(b[0]*c+b[4]*d+b[8]*e+b[12])*f;a.y=(b[1]*c+b[5]*d+b[9]*e+b[13])*f;a.z=(b[2]*c+b[6]*d+b[10]*e+b[14])*f;return a},multiplyVector4:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w;a.x=b[0]*c+b[4]*d+b[8]*e+b[12]*f;a.y=b[1]*c+b[5]*d+b[9]*e+b[13]*f;a.z=b[2]*c+b[6]*d+b[10]*e+b[14]*f;a.w=b[3]*c+b[7]*d+b[11]*e+b[15]*f;return a},multiplyVector3Array:function(a){for(var b=THREE.Matrix4.__v1,c=0,d=a.length;c<d;c+=3)b.x=a[c],b.y=a[c+1],b.z=a[c+2],
this.multiplyVector3(b),a[c]=b.x,a[c+1]=b.y,a[c+2]=b.z;return a},rotateAxis:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z;a.x=c*b[0]+d*b[4]+e*b[8];a.y=c*b[1]+d*b[5]+e*b[9];a.z=c*b[2]+d*b[6]+e*b[10];a.normalize();return a},crossVector:function(a){var b=this.elements,c=new THREE.Vector4;c.x=b[0]*a.x+b[4]*a.y+b[8]*a.z+b[12]*a.w;c.y=b[1]*a.x+b[5]*a.y+b[9]*a.z+b[13]*a.w;c.z=b[2]*a.x+b[6]*a.y+b[10]*a.z+b[14]*a.w;c.w=a.w?b[3]*a.x+b[7]*a.y+b[11]*a.z+b[15]*a.w:1;return c},determinant:function(){var a=
this.elements,b=a[0],c=a[4],d=a[8],e=a[12],f=a[1],g=a[5],j=a[9],l=a[13],k=a[2],i=a[6],o=a[10],m=a[14],s=a[3],n=a[7],u=a[11],a=a[15];return e*j*i*s-d*l*i*s-e*g*o*s+c*l*o*s+d*g*m*s-c*j*m*s-e*j*k*n+d*l*k*n+e*f*o*n-b*l*o*n-d*f*m*n+b*j*m*n+e*g*k*u-c*l*k*u-e*f*i*u+b*l*i*u+c*f*m*u-b*g*m*u-d*g*k*a+c*j*k*a+d*f*i*a-b*j*i*a-c*f*o*a+b*g*o*a},transpose:function(){var a=this.elements,b;b=a[1];a[1]=a[4];a[4]=b;b=a[2];a[2]=a[8];a[8]=b;b=a[6];a[6]=a[9];a[9]=b;b=a[3];a[3]=a[12];a[12]=b;b=a[7];a[7]=a[13];a[13]=b;b=
a[11];a[11]=a[14];a[14]=b;return this},flattenToArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[1];a[2]=b[2];a[3]=b[3];a[4]=b[4];a[5]=b[5];a[6]=b[6];a[7]=b[7];a[8]=b[8];a[9]=b[9];a[10]=b[10];a[11]=b[11];a[12]=b[12];a[13]=b[13];a[14]=b[14];a[15]=b[15];return a},flattenToArrayOffset:function(a,b){var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];a[b+9]=c[9];a[b+10]=c[10];a[b+11]=c[11];a[b+12]=c[12];a[b+13]=c[13];a[b+
14]=c[14];a[b+15]=c[15];return a},getPosition:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[12],a[13],a[14])},setPosition:function(a){var b=this.elements;b[12]=a.x;b[13]=a.y;b[14]=a.z;return this},getColumnX:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[0],a[1],a[2])},getColumnY:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[4],a[5],a[6])},getColumnZ:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[8],a[9],a[10])},getInverse:function(a){var b=
this.elements,c=a.elements,d=c[0],e=c[4],f=c[8],g=c[12],j=c[1],l=c[5],k=c[9],i=c[13],o=c[2],m=c[6],s=c[10],n=c[14],u=c[3],p=c[7],r=c[11],c=c[15];b[0]=k*n*p-i*s*p+i*m*r-l*n*r-k*m*c+l*s*c;b[4]=g*s*p-f*n*p-g*m*r+e*n*r+f*m*c-e*s*c;b[8]=f*i*p-g*k*p+g*l*r-e*i*r-f*l*c+e*k*c;b[12]=g*k*m-f*i*m-g*l*s+e*i*s+f*l*n-e*k*n;b[1]=i*s*u-k*n*u-i*o*r+j*n*r+k*o*c-j*s*c;b[5]=f*n*u-g*s*u+g*o*r-d*n*r-f*o*c+d*s*c;b[9]=g*k*u-f*i*u-g*j*r+d*i*r+f*j*c-d*k*c;b[13]=f*i*o-g*k*o+g*j*s-d*i*s-f*j*n+d*k*n;b[2]=l*n*u-i*m*u+i*o*p-j*n*
p-l*o*c+j*m*c;b[6]=g*m*u-e*n*u-g*o*p+d*n*p+e*o*c-d*m*c;b[10]=e*i*u-g*l*u+g*j*p-d*i*p-e*j*c+d*l*c;b[14]=g*l*o-e*i*o-g*j*m+d*i*m+e*j*n-d*l*n;b[3]=k*m*u-l*s*u-k*o*p+j*s*p+l*o*r-j*m*r;b[7]=e*s*u-f*m*u+f*o*p-d*s*p-e*o*r+d*m*r;b[11]=f*l*u-e*k*u-f*j*p+d*k*p+e*j*r-d*l*r;b[15]=e*k*o-f*l*o+f*j*m-d*k*m-e*j*s+d*l*s;this.multiplyScalar(1/a.determinant());return this},setRotationFromEuler:function(a,b){var c=this.elements,d=a.x,e=a.y,f=a.z,g=Math.cos(d),d=Math.sin(d),j=Math.cos(e),e=Math.sin(e),l=Math.cos(f),f=
Math.sin(f);if(void 0===b||"XYZ"===b){var k=g*l,i=g*f,o=d*l,m=d*f;c[0]=j*l;c[4]=-j*f;c[8]=e;c[1]=i+o*e;c[5]=k-m*e;c[9]=-d*j;c[2]=m-k*e;c[6]=o+i*e;c[10]=g*j}else"YXZ"===b?(k=j*l,i=j*f,o=e*l,m=e*f,c[0]=k+m*d,c[4]=o*d-i,c[8]=g*e,c[1]=g*f,c[5]=g*l,c[9]=-d,c[2]=i*d-o,c[6]=m+k*d,c[10]=g*j):"ZXY"===b?(k=j*l,i=j*f,o=e*l,m=e*f,c[0]=k-m*d,c[4]=-g*f,c[8]=o+i*d,c[1]=i+o*d,c[5]=g*l,c[9]=m-k*d,c[2]=-g*e,c[6]=d,c[10]=g*j):"ZYX"===b?(k=g*l,i=g*f,o=d*l,m=d*f,c[0]=j*l,c[4]=o*e-i,c[8]=k*e+m,c[1]=j*f,c[5]=m*e+k,c[9]=
i*e-o,c[2]=-e,c[6]=d*j,c[10]=g*j):"YZX"===b?(k=g*j,i=g*e,o=d*j,m=d*e,c[0]=j*l,c[4]=m-k*f,c[8]=o*f+i,c[1]=f,c[5]=g*l,c[9]=-d*l,c[2]=-e*l,c[6]=i*f+o,c[10]=k-m*f):"XZY"===b&&(k=g*j,i=g*e,o=d*j,m=d*e,c[0]=j*l,c[4]=-f,c[8]=e*l,c[1]=k*f+m,c[5]=g*l,c[9]=i*f-o,c[2]=o*f-i,c[6]=d*l,c[10]=m*f+k);return this},setRotationFromQuaternion:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w,g=c+c,j=d+d,l=e+e,a=c*g,k=c*j,c=c*l,i=d*j,d=d*l,e=e*l,g=f*g,j=f*j,f=f*l;b[0]=1-(i+e);b[4]=k-f;b[8]=c+j;b[1]=k+f;b[5]=1-(a+
e);b[9]=d-g;b[2]=c-j;b[6]=d+g;b[10]=1-(a+i);return this},compose:function(a,b,c){var d=this.elements,e=THREE.Matrix4.__m1,f=THREE.Matrix4.__m2;e.identity();e.setRotationFromQuaternion(b);f.makeScale(c.x,c.y,c.z);this.multiply(e,f);d[12]=a.x;d[13]=a.y;d[14]=a.z;return this},decompose:function(a,b,c){var d=this.elements,e=THREE.Matrix4.__v1,f=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;e.set(d[0],d[1],d[2]);f.set(d[4],d[5],d[6]);g.set(d[8],d[9],d[10]);a=a instanceof THREE.Vector3?a:new THREE.Vector3;b=
b instanceof THREE.Quaternion?b:new THREE.Quaternion;c=c instanceof THREE.Vector3?c:new THREE.Vector3;c.x=e.length();c.y=f.length();c.z=g.length();a.x=d[12];a.y=d[13];a.z=d[14];d=THREE.Matrix4.__m1;d.copy(this);d.elements[0]/=c.x;d.elements[1]/=c.x;d.elements[2]/=c.x;d.elements[4]/=c.y;d.elements[5]/=c.y;d.elements[6]/=c.y;d.elements[8]/=c.z;d.elements[9]/=c.z;d.elements[10]/=c.z;b.setFromRotationMatrix(d);return[a,b,c]},extractPosition:function(a){var b=this.elements,a=a.elements;b[12]=a[12];b[13]=
a[13];b[14]=a[14];return this},extractRotation:function(a){var b=this.elements,a=a.elements,c=THREE.Matrix4.__v1,d=1/c.set(a[0],a[1],a[2]).length(),e=1/c.set(a[4],a[5],a[6]).length(),c=1/c.set(a[8],a[9],a[10]).length();b[0]=a[0]*d;b[1]=a[1]*d;b[2]=a[2]*d;b[4]=a[4]*e;b[5]=a[5]*e;b[6]=a[6]*e;b[8]=a[8]*c;b[9]=a[9]*c;b[10]=a[10]*c;return this},translate:function(a){var b=this.elements,c=a.x,d=a.y,a=a.z;b[12]=b[0]*c+b[4]*d+b[8]*a+b[12];b[13]=b[1]*c+b[5]*d+b[9]*a+b[13];b[14]=b[2]*c+b[6]*d+b[10]*a+b[14];
b[15]=b[3]*c+b[7]*d+b[11]*a+b[15];return this},rotateX:function(a){var b=this.elements,c=b[4],d=b[5],e=b[6],f=b[7],g=b[8],j=b[9],l=b[10],k=b[11],i=Math.cos(a),a=Math.sin(a);b[4]=i*c+a*g;b[5]=i*d+a*j;b[6]=i*e+a*l;b[7]=i*f+a*k;b[8]=i*g-a*c;b[9]=i*j-a*d;b[10]=i*l-a*e;b[11]=i*k-a*f;return this},rotateY:function(a){var b=this.elements,c=b[0],d=b[1],e=b[2],f=b[3],g=b[8],j=b[9],l=b[10],k=b[11],i=Math.cos(a),a=Math.sin(a);b[0]=i*c-a*g;b[1]=i*d-a*j;b[2]=i*e-a*l;b[3]=i*f-a*k;b[8]=i*g+a*c;b[9]=i*j+a*d;b[10]=
i*l+a*e;b[11]=i*k+a*f;return this},rotateZ:function(a){var b=this.elements,c=b[0],d=b[1],e=b[2],f=b[3],g=b[4],j=b[5],l=b[6],k=b[7],i=Math.cos(a),a=Math.sin(a);b[0]=i*c+a*g;b[1]=i*d+a*j;b[2]=i*e+a*l;b[3]=i*f+a*k;b[4]=i*g-a*c;b[5]=i*j-a*d;b[6]=i*l-a*e;b[7]=i*k-a*f;return this},rotateByAxis:function(a,b){var c=this.elements;if(1===a.x&&0===a.y&&0===a.z)return this.rotateX(b);if(0===a.x&&1===a.y&&0===a.z)return this.rotateY(b);if(0===a.x&&0===a.y&&1===a.z)return this.rotateZ(b);var d=a.x,e=a.y,f=a.z,
g=Math.sqrt(d*d+e*e+f*f),d=d/g,e=e/g,f=f/g,g=d*d,j=e*e,l=f*f,k=Math.cos(b),i=Math.sin(b),o=1-k,m=d*e*o,s=d*f*o,o=e*f*o,d=d*i,n=e*i,i=f*i,f=g+(1-g)*k,g=m+i,e=s-n,m=m-i,j=j+(1-j)*k,i=o+d,s=s+n,o=o-d,l=l+(1-l)*k,k=c[0],d=c[1],n=c[2],u=c[3],p=c[4],r=c[5],A=c[6],w=c[7],v=c[8],B=c[9],y=c[10],x=c[11];c[0]=f*k+g*p+e*v;c[1]=f*d+g*r+e*B;c[2]=f*n+g*A+e*y;c[3]=f*u+g*w+e*x;c[4]=m*k+j*p+i*v;c[5]=m*d+j*r+i*B;c[6]=m*n+j*A+i*y;c[7]=m*u+j*w+i*x;c[8]=s*k+o*p+l*v;c[9]=s*d+o*r+l*B;c[10]=s*n+o*A+l*y;c[11]=s*u+o*w+l*x;
return this},scale:function(a){var b=this.elements,c=a.x,d=a.y,a=a.z;b[0]*=c;b[4]*=d;b[8]*=a;b[1]*=c;b[5]*=d;b[9]*=a;b[2]*=c;b[6]*=d;b[10]*=a;b[3]*=c;b[7]*=d;b[11]*=a;return this},getMaxScaleOnAxis:function(){var a=this.elements;return Math.sqrt(Math.max(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],Math.max(a[4]*a[4]+a[5]*a[5]+a[6]*a[6],a[8]*a[8]+a[9]*a[9]+a[10]*a[10])))},makeTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},makeRotationX:function(a){var b=Math.cos(a),a=Math.sin(a);
this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},makeRotationY:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},makeRotationZ:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),e=1-c,f=a.x,g=a.y,j=a.z,l=e*f,k=e*g;this.set(l*f+c,l*g-d*j,l*j+d*g,0,l*g+d*j,k*g+c,k*j-d*f,0,l*j-d*g,k*j+d*f,e*j*j+c,0,0,0,0,1);return this},makeScale:function(a,
b,c){this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},makeFrustum:function(a,b,c,d,e,f){var g=this.elements;g[0]=2*e/(b-a);g[4]=0;g[8]=(b+a)/(b-a);g[12]=0;g[1]=0;g[5]=2*e/(d-c);g[9]=(d+c)/(d-c);g[13]=0;g[2]=0;g[6]=0;g[10]=-(f+e)/(f-e);g[14]=-2*f*e/(f-e);g[3]=0;g[7]=0;g[11]=-1;g[15]=0;return this},makePerspective:function(a,b,c,d){var a=c*Math.tan(a*Math.PI/360),e=-a;return this.makeFrustum(e*b,a*b,e,a,c,d)},makeOrthographic:function(a,b,c,d,e,f){var g=this.elements,j=b-a,l=c-d,k=f-e;g[0]=2/
j;g[4]=0;g[8]=0;g[12]=-((b+a)/j);g[1]=0;g[5]=2/l;g[9]=0;g[13]=-((c+d)/l);g[2]=0;g[6]=0;g[10]=-2/k;g[14]=-((f+e)/k);g[3]=0;g[7]=0;g[11]=0;g[15]=1;return this},clone:function(){var a=this.elements;return new THREE.Matrix4(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15])}};THREE.Matrix4.__v1=new THREE.Vector3;THREE.Matrix4.__v2=new THREE.Vector3;THREE.Matrix4.__v3=new THREE.Vector3;THREE.Matrix4.__m1=new THREE.Matrix4;THREE.Matrix4.__m2=new THREE.Matrix4;
THREE.EventTarget=function(){var a={};this.addEventListener=function(b,c){void 0===a[b]&&(a[b]=[]);-1===a[b].indexOf(c)&&a[b].push(c)};this.dispatchEvent=function(b){for(var c in a[b.type])a[b.type][c](b)};this.removeEventListener=function(b,c){var d=a[b].indexOf(c);-1!==d&&a[b].splice(d,1)}};THREE.Frustum=function(){this.planes=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4]};
THREE.Frustum.prototype.setFromMatrix=function(a){var b=this.planes,c=a.elements,a=c[0],d=c[1],e=c[2],f=c[3],g=c[4],j=c[5],l=c[6],k=c[7],i=c[8],o=c[9],m=c[10],s=c[11],n=c[12],u=c[13],p=c[14],c=c[15];b[0].set(f-a,k-g,s-i,c-n);b[1].set(f+a,k+g,s+i,c+n);b[2].set(f+d,k+j,s+o,c+u);b[3].set(f-d,k-j,s-o,c-u);b[4].set(f-e,k-l,s-m,c-p);b[5].set(f+e,k+l,s+m,c+p);for(d=0;6>d;d++)a=b[d],a.divideScalar(Math.sqrt(a.x*a.x+a.y*a.y+a.z*a.z))};
THREE.Frustum.prototype.contains=function(a){for(var b=0,c=this.planes,b=a.matrixWorld,d=b.elements,a=-a.geometry.boundingSphere.radius*b.getMaxScaleOnAxis(),e=0;6>e;e++)if(b=c[e].x*d[12]+c[e].y*d[13]+c[e].z*d[14]+c[e].w,b<=a)return!1;return!0};THREE.Frustum.__v1=new THREE.Vector3;
(function(a){a.Ray=function(b,c,d,e){this.origin=b||new a.Vector3;this.direction=c||new a.Vector3;this.near=d||0;this.far=e||Infinity};var b=new a.Vector3,c=new a.Vector3,d=new a.Vector3,e=new a.Vector3,f=new a.Vector3,g=new a.Vector3,j=new a.Matrix4,l=function(a,b){return a.distance-b.distance},k=new a.Vector3,i=new a.Vector3,o=new a.Vector3,m=function(a,b,c){k.sub(c,a);var d=k.dot(b),a=i.add(a,o.copy(b).multiplyScalar(d));return c.distanceTo(a)},s=function(a,b,c,d){k.sub(d,b);i.sub(c,b);o.sub(a,
b);var a=k.dot(k),b=k.dot(i),c=k.dot(o),e=i.dot(i),d=i.dot(o),f=1/(a*e-b*b),e=(e*c-b*d)*f,a=(a*d-b*c)*f;return 0<=e&&0<=a&&1>e+a},n=function(i,l,n){var k,o;if(i instanceof a.Particle){k=m(l.origin,l.direction,i.matrixWorld.getPosition());if(k>i.scale.x)return n;o={distance:k,point:i.position,face:null,object:i};n.push(o)}else if(i instanceof a.Mesh){var u=i.geometry.boundingSphere.radius*i.matrixWorld.getMaxScaleOnAxis();k=m(l.origin,l.direction,i.matrixWorld.getPosition());if(k>u)return n;var y,
x,R=i.geometry,M=R.vertices,T,D,G;T=i.geometry.materials;D=i.material instanceof a.MeshFaceMaterial;var I,Q=l.precision;i.matrixRotationWorld.extractRotation(i.matrixWorld);b.copy(l.origin);j.getInverse(i.matrixWorld);c.copy(b);j.multiplyVector3(c);d.copy(l.direction);j.rotateAxis(d).normalize();u=0;for(y=R.faces.length;u<y;u++)if(o=R.faces[u],k=!0===D?T[o.materialIndex]:i.material,void 0!==k&&(G=k.side,e.sub(o.centroid,c),f=o.normal,k=d.dot(f),!(Math.abs(k)<Q)&&(x=f.dot(e)/k,!(0>x)&&(G===a.DoubleSide||
(G===a.FrontSide?0>k:0<k)))))if(g.add(c,d.multiplyScalar(x)),o instanceof a.Face3)k=M[o.a],x=M[o.b],G=M[o.c],s(g,k,x,G)&&(x=i.matrixWorld.multiplyVector3(g.clone()),k=b.distanceTo(x),k<l.near||k>l.far||(o={distance:k,point:x,face:o,faceIndex:u,object:i},n.push(o)));else if(o instanceof a.Face4&&(k=M[o.a],x=M[o.b],G=M[o.c],I=M[o.d],s(g,k,x,I)||s(g,x,G,I)))x=i.matrixWorld.multiplyVector3(g.clone()),k=b.distanceTo(x),k<l.near||k>l.far||(o={distance:k,point:x,face:o,faceIndex:u,object:i},n.push(o))}},
u=function(a,b,c){for(var a=a.getDescendants(),d=0,e=a.length;d<e;d++)n(a[d],b,c)};a.Ray.prototype.precision=1E-4;a.Ray.prototype.set=function(a,b){this.origin=a;this.direction=b};a.Ray.prototype.intersectObject=function(a,b){var c=[];!0===b&&u(a,this,c);n(a,this,c);c.sort(l);return c};a.Ray.prototype.intersectObjects=function(a,b){for(var c=[],d=0,e=a.length;d<e;d++)n(a[d],this,c),!0===b&&u(a[d],this,c);c.sort(l);return c}})(THREE);
THREE.Rectangle=function(){function a(){f=d-b;g=e-c}var b=0,c=0,d=0,e=0,f=0,g=0,j=!0;this.getX=function(){return b};this.getY=function(){return c};this.getWidth=function(){return f};this.getHeight=function(){return g};this.getLeft=function(){return b};this.getTop=function(){return c};this.getRight=function(){return d};this.getBottom=function(){return e};this.set=function(f,g,i,o){j=!1;b=f;c=g;d=i;e=o;a()};this.addPoint=function(f,g){!0===j?(j=!1,b=f,c=g,d=f,e=g):(b=b<f?b:f,c=c<g?c:g,d=d>f?d:f,e=e>
g?e:g);a()};this.add3Points=function(f,g,i,o,m,s){!0===j?(j=!1,b=f<i?f<m?f:m:i<m?i:m,c=g<o?g<s?g:s:o<s?o:s,d=f>i?f>m?f:m:i>m?i:m,e=g>o?g>s?g:s:o>s?o:s):(b=f<i?f<m?f<b?f:b:m<b?m:b:i<m?i<b?i:b:m<b?m:b,c=g<o?g<s?g<c?g:c:s<c?s:c:o<s?o<c?o:c:s<c?s:c,d=f>i?f>m?f>d?f:d:m>d?m:d:i>m?i>d?i:d:m>d?m:d,e=g>o?g>s?g>e?g:e:s>e?s:e:o>s?o>e?o:e:s>e?s:e);a()};this.addRectangle=function(f){!0===j?(j=!1,b=f.getLeft(),c=f.getTop(),d=f.getRight(),e=f.getBottom()):(b=b<f.getLeft()?b:f.getLeft(),c=c<f.getTop()?c:f.getTop(),
d=d>f.getRight()?d:f.getRight(),e=e>f.getBottom()?e:f.getBottom());a()};this.inflate=function(f){b-=f;c-=f;d+=f;e+=f;a()};this.minSelf=function(f){b=b>f.getLeft()?b:f.getLeft();c=c>f.getTop()?c:f.getTop();d=d<f.getRight()?d:f.getRight();e=e<f.getBottom()?e:f.getBottom();a()};this.intersects=function(a){return d<a.getLeft()||b>a.getRight()||e<a.getTop()||c>a.getBottom()?!1:!0};this.empty=function(){j=!0;e=d=c=b=0;a()};this.isEmpty=function(){return j}};
THREE.Math={clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},mapLinear:function(a,b,c,d,e){return d+(a-b)*(e-d)/(c-b)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(0.5-Math.random())},sign:function(a){return 0>a?-1:0<a?1:0}};
THREE.Object3D=function(){THREE.Object3DLibrary.push(this);this.id=THREE.Object3DIdCount++;this.name="";this.properties={};this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.eulerOrder=THREE.Object3D.defaultEulerOrder;this.scale=new THREE.Vector3(1,1,1);this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixRotationWorld=new THREE.Matrix4;this.matrixWorldNeedsUpdate=
this.matrixAutoUpdate=!0;this.quaternion=new THREE.Quaternion;this.useQuaternion=!1;this.boundRadius=0;this.boundRadiusScale=1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this._vector=new THREE.Vector3};
THREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(a){this.matrix.multiply(a,this.matrix);this.scale.getScaleFromMatrix(this.matrix);a=(new THREE.Matrix4).extractRotation(this.matrix);this.rotation.setEulerFromRotationMatrix(a,this.eulerOrder);this.position.getPositionFromMatrix(this.matrix)},translate:function(a,b){this.matrix.rotateAxis(b);this.position.addSelf(b.multiplyScalar(a))},translateX:function(a){this.translate(a,this._vector.set(1,0,0))},translateY:function(a){this.translate(a,
this._vector.set(0,1,0))},translateZ:function(a){this.translate(a,this._vector.set(0,0,1))},localToWorld:function(a){return this.matrixWorld.multiplyVector3(a)},worldToLocal:function(a){return THREE.Object3D.__m1.getInverse(this.matrixWorld).multiplyVector3(a)},lookAt:function(a){this.matrix.lookAt(a,this.position,this.up);this.rotationAutoUpdate&&this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder)},add:function(a){if(a===this)console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");
else if(a instanceof THREE.Object3D){void 0!==a.parent&&a.parent.remove(a);a.parent=this;this.children.push(a);for(var b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__addObject(a)}},remove:function(a){var b=this.children.indexOf(a);if(-1!==b){a.parent=void 0;this.children.splice(b,1);for(b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__removeObject(a)}},traverse:function(a){a(this);for(var b=0,c=this.children.length;b<c;b++)this.children[b].traverse(a)},
getChildByName:function(a,b){for(var c=0,d=this.children.length;c<d;c++){var e=this.children[c];if(e.name===a||!0===b&&(e=e.getChildByName(a,b),void 0!==e))return e}},getDescendants:function(a){void 0===a&&(a=[]);Array.prototype.push.apply(a,this.children);for(var b=0,c=this.children.length;b<c;b++)this.children[b].getDescendants(a);return a},updateMatrix:function(){this.matrix.setPosition(this.position);!1===this.useQuaternion?this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder):this.matrix.setRotationFromQuaternion(this.quaternion);
if(1!==this.scale.x||1!==this.scale.y||1!==this.scale.z)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,Math.max(this.scale.y,this.scale.z));this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===a)void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<
c;b++)this.children[b].updateMatrixWorld(a)},clone:function(a){void 0===a&&(a=new THREE.Object3D);a.name=this.name;a.up.copy(this.up);a.position.copy(this.position);a.rotation instanceof THREE.Vector3&&a.rotation.copy(this.rotation);a.eulerOrder=this.eulerOrder;a.scale.copy(this.scale);a.renderDepth=this.renderDepth;a.rotationAutoUpdate=this.rotationAutoUpdate;a.matrix.copy(this.matrix);a.matrixWorld.copy(this.matrixWorld);a.matrixRotationWorld.copy(this.matrixRotationWorld);a.matrixAutoUpdate=this.matrixAutoUpdate;
a.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate;a.quaternion.copy(this.quaternion);a.useQuaternion=this.useQuaternion;a.boundRadius=this.boundRadius;a.boundRadiusScale=this.boundRadiusScale;a.visible=this.visible;a.castShadow=this.castShadow;a.receiveShadow=this.receiveShadow;a.frustumCulled=this.frustumCulled;return a},deallocate:function(){var a=THREE.Object3DLibrary.indexOf(this);-1!==a&&THREE.Object3DLibrary.splice(a,1)}};THREE.Object3D.__m1=new THREE.Matrix4;
THREE.Object3D.defaultEulerOrder="XYZ";THREE.Object3DIdCount=0;THREE.Object3DLibrary=[];
THREE.Projector=function(){function a(){if(f===j){var a=new THREE.RenderableObject;g.push(a);j++;f++;return a}return g[f++]}function b(){if(k===o){var a=new THREE.RenderableVertex;i.push(a);o++;k++;return a}return i[k++]}function c(a,b){return b.z-a.z}function d(a,b){var c=0,d=1,f=a.z+a.w,e=b.z+b.w,g=-a.z+a.w,i=-b.z+b.w;if(0<=f&&0<=e&&0<=g&&0<=i)return!0;if(0>f&&0>e||0>g&&0>i)return!1;0>f?c=Math.max(c,f/(f-e)):0>e&&(d=Math.min(d,f/(f-e)));0>g?c=Math.max(c,g/(g-i)):0>i&&(d=Math.min(d,g/(g-i)));if(d<
c)return!1;a.lerpSelf(b,c);b.lerpSelf(a,1-d);return!0}var e,f,g=[],j=0,l,k,i=[],o=0,m,s,n=[],u=0,p,r=[],A=0,w,v,B=[],y=0,x,R,M=[],T=0,D={objects:[],sprites:[],lights:[],elements:[]},G=new THREE.Vector3,I=new THREE.Vector4,Q=new THREE.Matrix4,F=new THREE.Matrix4,N=new THREE.Frustum,C=new THREE.Vector4,E=new THREE.Vector4;this.projectVector=function(a,b){b.matrixWorldInverse.getInverse(b.matrixWorld);Q.multiply(b.projectionMatrix,b.matrixWorldInverse);Q.multiplyVector3(a);return a};this.unprojectVector=
function(a,b){b.projectionMatrixInverse.getInverse(b.projectionMatrix);Q.multiply(b.matrixWorld,b.projectionMatrixInverse);Q.multiplyVector3(a);return a};this.pickingRay=function(a,b){var c;a.z=-1;c=new THREE.Vector3(a.x,a.y,1);this.unprojectVector(a,b);this.unprojectVector(c,b);c.subSelf(a).normalize();return new THREE.Ray(a,c)};this.projectScene=function(g,j,o,Ea){var fa=j.near,P=j.far,Ga=!1,La,ra,ka,Z,da,Aa,ma,sa,wa,Ha,Ma,tb,ia,Za,$a,Sa;R=v=p=s=0;D.elements.length=0;g.updateMatrixWorld();void 0===
j.parent&&j.updateMatrixWorld();j.matrixWorldInverse.getInverse(j.matrixWorld);Q.multiply(j.projectionMatrix,j.matrixWorldInverse);N.setFromMatrix(Q);f=0;D.objects.length=0;D.sprites.length=0;D.lights.length=0;var ub=function(b){for(var c=0,d=b.children.length;c<d;c++){var f=b.children[c];if(!1!==f.visible){if(f instanceof THREE.Light)D.lights.push(f);else if(f instanceof THREE.Mesh||f instanceof THREE.Line){if(!1===f.frustumCulled||!0===N.contains(f))e=a(),e.object=f,null!==f.renderDepth?e.z=f.renderDepth:
(G.copy(f.matrixWorld.getPosition()),Q.multiplyVector3(G),e.z=G.z),D.objects.push(e)}else f instanceof THREE.Sprite||f instanceof THREE.Particle?(e=a(),e.object=f,null!==f.renderDepth?e.z=f.renderDepth:(G.copy(f.matrixWorld.getPosition()),Q.multiplyVector3(G),e.z=G.z),D.sprites.push(e)):(e=a(),e.object=f,null!==f.renderDepth?e.z=f.renderDepth:(G.copy(f.matrixWorld.getPosition()),Q.multiplyVector3(G),e.z=G.z),D.objects.push(e));ub(f)}}};ub(g);!0===o&&D.objects.sort(c);g=0;for(o=D.objects.length;g<
o;g++)if(sa=D.objects[g].object,wa=sa.matrixWorld,k=0,sa instanceof THREE.Mesh){Ha=sa.geometry;Ma=sa.geometry.materials;ka=Ha.vertices;tb=Ha.faces;Za=Ha.faceVertexUvs;Ha=sa.matrixRotationWorld.extractRotation(wa);$a=sa.material instanceof THREE.MeshFaceMaterial;La=0;for(ra=ka.length;La<ra;La++)l=b(),l.positionWorld.copy(ka[La]),wa.multiplyVector3(l.positionWorld),l.positionScreen.copy(l.positionWorld),Q.multiplyVector4(l.positionScreen),l.positionScreen.x/=l.positionScreen.w,l.positionScreen.y/=l.positionScreen.w,
l.visible=l.positionScreen.z>fa&&l.positionScreen.z<P;ka=0;for(La=tb.length;ka<La;ka++)if(ra=tb[ka],Sa=!0===$a?Ma[ra.materialIndex]:sa.material,void 0!==Sa){Aa=Sa.side;if(ra instanceof THREE.Face3)if(Z=i[ra.a],da=i[ra.b],ma=i[ra.c],!0===Z.visible&&!0===da.visible&&!0===ma.visible)if(Ga=0>(ma.positionScreen.x-Z.positionScreen.x)*(da.positionScreen.y-Z.positionScreen.y)-(ma.positionScreen.y-Z.positionScreen.y)*(da.positionScreen.x-Z.positionScreen.x),Aa===THREE.DoubleSide||Ga===(Aa===THREE.FrontSide))s===
u?(ia=new THREE.RenderableFace3,n.push(ia),u++,s++,m=ia):m=n[s++],m.v1.copy(Z),m.v2.copy(da),m.v3.copy(ma);else continue;else continue;else if(ra instanceof THREE.Face4)if(Z=i[ra.a],da=i[ra.b],ma=i[ra.c],ia=i[ra.d],!0===Z.visible&&!0===da.visible&&!0===ma.visible&&!0===ia.visible)if(Ga=0>(ia.positionScreen.x-Z.positionScreen.x)*(da.positionScreen.y-Z.positionScreen.y)-(ia.positionScreen.y-Z.positionScreen.y)*(da.positionScreen.x-Z.positionScreen.x)||0>(da.positionScreen.x-ma.positionScreen.x)*(ia.positionScreen.y-
ma.positionScreen.y)-(da.positionScreen.y-ma.positionScreen.y)*(ia.positionScreen.x-ma.positionScreen.x),Aa===THREE.DoubleSide||Ga===(Aa===THREE.FrontSide)){if(p===A){var cb=new THREE.RenderableFace4;r.push(cb);A++;p++;m=cb}else m=r[p++];m.v1.copy(Z);m.v2.copy(da);m.v3.copy(ma);m.v4.copy(ia)}else continue;else continue;m.normalWorld.copy(ra.normal);!1===Ga&&(Aa===THREE.BackSide||Aa===THREE.DoubleSide)&&m.normalWorld.negate();Ha.multiplyVector3(m.normalWorld);m.centroidWorld.copy(ra.centroid);wa.multiplyVector3(m.centroidWorld);
m.centroidScreen.copy(m.centroidWorld);Q.multiplyVector3(m.centroidScreen);ma=ra.vertexNormals;Z=0;for(da=ma.length;Z<da;Z++)ia=m.vertexNormalsWorld[Z],ia.copy(ma[Z]),!1===Ga&&(Aa===THREE.BackSide||Aa===THREE.DoubleSide)&&ia.negate(),Ha.multiplyVector3(ia);m.vertexNormalsLength=ma.length;Z=0;for(da=Za.length;Z<da;Z++)if(ia=Za[Z][ka],void 0!==ia){Aa=0;for(ma=ia.length;Aa<ma;Aa++)m.uvs[Z][Aa]=ia[Aa]}m.color=ra.color;m.material=Sa;m.z=m.centroidScreen.z;D.elements.push(m)}}else if(sa instanceof THREE.Line){F.multiply(Q,
wa);ka=sa.geometry.vertices;Z=b();Z.positionScreen.copy(ka[0]);F.multiplyVector4(Z.positionScreen);wa=sa.type===THREE.LinePieces?2:1;La=1;for(ra=ka.length;La<ra;La++)Z=b(),Z.positionScreen.copy(ka[La]),F.multiplyVector4(Z.positionScreen),0<(La+1)%wa||(da=i[k-2],C.copy(Z.positionScreen),E.copy(da.positionScreen),!0===d(C,E)&&(C.multiplyScalar(1/C.w),E.multiplyScalar(1/E.w),v===y?(Ma=new THREE.RenderableLine,B.push(Ma),y++,v++,w=Ma):w=B[v++],w.v1.positionScreen.copy(C),w.v2.positionScreen.copy(E),w.z=
Math.max(C.z,E.z),w.material=sa.material,D.elements.push(w)))}g=0;for(o=D.sprites.length;g<o;g++)sa=D.sprites[g].object,wa=sa.matrixWorld,sa instanceof THREE.Particle&&(I.set(wa.elements[12],wa.elements[13],wa.elements[14],1),Q.multiplyVector4(I),I.z/=I.w,0<I.z&&1>I.z&&(R===T?(fa=new THREE.RenderableParticle,M.push(fa),T++,R++,x=fa):x=M[R++],x.object=sa,x.x=I.x/I.w,x.y=I.y/I.w,x.z=I.z,x.rotation=sa.rotation.z,x.scale.x=sa.scale.x*Math.abs(x.x-(I.x+j.projectionMatrix.elements[0])/(I.w+j.projectionMatrix.elements[12])),
x.scale.y=sa.scale.y*Math.abs(x.y-(I.y+j.projectionMatrix.elements[5])/(I.w+j.projectionMatrix.elements[13])),x.material=sa.material,D.elements.push(x)));!0===Ea&&D.elements.sort(c);return D}};THREE.Quaternion=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};
THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w;return this},setFromEuler:function(a,b){var c=Math.cos(a.x/2),d=Math.cos(a.y/2),e=Math.cos(a.z/2),f=Math.sin(a.x/2),g=Math.sin(a.y/2),j=Math.sin(a.z/2);void 0===b||"XYZ"===b?(this.x=f*d*e+c*g*j,this.y=c*g*e-f*d*j,this.z=c*d*j+f*g*e,this.w=c*d*e-f*g*j):"YXZ"===b?(this.x=f*d*e+c*g*j,this.y=c*g*e-f*d*j,this.z=c*d*
j-f*g*e,this.w=c*d*e+f*g*j):"ZXY"===b?(this.x=f*d*e-c*g*j,this.y=c*g*e+f*d*j,this.z=c*d*j+f*g*e,this.w=c*d*e-f*g*j):"ZYX"===b?(this.x=f*d*e-c*g*j,this.y=c*g*e+f*d*j,this.z=c*d*j-f*g*e,this.w=c*d*e+f*g*j):"YZX"===b?(this.x=f*d*e+c*g*j,this.y=c*g*e+f*d*j,this.z=c*d*j-f*g*e,this.w=c*d*e-f*g*j):"XZY"===b&&(this.x=f*d*e-c*g*j,this.y=c*g*e-f*d*j,this.z=c*d*j+f*g*e,this.w=c*d*e+f*g*j);return this},setFromAxisAngle:function(a,b){var c=b/2,d=Math.sin(c);this.x=a.x*d;this.y=a.y*d;this.z=a.z*d;this.w=Math.cos(c);
return this},setFromRotationMatrix:function(a){var b=a.elements,c=b[0],a=b[4],d=b[8],e=b[1],f=b[5],g=b[9],j=b[2],l=b[6],b=b[10],k=c+f+b;0<k?(c=0.5/Math.sqrt(k+1),this.w=0.25/c,this.x=(l-g)*c,this.y=(d-j)*c,this.z=(e-a)*c):c>f&&c>b?(c=2*Math.sqrt(1+c-f-b),this.w=(l-g)/c,this.x=0.25*c,this.y=(a+e)/c,this.z=(d+j)/c):f>b?(c=2*Math.sqrt(1+f-c-b),this.w=(d-j)/c,this.x=(a+e)/c,this.y=0.25*c,this.z=(g+l)/c):(c=2*Math.sqrt(1+b-c-f),this.w=(e-a)/c,this.x=(d+j)/c,this.y=(g+l)/c,this.z=0.25*c);return this},calculateW:function(){this.w=
-Math.sqrt(Math.abs(1-this.x*this.x-this.y*this.y-this.z*this.z));return this},inverse:function(){this.x*=-1;this.y*=-1;this.z*=-1;return this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);0===a?this.w=this.z=this.y=this.x=0:(a=1/a,this.x*=a,this.y*=a,this.z*=a,this.w*=a);return this},multiply:function(a,b){var c=a.x,d=a.y,e=a.z,f=a.w,g=b.x,j=b.y,l=b.z,k=b.w;
this.x=c*k+d*l-e*j+f*g;this.y=-c*l+d*k+e*g+f*j;this.z=c*j-d*g+e*k+f*l;this.w=-c*g-d*j-e*l+f*k;return this},multiplySelf:function(a){var b=this.x,c=this.y,d=this.z,e=this.w,f=a.x,g=a.y,j=a.z,a=a.w;this.x=b*a+e*f+c*j-d*g;this.y=c*a+e*g+d*f-b*j;this.z=d*a+e*j+b*g-c*f;this.w=e*a-b*f-c*g-d*j;return this},multiplyVector3:function(a,b){b||(b=a);var c=a.x,d=a.y,e=a.z,f=this.x,g=this.y,j=this.z,l=this.w,k=l*c+g*e-j*d,i=l*d+j*c-f*e,o=l*e+f*d-g*c,c=-f*c-g*d-j*e;b.x=k*l+c*-f+i*-j-o*-g;b.y=i*l+c*-g+o*-f-k*-j;
b.z=o*l+c*-j+k*-g-i*-f;return b},slerpSelf:function(a,b){var c=this.x,d=this.y,e=this.z,f=this.w,g=f*a.w+c*a.x+d*a.y+e*a.z;0>g?(this.w=-a.w,this.x=-a.x,this.y=-a.y,this.z=-a.z,g=-g):this.copy(a);if(1<=g)return this.w=f,this.x=c,this.y=d,this.z=e,this;var j=Math.acos(g),l=Math.sqrt(1-g*g);if(0.001>Math.abs(l))return this.w=0.5*(f+this.w),this.x=0.5*(c+this.x),this.y=0.5*(d+this.y),this.z=0.5*(e+this.z),this;g=Math.sin((1-b)*j)/l;j=Math.sin(b*j)/l;this.w=f*g+this.w*j;this.x=c*g+this.x*j;this.y=d*g+
this.y*j;this.z=e*g+this.z*j;return this},clone:function(){return new THREE.Quaternion(this.x,this.y,this.z,this.w)}};
THREE.Quaternion.slerp=function(a,b,c,d){var e=a.w*b.w+a.x*b.x+a.y*b.y+a.z*b.z;0>e?(c.w=-b.w,c.x=-b.x,c.y=-b.y,c.z=-b.z,e=-e):c.copy(b);if(1<=Math.abs(e))return c.w=a.w,c.x=a.x,c.y=a.y,c.z=a.z,c;var b=Math.acos(e),f=Math.sqrt(1-e*e);if(0.001>Math.abs(f))return c.w=0.5*(a.w+c.w),c.x=0.5*(a.x+c.x),c.y=0.5*(a.y+c.y),c.z=0.5*(a.z+c.z),c;e=Math.sin((1-d)*b)/f;d=Math.sin(d*b)/f;c.w=a.w*e+c.w*d;c.x=a.x*e+c.x*d;c.y=a.y*e+c.y*d;c.z=a.z*e+c.z*d;return c};
THREE.Vertex=function(a){console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead.");return a};THREE.Face3=function(a,b,c,d,e,f){this.a=a;this.b=b;this.c=c;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=d instanceof Array?d:[];this.color=e instanceof THREE.Color?e:new THREE.Color;this.vertexColors=e instanceof Array?e:[];this.vertexTangents=[];this.materialIndex=f;this.centroid=new THREE.Vector3};
THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var a=new THREE.Face3(this.a,this.b,this.c);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b,c;b=0;for(c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();
return a}};THREE.Face4=function(a,b,c,d,e,f,g){this.a=a;this.b=b;this.c=c;this.d=d;this.normal=e instanceof THREE.Vector3?e:new THREE.Vector3;this.vertexNormals=e instanceof Array?e:[];this.color=f instanceof THREE.Color?f:new THREE.Color;this.vertexColors=f instanceof Array?f:[];this.vertexTangents=[];this.materialIndex=g;this.centroid=new THREE.Vector3};
THREE.Face4.prototype={constructor:THREE.Face4,clone:function(){var a=new THREE.Face4(this.a,this.b,this.c,this.d);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b,c;b=0;for(c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();
return a}};THREE.UV=function(a,b){this.u=a||0;this.v=b||0};THREE.UV.prototype={constructor:THREE.UV,set:function(a,b){this.u=a;this.v=b;return this},copy:function(a){this.u=a.u;this.v=a.v;return this},lerpSelf:function(a,b){this.u+=(a.u-this.u)*b;this.v+=(a.v-this.v)*b;return this},clone:function(){return new THREE.UV(this.u,this.v)}};
THREE.Geometry=function(){THREE.GeometryLibrary.push(this);this.id=THREE.GeometryIdCount++;this.name="";this.vertices=[];this.colors=[];this.materials=[];this.faces=[];this.faceUvs=[[]];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.dynamic=!0;this.colorsNeedUpdate=this.tangentsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=
this.verticesNeedUpdate=!1};
THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){var b=new THREE.Matrix4;b.extractRotation(a);for(var c=0,d=this.vertices.length;c<d;c++)a.multiplyVector3(this.vertices[c]);c=0;for(d=this.faces.length;c<d;c++){var e=this.faces[c];b.multiplyVector3(e.normal);for(var f=0,g=e.vertexNormals.length;f<g;f++)b.multiplyVector3(e.vertexNormals[f]);a.multiplyVector3(e.centroid)}},computeCentroids:function(){var a,b,c;a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c.centroid.set(0,
0,0),c instanceof THREE.Face3?(c.centroid.addSelf(this.vertices[c.a]),c.centroid.addSelf(this.vertices[c.b]),c.centroid.addSelf(this.vertices[c.c]),c.centroid.divideScalar(3)):c instanceof THREE.Face4&&(c.centroid.addSelf(this.vertices[c.a]),c.centroid.addSelf(this.vertices[c.b]),c.centroid.addSelf(this.vertices[c.c]),c.centroid.addSelf(this.vertices[c.d]),c.centroid.divideScalar(4))},computeFaceNormals:function(){var a,b,c,d,e,f,g=new THREE.Vector3,j=new THREE.Vector3;a=0;for(b=this.faces.length;a<
b;a++)c=this.faces[a],d=this.vertices[c.a],e=this.vertices[c.b],f=this.vertices[c.c],g.sub(f,e),j.sub(d,e),g.crossSelf(j),g.isZero()||g.normalize(),c.normal.copy(g)},computeVertexNormals:function(){var a,b,c,d;if(void 0===this.__tmpVertices){d=this.__tmpVertices=Array(this.vertices.length);a=0;for(b=this.vertices.length;a<b;a++)d[a]=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof THREE.Face3?c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]:
c instanceof THREE.Face4&&(c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3])}else{d=this.__tmpVertices;a=0;for(b=this.vertices.length;a<b;a++)d[a].set(0,0,0)}a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof THREE.Face3?(d[c.a].addSelf(c.normal),d[c.b].addSelf(c.normal),d[c.c].addSelf(c.normal)):c instanceof THREE.Face4&&(d[c.a].addSelf(c.normal),d[c.b].addSelf(c.normal),d[c.c].addSelf(c.normal),d[c.d].addSelf(c.normal));a=0;for(b=this.vertices.length;a<
b;a++)d[a].normalize();a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof THREE.Face3?(c.vertexNormals[0].copy(d[c.a]),c.vertexNormals[1].copy(d[c.b]),c.vertexNormals[2].copy(d[c.c])):c instanceof THREE.Face4&&(c.vertexNormals[0].copy(d[c.a]),c.vertexNormals[1].copy(d[c.b]),c.vertexNormals[2].copy(d[c.c]),c.vertexNormals[3].copy(d[c.d]))},computeMorphNormals:function(){var a,b,c,d,e;c=0;for(d=this.faces.length;c<d;c++){e=this.faces[c];e.__originalFaceNormal?e.__originalFaceNormal.copy(e.normal):
e.__originalFaceNormal=e.normal.clone();e.__originalVertexNormals||(e.__originalVertexNormals=[]);a=0;for(b=e.vertexNormals.length;a<b;a++)e.__originalVertexNormals[a]?e.__originalVertexNormals[a].copy(e.vertexNormals[a]):e.__originalVertexNormals[a]=e.vertexNormals[a].clone()}var f=new THREE.Geometry;f.faces=this.faces;a=0;for(b=this.morphTargets.length;a<b;a++){if(!this.morphNormals[a]){this.morphNormals[a]={};this.morphNormals[a].faceNormals=[];this.morphNormals[a].vertexNormals=[];var g=this.morphNormals[a].faceNormals,
j=this.morphNormals[a].vertexNormals,l,k;c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],l=new THREE.Vector3,k=e instanceof THREE.Face3?{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3}:{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3,d:new THREE.Vector3},g.push(l),j.push(k)}g=this.morphNormals[a];f.vertices=this.morphTargets[a].vertices;f.computeFaceNormals();f.computeVertexNormals();c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],l=g.faceNormals[c],k=g.vertexNormals[c],
l.copy(e.normal),e instanceof THREE.Face3?(k.a.copy(e.vertexNormals[0]),k.b.copy(e.vertexNormals[1]),k.c.copy(e.vertexNormals[2])):(k.a.copy(e.vertexNormals[0]),k.b.copy(e.vertexNormals[1]),k.c.copy(e.vertexNormals[2]),k.d.copy(e.vertexNormals[3]))}c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],e.normal=e.__originalFaceNormal,e.vertexNormals=e.__originalVertexNormals},computeTangents:function(){function a(a,b,c,d,f,e,I){j=a.vertices[b];l=a.vertices[c];k=a.vertices[d];i=g[f];o=g[e];m=g[I];s=l.x-
j.x;n=k.x-j.x;u=l.y-j.y;p=k.y-j.y;r=l.z-j.z;A=k.z-j.z;w=o.u-i.u;v=m.u-i.u;B=o.v-i.v;y=m.v-i.v;x=1/(w*y-v*B);D.set((y*s-B*n)*x,(y*u-B*p)*x,(y*r-B*A)*x);G.set((w*n-v*s)*x,(w*p-v*u)*x,(w*A-v*r)*x);M[b].addSelf(D);M[c].addSelf(D);M[d].addSelf(D);T[b].addSelf(G);T[c].addSelf(G);T[d].addSelf(G)}var b,c,d,e,f,g,j,l,k,i,o,m,s,n,u,p,r,A,w,v,B,y,x,R,M=[],T=[],D=new THREE.Vector3,G=new THREE.Vector3,I=new THREE.Vector3,Q=new THREE.Vector3,F=new THREE.Vector3;b=0;for(c=this.vertices.length;b<c;b++)M[b]=new THREE.Vector3,
T[b]=new THREE.Vector3;b=0;for(c=this.faces.length;b<c;b++)f=this.faces[b],g=this.faceVertexUvs[0][b],f instanceof THREE.Face3?a(this,f.a,f.b,f.c,0,1,2):f instanceof THREE.Face4&&(a(this,f.a,f.b,f.d,0,1,3),a(this,f.b,f.c,f.d,1,2,3));var N=["a","b","c","d"];b=0;for(c=this.faces.length;b<c;b++){f=this.faces[b];for(d=0;d<f.vertexNormals.length;d++)F.copy(f.vertexNormals[d]),e=f[N[d]],R=M[e],I.copy(R),I.subSelf(F.multiplyScalar(F.dot(R))).normalize(),Q.cross(f.vertexNormals[d],R),e=Q.dot(T[e]),e=0>e?
-1:1,f.vertexTangents[d]=new THREE.Vector4(I.x,I.y,I.z,e)}this.hasTangents=!0},computeBoundingBox:function(){this.boundingBox||(this.boundingBox={min:new THREE.Vector3,max:new THREE.Vector3});if(0<this.vertices.length){var a;a=this.vertices[0];this.boundingBox.min.copy(a);this.boundingBox.max.copy(a);for(var b=this.boundingBox.min,c=this.boundingBox.max,d=1,e=this.vertices.length;d<e;d++)(a=this.vertices[d],a.x<b.x?b.x=a.x:a.x>c.x&&(c.x=a.x),a.y<b.y?b.y=a.y:a.y>c.y&&(c.y=a.y),a.z<b.z)?b.z=a.z:a.z>
c.z&&(c.z=a.z)}else this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){var a=0;null===this.boundingSphere&&(this.boundingSphere={radius:0});for(var b=0,c=this.vertices.length;b<c;b++){var d=this.vertices[b].lengthSq();d>a&&(a=d)}this.boundingSphere.radius=Math.sqrt(a)},mergeVertices:function(){var a={},b=[],c=[],d,e=Math.pow(10,4),f,g,j,l;f=0;for(g=this.vertices.length;f<g;f++)d=this.vertices[f],d=[Math.round(d.x*e),Math.round(d.y*e),Math.round(d.z*e)].join("_"),
void 0===a[d]?(a[d]=f,b.push(this.vertices[f]),c[f]=b.length-1):c[f]=c[a[d]];f=0;for(g=this.faces.length;f<g;f++)if(a=this.faces[f],a instanceof THREE.Face3)a.a=c[a.a],a.b=c[a.b],a.c=c[a.c];else if(a instanceof THREE.Face4){a.a=c[a.a];a.b=c[a.b];a.c=c[a.c];a.d=c[a.d];d=[a.a,a.b,a.c,a.d];for(e=3;0<e;e--)if(d.indexOf(a["abcd"[e]])!==e){d.splice(e,1);this.faces[f]=new THREE.Face3(d[0],d[1],d[2],a.normal,a.color,a.materialIndex);d=0;for(j=this.faceVertexUvs.length;d<j;d++)(l=this.faceVertexUvs[d][f])&&
l.splice(e,1);this.faces[f].vertexColors=a.vertexColors;break}}c=this.vertices.length-b.length;this.vertices=b;return c},clone:function(){},deallocate:function(){var a=THREE.GeometryLibrary.indexOf(this);-1!==a&&THREE.GeometryLibrary.splice(a,1)}};THREE.GeometryIdCount=0;THREE.GeometryLibrary=[];
THREE.BufferGeometry=function(){THREE.GeometryLibrary.push(this);this.id=THREE.GeometryIdCount++;this.attributes={};this.dynamic=!1;this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.morphTargets=[]};
THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,applyMatrix:function(a){var b,c;this.attributes.position&&(b=this.attributes.position.array);this.attributes.normal&&(c=this.attributes.normal.array);void 0!==b&&(a.multiplyVector3Array(b),this.verticesNeedUpdate=!0);void 0!==c&&(b=new THREE.Matrix4,b.extractRotation(a),b.multiplyVector3Array(c),this.normalsNeedUpdate=!0)},computeBoundingBox:function(){this.boundingBox||(this.boundingBox={min:new THREE.Vector3(Infinity,Infinity,Infinity),
max:new THREE.Vector3(-Infinity,-Infinity,-Infinity)});var a=this.attributes.position.array;if(a)for(var b=this.boundingBox,c,d,e,f=0,g=a.length;f<g;f+=3)(c=a[f],d=a[f+1],e=a[f+2],c<b.min.x?b.min.x=c:c>b.max.x&&(b.max.x=c),d<b.min.y?b.min.y=d:d>b.max.y&&(b.max.y=d),e<b.min.z)?b.min.z=e:e>b.max.z&&(b.max.z=e);if(void 0===a||0===a.length)this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){this.boundingSphere||(this.boundingSphere={radius:0});var a=this.attributes.position.array;
if(a){for(var b,c=0,d,e,f=0,g=a.length;f<g;f+=3)b=a[f],d=a[f+1],e=a[f+2],b=b*b+d*d+e*e,b>c&&(c=b);this.boundingSphere.radius=Math.sqrt(c)}},computeVertexNormals:function(){if(this.attributes.position&&this.attributes.index){var a,b,c,d;a=this.attributes.position.array.length;if(void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(a),numItems:a};else{a=0;for(b=this.attributes.normal.array.length;a<b;a++)this.attributes.normal.array[a]=0}var e=this.offsets,f=this.attributes.index.array,
g=this.attributes.position.array,j=this.attributes.normal.array,l,k,i,o,m,s,n=new THREE.Vector3,u=new THREE.Vector3,p=new THREE.Vector3,r=new THREE.Vector3,A=new THREE.Vector3;c=0;for(d=e.length;c<d;++c){b=e[c].start;l=e[c].count;var w=e[c].index;a=b;for(b+=l;a<b;a+=3)l=w+f[a],k=w+f[a+1],i=w+f[a+2],o=g[3*l],m=g[3*l+1],s=g[3*l+2],n.set(o,m,s),o=g[3*k],m=g[3*k+1],s=g[3*k+2],u.set(o,m,s),o=g[3*i],m=g[3*i+1],s=g[3*i+2],p.set(o,m,s),r.sub(p,u),A.sub(n,u),r.crossSelf(A),j[3*l]+=r.x,j[3*l+1]+=r.y,j[3*l+
2]+=r.z,j[3*k]+=r.x,j[3*k+1]+=r.y,j[3*k+2]+=r.z,j[3*i]+=r.x,j[3*i+1]+=r.y,j[3*i+2]+=r.z}a=0;for(b=j.length;a<b;a+=3)o=j[a],m=j[a+1],s=j[a+2],c=1/Math.sqrt(o*o+m*m+s*s),j[a]*=c,j[a+1]*=c,j[a+2]*=c;this.normalsNeedUpdate=!0}},computeTangents:function(){function a(a){ha.x=d[3*a];ha.y=d[3*a+1];ha.z=d[3*a+2];Y.copy(ha);fa=l[a];E.copy(fa);E.subSelf(ha.multiplyScalar(ha.dot(fa))).normalize();W.cross(Y,fa);P=W.dot(k[a]);Ea=0>P?-1:1;j[4*a]=E.x;j[4*a+1]=E.y;j[4*a+2]=E.z;j[4*a+3]=Ea}if(void 0===this.attributes.index||
void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");else{var b=this.attributes.index.array,c=this.attributes.position.array,d=this.attributes.normal.array,e=this.attributes.uv.array,f=c.length/3;if(void 0===this.attributes.tangent){var g=4*f;this.attributes.tangent={itemSize:4,array:new Float32Array(g),numItems:g}}for(var j=this.attributes.tangent.array,
l=[],k=[],g=0;g<f;g++)l[g]=new THREE.Vector3,k[g]=new THREE.Vector3;var i,o,m,s,n,u,p,r,A,w,v,B,y,x,R,f=new THREE.Vector3,g=new THREE.Vector3,M,T,D,G,I,Q,F,N=this.offsets;D=0;for(G=N.length;D<G;++D){T=N[D].start;I=N[D].count;var C=N[D].index;M=T;for(T+=I;M<T;M+=3)I=C+b[M],Q=C+b[M+1],F=C+b[M+2],i=c[3*I],o=c[3*I+1],m=c[3*I+2],s=c[3*Q],n=c[3*Q+1],u=c[3*Q+2],p=c[3*F],r=c[3*F+1],A=c[3*F+2],w=e[2*I],v=e[2*I+1],B=e[2*Q],y=e[2*Q+1],x=e[2*F],R=e[2*F+1],s-=i,i=p-i,n-=o,o=r-o,u-=m,m=A-m,B-=w,w=x-w,y-=v,v=R-
v,R=1/(B*v-w*y),f.set((v*s-y*i)*R,(v*n-y*o)*R,(v*u-y*m)*R),g.set((B*i-w*s)*R,(B*o-w*n)*R,(B*m-w*u)*R),l[I].addSelf(f),l[Q].addSelf(f),l[F].addSelf(f),k[I].addSelf(g),k[Q].addSelf(g),k[F].addSelf(g)}var E=new THREE.Vector3,W=new THREE.Vector3,ha=new THREE.Vector3,Y=new THREE.Vector3,Ea,fa,P;D=0;for(G=N.length;D<G;++D){T=N[D].start;I=N[D].count;C=N[D].index;M=T;for(T+=I;M<T;M+=3)I=C+b[M],Q=C+b[M+1],F=C+b[M+2],a(I),a(Q),a(F)}this.tangentsNeedUpdate=this.hasTangents=!0}}};
THREE.Spline=function(a){function b(a,b,c,d,f,e,g){a=0.5*(c-a);d=0.5*(d-b);return(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*e+a*f+b}this.points=a;var c=[],d={x:0,y:0,z:0},e,f,g,j,l,k,i,o,m;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){e=(this.points.length-1)*a;f=Math.floor(e);g=e-f;c[0]=0===f?f:f-1;c[1]=f;c[2]=f>this.points.length-2?this.points.length-1:f+1;c[3]=f>this.points.length-3?this.points.length-1:
f+2;k=this.points[c[0]];i=this.points[c[1]];o=this.points[c[2]];m=this.points[c[3]];j=g*g;l=g*j;d.x=b(k.x,i.x,o.x,m.x,g,j,l);d.y=b(k.y,i.y,o.y,m.y,g,j,l);d.z=b(k.z,i.z,o.z,m.z,g,j,l);return d};this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;a<c;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d};this.getLength=function(a){var b,c,d,f=b=b=0,e=new THREE.Vector3,g=new THREE.Vector3,i=[],j=0;i[0]=0;a||(a=100);c=this.points.length*a;e.copy(this.points[0]);for(a=1;a<c;a++)b=
a/c,d=this.getPoint(b),g.copy(d),j+=g.distanceTo(e),e.copy(d),b*=this.points.length-1,b=Math.floor(b),b!=f&&(i[b]=j,f=b);i[i.length]=j;return{chunks:i,total:j}};this.reparametrizeByArcLength=function(a){var b,c,d,f,e,g,i=[],j=new THREE.Vector3,l=this.getLength();i.push(j.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=l.chunks[b]-l.chunks[b-1];g=Math.ceil(a*c/l.total);f=(b-1)/(this.points.length-1);e=b/(this.points.length-1);for(c=1;c<g-1;c++)d=f+c*(1/g)*(e-f),d=this.getPoint(d),
i.push(j.copy(d).clone());i.push(j.copy(this.points[b]).clone())}this.points=i}};THREE.Camera=function(){THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4;this.projectionMatrixInverse=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.lookAt=function(a){this.matrix.lookAt(this.position,a,this.up);!0===this.rotationAutoUpdate&&this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder)};
THREE.OrthographicCamera=function(a,b,c,d,e,f){THREE.Camera.call(this);this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=void 0!==e?e:0.1;this.far=void 0!==f?f:2E3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)};
THREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this);this.fov=void 0!==a?a:50;this.aspect=void 0!==b?b:1;this.near=void 0!==c?c:0.1;this.far=void 0!==d?d:2E3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.setLens=function(a,b){void 0===b&&(b=24);this.fov=2*Math.atan(b/(2*a))*(180/Math.PI);this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,e,f){this.fullWidth=a;this.fullHeight=b;this.x=c;this.y=d;this.width=e;this.height=f;this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var a=this.fullWidth/this.fullHeight,b=Math.tan(this.fov*Math.PI/360)*this.near,c=-b,d=a*c,a=Math.abs(a*b-d),c=Math.abs(b-c);this.projectionMatrix.makeFrustum(d+this.x*a/this.fullWidth,d+(this.x+this.width)*a/this.fullWidth,b-(this.y+this.height)*c/this.fullHeight,b-this.y*c/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)};
THREE.Light=function(a){THREE.Object3D.call(this);this.color=new THREE.Color(a)};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);
THREE.DirectionalLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraLeft=-500;this.shadowCameraTop=this.shadowCameraRight=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCascade=
!1;this.shadowCascadeOffset=new THREE.Vector3(0,0,-1E3);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,0.99,0.998];this.shadowCascadeFarZ=[0.99,0.998,1];this.shadowCascadeArray=[];this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);
THREE.HemisphereLight=function(a,b,c){THREE.Light.call(this,a);this.groundColor=new THREE.Color(b);this.position=new THREE.Vector3(0,100,0);this.intensity=void 0!==c?c:1};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,0,0);this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);
THREE.SpotLight=function(a,b,c,d,e){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0;this.angle=void 0!==d?d:Math.PI/2;this.exponent=void 0!==e?e:10;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraFov=50;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowMatrix=this.shadowCamera=
this.shadowMapSize=this.shadowMap=null};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?THREE.Loader.prototype.addStatusElement():null;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};
THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var a=document.createElement("div");a.style.position="absolute";a.style.right="0px";a.style.top="0px";a.style.fontSize="0.8em";a.style.textAlign="left";a.style.background="rgba(0,0,0,0.25)";a.style.color="#fff";a.style.width="120px";a.style.padding="0.5em 0.5em 0.5em 0.5em";a.style.zIndex=1E3;a.innerHTML="Loading ...";return a},updateProgress:function(a){var b="Loaded ",b=a.total?b+((100*a.loaded/
a.total).toFixed(0)+"%"):b+((a.loaded/1E3).toFixed(2)+" KB");this.statusDomElement.innerHTML=b},extractUrlBase:function(a){a=a.split("/");a.pop();return(1>a.length?".":a.join("/"))+"/"},initMaterials:function(a,b,c){a.materials=[];for(var d=0;d<b.length;++d)a.materials[d]=THREE.Loader.prototype.createMaterial(b[d],c)},hasNormals:function(a){var b,c,d=a.materials.length;for(c=0;c<d;c++)if(b=a.materials[c],b instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(a,b){function c(a){a=
Math.log(a)/Math.LN2;return Math.floor(a)==a}function d(a){a=Math.log(a)/Math.LN2;return Math.pow(2,Math.round(a))}function e(a,f,e,j,l,k,p){var r=e.toLowerCase().endsWith(".dds"),A=b+"/"+e;if(r){var w=THREE.ImageUtils.loadCompressedTexture(A);a[f]=w}else w=document.createElement("canvas"),a[f]=new THREE.Texture(w);a[f].sourceFile=e;if(j&&(a[f].repeat.set(j[0],j[1]),1!==j[0]&&(a[f].wrapS=THREE.RepeatWrapping),1!==j[1]))a[f].wrapT=THREE.RepeatWrapping;l&&a[f].offset.set(l[0],l[1]);if(k&&(e={repeat:THREE.RepeatWrapping,
mirror:THREE.MirroredRepeatWrapping},void 0!==e[k[0]]&&(a[f].wrapS=e[k[0]]),void 0!==e[k[1]]))a[f].wrapT=e[k[1]];p&&(a[f].anisotropy=p);if(!r){var v=a[f],a=new Image;a.onload=function(){if(!c(this.width)||!c(this.height)){var a=d(this.width),b=d(this.height);v.image.width=a;v.image.height=b;v.image.getContext("2d").drawImage(this,0,0,a,b)}else v.image=this;v.needsUpdate=true};a.crossOrigin=g.crossOrigin;a.src=A}}function f(a){return(255*a[0]<<16)+(255*a[1]<<8)+255*a[2]}var g=this,j="MeshLambertMaterial",
l={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(a.shading){var k=a.shading.toLowerCase();"phong"===k?j="MeshPhongMaterial":"basic"===k&&(j="MeshBasicMaterial")}void 0!==a.blending&&void 0!==THREE[a.blending]&&(l.blending=THREE[a.blending]);if(void 0!==a.transparent||1>a.opacity)l.transparent=a.transparent;void 0!==a.depthTest&&(l.depthTest=a.depthTest);void 0!==a.depthWrite&&(l.depthWrite=a.depthWrite);void 0!==a.visible&&(l.visible=a.visible);void 0!==
a.flipSided&&(l.side=THREE.BackSide);void 0!==a.doubleSided&&(l.side=THREE.DoubleSide);void 0!==a.wireframe&&(l.wireframe=a.wireframe);void 0!==a.vertexColors&&("face"===a.vertexColors?l.vertexColors=THREE.FaceColors:a.vertexColors&&(l.vertexColors=THREE.VertexColors));a.colorDiffuse?l.color=f(a.colorDiffuse):a.DbgColor&&(l.color=a.DbgColor);a.colorSpecular&&(l.specular=f(a.colorSpecular));a.colorAmbient&&(l.ambient=f(a.colorAmbient));a.transparency&&(l.opacity=a.transparency);a.specularCoef&&(l.shininess=
a.specularCoef);a.mapDiffuse&&b&&e(l,"map",a.mapDiffuse,a.mapDiffuseRepeat,a.mapDiffuseOffset,a.mapDiffuseWrap,a.mapDiffuseAnisotropy);a.mapLight&&b&&e(l,"lightMap",a.mapLight,a.mapLightRepeat,a.mapLightOffset,a.mapLightWrap,a.mapLightAnisotropy);a.mapBump&&b&&e(l,"bumpMap",a.mapBump,a.mapBumpRepeat,a.mapBumpOffset,a.mapBumpWrap,a.mapBumpAnisotropy);a.mapNormal&&b&&e(l,"normalMap",a.mapNormal,a.mapNormalRepeat,a.mapNormalOffset,a.mapNormalWrap,a.mapNormalAnisotropy);a.mapSpecular&&b&&e(l,"specularMap",
a.mapSpecular,a.mapSpecularRepeat,a.mapSpecularOffset,a.mapSpecularWrap,a.mapSpecularAnisotropy);a.mapBumpScale&&(l.bumpScale=a.mapBumpScale);a.mapNormal?(j=THREE.ShaderUtils.lib.normal,k=THREE.UniformsUtils.clone(j.uniforms),k.tNormal.value=l.normalMap,a.mapNormalFactor&&k.uNormalScale.value.set(a.mapNormalFactor,a.mapNormalFactor),l.map&&(k.tDiffuse.value=l.map,k.enableDiffuse.value=!0),l.specularMap&&(k.tSpecular.value=l.specularMap,k.enableSpecular.value=!0),l.lightMap&&(k.tAO.value=l.lightMap,
k.enableAO.value=!0),k.uDiffuseColor.value.setHex(l.color),k.uSpecularColor.value.setHex(l.specular),k.uAmbientColor.value.setHex(l.ambient),k.uShininess.value=l.shininess,void 0!==l.opacity&&(k.uOpacity.value=l.opacity),l=new THREE.ShaderMaterial({fragmentShader:j.fragmentShader,vertexShader:j.vertexShader,uniforms:k,lights:!0,fog:!0})):l=new THREE[j](l);void 0!==a.DbgName&&(l.name=a.DbgName);return l}};THREE.BinaryLoader=function(a){THREE.Loader.call(this,a)};THREE.BinaryLoader.prototype=Object.create(THREE.Loader.prototype);
THREE.BinaryLoader.prototype.load=function(a,b,c,d){var c=c?c:this.extractUrlBase(a),d=d?d:this.extractUrlBase(a),e=this.showProgress?THREE.Loader.prototype.updateProgress:null;this.onLoadStart();this.loadAjaxJSON(this,a,b,c,d,e)};
THREE.BinaryLoader.prototype.loadAjaxJSON=function(a,b,c,d,e,f){var g=new XMLHttpRequest;g.onreadystatechange=function(){if(4==g.readyState)if(200==g.status||0==g.status){var j=JSON.parse(g.responseText);a.loadAjaxBuffers(j,c,e,d,f)}else console.error("THREE.BinaryLoader: Couldn't load ["+b+"] ["+g.status+"]")};g.open("GET",b,!0);g.send(null)};
THREE.BinaryLoader.prototype.loadAjaxBuffers=function(a,b,c,d,e){var f=new XMLHttpRequest,g=c+"/"+a.buffers,j=0;f.onreadystatechange=function(){if(4==f.readyState)if(200==f.status||0==f.status){var c=f.response;void 0===c&&(c=(new Uint8Array(f.responseBody)).buffer);THREE.BinaryLoader.prototype.createBinModel(c,b,d,a.materials)}else console.error("THREE.BinaryLoader: Couldn't load ["+g+"] ["+f.status+"]");else 3==f.readyState?e&&(0==j&&(j=f.getResponseHeader("Content-Length")),e({total:j,loaded:f.responseText.length})):
2==f.readyState&&(j=f.getResponseHeader("Content-Length"))};f.open("GET",g,!0);f.responseType="arraybuffer";f.send(null)};
THREE.BinaryLoader.prototype.createBinModel=function(a,b,c,d){var e=function(b){var c,e,l,k,i,o,m,s,n,u,p,r,A,w,v;function B(a){return a%4?4-a%4:0}function y(a,b){return(new Uint8Array(a,b,1))[0]}function x(a,b){return(new Uint32Array(a,b,1))[0]}function R(b,c){var d,f,e,g,i,j,l,k,n=new Uint32Array(a,c,3*b);for(d=0;d<b;d++){f=n[3*d];e=n[3*d+1];g=n[3*d+2];i=C[2*f];f=C[2*f+1];j=C[2*e];l=C[2*e+1];e=C[2*g];k=C[2*g+1];g=Q.faceVertexUvs[0];var m=[];m.push(new THREE.UV(i,f));m.push(new THREE.UV(j,l));m.push(new THREE.UV(e,
k));g.push(m)}}function M(b,c){var d,f,e,g,i,j,l,k,m,n,o=new Uint32Array(a,c,4*b);for(d=0;d<b;d++){f=o[4*d];e=o[4*d+1];g=o[4*d+2];i=o[4*d+3];j=C[2*f];f=C[2*f+1];l=C[2*e];m=C[2*e+1];k=C[2*g];n=C[2*g+1];g=C[2*i];e=C[2*i+1];i=Q.faceVertexUvs[0];var p=[];p.push(new THREE.UV(j,f));p.push(new THREE.UV(l,m));p.push(new THREE.UV(k,n));p.push(new THREE.UV(g,e));i.push(p)}}function T(b,c,d){for(var f,e,g,i,c=new Uint32Array(a,c,3*b),j=new Uint16Array(a,d,b),d=0;d<b;d++)f=c[3*d],e=c[3*d+1],g=c[3*d+2],i=j[d],
Q.faces.push(new THREE.Face3(f,e,g,null,null,i))}function D(b,c,d){for(var f,e,g,i,j,c=new Uint32Array(a,c,4*b),l=new Uint16Array(a,d,b),d=0;d<b;d++)f=c[4*d],e=c[4*d+1],g=c[4*d+2],i=c[4*d+3],j=l[d],Q.faces.push(new THREE.Face4(f,e,g,i,null,null,j))}function G(b,c,d,f){for(var e,g,i,j,l,k,m,c=new Uint32Array(a,c,3*b),d=new Uint32Array(a,d,3*b),n=new Uint16Array(a,f,b),f=0;f<b;f++){e=c[3*f];g=c[3*f+1];i=c[3*f+2];l=d[3*f];k=d[3*f+1];m=d[3*f+2];j=n[f];var o=N[3*k],p=N[3*k+1];k=N[3*k+2];var r=N[3*m],s=
N[3*m+1];m=N[3*m+2];Q.faces.push(new THREE.Face3(e,g,i,[new THREE.Vector3(N[3*l],N[3*l+1],N[3*l+2]),new THREE.Vector3(o,p,k),new THREE.Vector3(r,s,m)],null,j))}}function I(b,c,d,f){for(var e,g,i,j,l,k,m,n,o,c=new Uint32Array(a,c,4*b),d=new Uint32Array(a,d,4*b),p=new Uint16Array(a,f,b),f=0;f<b;f++){e=c[4*f];g=c[4*f+1];i=c[4*f+2];j=c[4*f+3];k=d[4*f];m=d[4*f+1];n=d[4*f+2];o=d[4*f+3];l=p[f];var r=N[3*m],s=N[3*m+1];m=N[3*m+2];var u=N[3*n],v=N[3*n+1];n=N[3*n+2];var w=N[3*o],y=N[3*o+1];o=N[3*o+2];Q.faces.push(new THREE.Face4(e,
g,i,j,[new THREE.Vector3(N[3*k],N[3*k+1],N[3*k+2]),new THREE.Vector3(r,s,m),new THREE.Vector3(u,v,n),new THREE.Vector3(w,y,o)],null,l))}}var Q=this,F=0,N=[],C=[],E,W,ha;THREE.Geometry.call(this);THREE.Loader.prototype.initMaterials(Q,d,b);v=a;W=F;b=new Uint8Array(v,W,12);u="";for(A=0;12>A;A++)u+=String.fromCharCode(b[W+A]);c=y(v,W+12);y(v,W+13);y(v,W+14);y(v,W+15);e=y(v,W+16);l=y(v,W+17);k=y(v,W+18);i=y(v,W+19);o=x(v,W+20);m=x(v,W+20+4);s=x(v,W+20+8);n=x(v,W+20+12);u=x(v,W+20+16);p=x(v,W+20+20);r=
x(v,W+20+24);A=x(v,W+20+28);b=x(v,W+20+32);w=x(v,W+20+36);v=x(v,W+20+40);F+=c;W=3*e+i;ha=4*e+i;E=n*W;c=u*(W+3*l);e=p*(W+3*k);i=r*(W+3*l+3*k);W=A*ha;l=b*(ha+4*l);k=w*(ha+4*k);ha=F;var F=new Float32Array(a,F,3*o),Y,Ea,fa,P;for(Y=0;Y<o;Y++)Ea=F[3*Y],fa=F[3*Y+1],P=F[3*Y+2],Q.vertices.push(new THREE.Vector3(Ea,fa,P));o=F=ha+3*o*Float32Array.BYTES_PER_ELEMENT;if(m){F=new Int8Array(a,F,3*m);for(ha=0;ha<m;ha++)Y=F[3*ha],Ea=F[3*ha+1],fa=F[3*ha+2],N.push(Y/127,Ea/127,fa/127)}F=o+3*m*Int8Array.BYTES_PER_ELEMENT;
m=F+=B(3*m);if(s){F=new Float32Array(a,F,2*s);for(o=0;o<s;o++)ha=F[2*o],Y=F[2*o+1],C.push(ha,Y)}s=F=m+2*s*Float32Array.BYTES_PER_ELEMENT;E=s+E+B(2*n);m=E+c+B(2*u);c=m+e+B(2*p);e=c+i+B(2*r);W=e+W+B(2*A);i=W+l+B(2*b);l=i+k+B(2*w);p&&(k=m+3*p*Uint32Array.BYTES_PER_ELEMENT,T(p,m,k+3*p*Uint32Array.BYTES_PER_ELEMENT),R(p,k));r&&(p=c+3*r*Uint32Array.BYTES_PER_ELEMENT,k=p+3*r*Uint32Array.BYTES_PER_ELEMENT,G(r,c,p,k+3*r*Uint32Array.BYTES_PER_ELEMENT),R(r,k));w&&(r=i+4*w*Uint32Array.BYTES_PER_ELEMENT,D(w,i,
r+4*w*Uint32Array.BYTES_PER_ELEMENT),M(w,r));v&&(w=l+4*v*Uint32Array.BYTES_PER_ELEMENT,r=w+4*v*Uint32Array.BYTES_PER_ELEMENT,I(v,l,w,r+4*v*Uint32Array.BYTES_PER_ELEMENT),M(v,r));n&&T(n,s,s+3*n*Uint32Array.BYTES_PER_ELEMENT);u&&(n=E+3*u*Uint32Array.BYTES_PER_ELEMENT,G(u,E,n,n+3*u*Uint32Array.BYTES_PER_ELEMENT));A&&D(A,e,e+4*A*Uint32Array.BYTES_PER_ELEMENT);b&&(u=W+4*b*Uint32Array.BYTES_PER_ELEMENT,I(b,W,u,u+4*b*Uint32Array.BYTES_PER_ELEMENT));this.computeCentroids();this.computeFaceNormals();THREE.Loader.prototype.hasNormals(this)&&
this.computeTangents()};e.prototype=Object.create(THREE.Geometry.prototype);b(new e(c))};THREE.ImageLoader=function(){THREE.EventTarget.call(this);this.crossOrigin=null};
THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(a,b){var c=this;void 0===b&&(b=new Image);b.addEventListener("load",function(){c.dispatchEvent({type:"load",content:b})},!1);b.addEventListener("error",function(){c.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);c.crossOrigin&&(b.crossOrigin=c.crossOrigin);b.src=a}};THREE.JSONLoader=function(a){THREE.Loader.call(this,a)};THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype);
THREE.JSONLoader.prototype.load=function(a,b,c){c=c?c:this.extractUrlBase(a);this.onLoadStart();this.loadAjaxJSON(this,a,b,c)};
THREE.JSONLoader.prototype.loadAjaxJSON=function(a,b,c,d,e){var f=new XMLHttpRequest,g=0;f.onreadystatechange=function(){if(f.readyState===f.DONE)if(200===f.status||0===f.status){if(f.responseText){var j=JSON.parse(f.responseText);a.createModel(j,c,d)}else console.warn("THREE.JSONLoader: ["+b+"] seems to be unreachable or file there is empty");a.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load ["+b+"] ["+f.status+"]");else f.readyState===f.LOADING?e&&(0===g&&(g=f.getResponseHeader("Content-Length")),
e({total:g,loaded:f.responseText.length})):f.readyState===f.HEADERS_RECEIVED&&(g=f.getResponseHeader("Content-Length"))};f.open("GET",b,!0);f.send(null)};
THREE.JSONLoader.prototype.createModel=function(a,b,c){var d=new THREE.Geometry,e=void 0!==a.scale?1/a.scale:1;this.initMaterials(d,a.materials,c);var f,g,j,l,k,i,o,m,s,n,u,p,r,A,w=a.faces;s=a.vertices;var v=a.normals,B=a.colors,y=0;for(f=0;f<a.uvs.length;f++)a.uvs[f].length&&y++;for(f=0;f<y;f++)d.faceUvs[f]=[],d.faceVertexUvs[f]=[];c=0;for(l=s.length;c<l;)k=new THREE.Vector3,k.x=s[c++]*e,k.y=s[c++]*e,k.z=s[c++]*e,d.vertices.push(k);c=0;for(l=w.length;c<l;){s=w[c++];k=s&1;j=s&2;f=s&4;g=s&8;o=s&16;
i=s&32;n=s&64;s&=128;k?(u=new THREE.Face4,u.a=w[c++],u.b=w[c++],u.c=w[c++],u.d=w[c++],k=4):(u=new THREE.Face3,u.a=w[c++],u.b=w[c++],u.c=w[c++],k=3);j&&(j=w[c++],u.materialIndex=j);j=d.faces.length;if(f)for(f=0;f<y;f++)p=a.uvs[f],m=w[c++],A=p[2*m],m=p[2*m+1],d.faceUvs[f][j]=new THREE.UV(A,m);if(g)for(f=0;f<y;f++){p=a.uvs[f];r=[];for(g=0;g<k;g++)m=w[c++],A=p[2*m],m=p[2*m+1],r[g]=new THREE.UV(A,m);d.faceVertexUvs[f][j]=r}o&&(o=3*w[c++],g=new THREE.Vector3,g.x=v[o++],g.y=v[o++],g.z=v[o],u.normal=g);if(i)for(f=
0;f<k;f++)o=3*w[c++],g=new THREE.Vector3,g.x=v[o++],g.y=v[o++],g.z=v[o],u.vertexNormals.push(g);n&&(i=w[c++],i=new THREE.Color(B[i]),u.color=i);if(s)for(f=0;f<k;f++)i=w[c++],i=new THREE.Color(B[i]),u.vertexColors.push(i);d.faces.push(u)}if(a.skinWeights){c=0;for(l=a.skinWeights.length;c<l;c+=2)w=a.skinWeights[c],v=a.skinWeights[c+1],d.skinWeights.push(new THREE.Vector4(w,v,0,0))}if(a.skinIndices){c=0;for(l=a.skinIndices.length;c<l;c+=2)w=a.skinIndices[c],v=a.skinIndices[c+1],d.skinIndices.push(new THREE.Vector4(w,
v,0,0))}d.bones=a.bones;d.animation=a.animation;if(void 0!==a.morphTargets){c=0;for(l=a.morphTargets.length;c<l;c++){d.morphTargets[c]={};d.morphTargets[c].name=a.morphTargets[c].name;d.morphTargets[c].vertices=[];B=d.morphTargets[c].vertices;y=a.morphTargets[c].vertices;w=0;for(v=y.length;w<v;w+=3)s=new THREE.Vector3,s.x=y[w]*e,s.y=y[w+1]*e,s.z=y[w+2]*e,B.push(s)}}if(void 0!==a.morphColors){c=0;for(l=a.morphColors.length;c<l;c++){d.morphColors[c]={};d.morphColors[c].name=a.morphColors[c].name;d.morphColors[c].colors=
[];v=d.morphColors[c].colors;B=a.morphColors[c].colors;e=0;for(w=B.length;e<w;e+=3)y=new THREE.Color(16755200),y.setRGB(B[e],B[e+1],B[e+2]),v.push(y)}}d.computeCentroids();d.computeFaceNormals();this.hasNormals(d)&&d.computeTangents();b(d)};THREE.GeometryLoader=function(){THREE.EventTarget.call(this);this.path=this.crossOrigin=null};
THREE.GeometryLoader.prototype={constructor:THREE.GeometryLoader,load:function(a){var b=this,c=null;if(null===b.path){var d=a.split("/");d.pop();b.path=1>d.length?".":d.join("/")}d=new XMLHttpRequest;d.addEventListener("load",function(d){d.target.responseText?c=b.parse(JSON.parse(d.target.responseText),e):b.dispatchEvent({type:"error",message:"Invalid file ["+a+"]"})},!1);d.addEventListener("error",function(){b.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);d.open("GET",a,
!0);d.send(null);var e=new THREE.LoadingMonitor;e.addEventListener("load",function(){b.dispatchEvent({type:"load",content:c})});e.add(d)},parse:function(a,b){var c=this,d=new THREE.Geometry,e=void 0!==a.scale?1/a.scale:1;if(a.materials){d.materials=[];for(var f=0;f<a.materials.length;++f){var g=a.materials[f],j=function(a){a=Math.log(a)/Math.LN2;return Math.floor(a)==a},l=function(a){a=Math.log(a)/Math.LN2;return Math.pow(2,Math.round(a))},k=function(a,d,f,e,g,i){a[d]=new THREE.Texture;a[d].sourceFile=
f;if(e&&(a[d].repeat.set(e[0],e[1]),1!==e[0]&&(a[d].wrapS=THREE.RepeatWrapping),1!==e[1]))a[d].wrapT=THREE.RepeatWrapping;g&&a[d].offset.set(g[0],g[1]);if(i&&(e={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==e[i[0]]&&(a[d].wrapS=e[i[0]]),void 0!==e[i[1]]))a[d].wrapT=e[i[1]];var k=a[d],a=new THREE.ImageLoader;a.addEventListener("load",function(a){a=a.content;if(!j(a.width)||!j(a.height)){var b=l(a.width),c=l(a.height);k.image=document.createElement("canvas");k.image.width=
b;k.image.height=c;k.image.getContext("2d").drawImage(a,0,0,b,c)}else k.image=a;k.needsUpdate=!0});a.crossOrigin=c.crossOrigin;a.load(c.path+"/"+f);b&&b.add(a)},i=function(a){return(255*a[0]<<16)+(255*a[1]<<8)+255*a[2]},o="MeshLambertMaterial",m={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(g.shading){var s=g.shading.toLowerCase();"phong"===s?o="MeshPhongMaterial":"basic"===s&&(o="MeshBasicMaterial")}void 0!==g.blending&&void 0!==THREE[g.blending]&&
(m.blending=THREE[g.blending]);if(void 0!==g.transparent||1>g.opacity)m.transparent=g.transparent;void 0!==g.depthTest&&(m.depthTest=g.depthTest);void 0!==g.depthWrite&&(m.depthWrite=g.depthWrite);void 0!==g.vertexColors&&("face"==g.vertexColors?m.vertexColors=THREE.FaceColors:g.vertexColors&&(m.vertexColors=THREE.VertexColors));g.colorDiffuse?m.color=i(g.colorDiffuse):g.DbgColor&&(m.color=g.DbgColor);g.colorSpecular&&(m.specular=i(g.colorSpecular));g.colorAmbient&&(m.ambient=i(g.colorAmbient));g.transparency&&
(m.opacity=g.transparency);g.specularCoef&&(m.shininess=g.specularCoef);void 0!==g.visible&&(m.visible=g.visible);void 0!==g.flipSided&&(m.side=THREE.BackSide);void 0!==g.doubleSided&&(m.side=THREE.DoubleSide);void 0!==g.wireframe&&(m.wireframe=g.wireframe);g.mapDiffuse&&k(m,"map",g.mapDiffuse,g.mapDiffuseRepeat,g.mapDiffuseOffset,g.mapDiffuseWrap);g.mapLight&&k(m,"lightMap",g.mapLight,g.mapLightRepeat,g.mapLightOffset,g.mapLightWrap);g.mapBump&&k(m,"bumpMap",g.mapBump,g.mapBumpRepeat,g.mapBumpOffset,
g.mapBumpWrap);g.mapNormal&&k(m,"normalMap",g.mapNormal,g.mapNormalRepeat,g.mapNormalOffset,g.mapNormalWrap);g.mapSpecular&&k(m,"specularMap",g.mapSpecular,g.mapSpecularRepeat,g.mapSpecularOffset,g.mapSpecularWrap);g.mapNormal?(k=THREE.ShaderUtils.lib.normal,i=THREE.UniformsUtils.clone(k.uniforms),i.tNormal.value=m.normalMap,g.mapNormalFactor&&i.uNormalScale.value.set(g.mapNormalFactor,g.mapNormalFactor),m.map&&(i.tDiffuse.value=m.map,i.enableDiffuse.value=!0),m.specularMap&&(i.tSpecular.value=m.specularMap,
i.enableSpecular.value=!0),m.lightMap&&(i.tAO.value=m.lightMap,i.enableAO.value=!0),i.uDiffuseColor.value.setHex(m.color),i.uSpecularColor.value.setHex(m.specular),i.uAmbientColor.value.setHex(m.ambient),i.uShininess.value=m.shininess,void 0!==m.opacity&&(i.uOpacity.value=m.opacity),m=new THREE.ShaderMaterial({fragmentShader:k.fragmentShader,vertexShader:k.vertexShader,uniforms:i,lights:!0,fog:!0})):m=new THREE[o](m);void 0!==g.DbgName&&(m.name=g.DbgName);d.materials[f]=m}}var g=a.faces,n=a.vertices,
m=a.normals,k=a.colors,i=0;if(a.uvs)for(f=0;f<a.uvs.length;f++)a.uvs[f].length&&i++;for(f=0;f<i;f++)d.faceUvs[f]=[],d.faceVertexUvs[f]=[];o=0;for(s=n.length;o<s;){var u=new THREE.Vector3;u.x=n[o++]*e;u.y=n[o++]*e;u.z=n[o++]*e;d.vertices.push(u)}o=0;for(s=g.length;o<s;){var p=g[o++],r=p&2,f=p&4,A=p&8,w=p&16,n=p&32,v=p&64,u=p&128;if(p&1){p=new THREE.Face4;p.a=g[o++];p.b=g[o++];p.c=g[o++];p.d=g[o++];var B=4}else p=new THREE.Face3,p.a=g[o++],p.b=g[o++],p.c=g[o++],B=3;r&&(r=g[o++],p.materialIndex=r);var y=
d.faces.length;if(f)for(f=0;f<i;f++){var x=a.uvs[f],r=g[o++],R=x[2*r],r=x[2*r+1];d.faceUvs[f][y]=new THREE.UV(R,r)}if(A)for(f=0;f<i;f++){for(var x=a.uvs[f],A=[],M=0;M<B;M++)r=g[o++],R=x[2*r],r=x[2*r+1],A[M]=new THREE.UV(R,r);d.faceVertexUvs[f][y]=A}w&&(w=3*g[o++],r=new THREE.Vector3,r.x=m[w++],r.y=m[w++],r.z=m[w],p.normal=r);if(n)for(f=0;f<B;f++)w=3*g[o++],r=new THREE.Vector3,r.x=m[w++],r.y=m[w++],r.z=m[w],p.vertexNormals.push(r);v&&(n=g[o++],p.color=new THREE.Color(k[n]));if(u)for(f=0;f<B;f++)n=
g[o++],p.vertexColors.push(new THREE.Color(k[n]));d.faces.push(p)}if(a.skinWeights){f=0;for(g=a.skinWeights.length;f<g;f+=2)d.skinWeights.push(new THREE.Vector4(a.skinWeights[f],a.skinWeights[f+1],0,0))}if(a.skinIndices){f=0;for(g=a.skinIndices.length;f<g;f+=2)m=0,d.skinIndices.push(new THREE.Vector4(a.skinIndices[f],a.skinIndices[f+1],m,0))}d.bones=a.bones;d.animation=a.animation;if(a.morphTargets){f=0;for(g=a.morphTargets.length;f<g;f++){d.morphTargets[f]={};d.morphTargets[f].name=a.morphTargets[f].name;
d.morphTargets[f].vertices=[];m=d.morphTargets[f].vertices;k=a.morphTargets[f].vertices;r=0;for(i=k.length;r<i;r+=3)u=new THREE.Vector3,u.x=k[r]*e,u.y=k[r+1]*e,u.z=k[r+2]*e,m.push(u)}}if(a.morphColors){f=0;for(g=a.morphColors.length;f<g;f++){d.morphColors[f]={};d.morphColors[f].name=a.morphColors[f].name;d.morphColors[f].colors=[];e=d.morphColors[f].colors;k=a.morphColors[f].colors;m=0;for(i=k.length;m<i;m+=3)o=new THREE.Color(16755200),o.setRGB(k[m],k[m+1],k[m+2]),e.push(o)}}d.computeCentroids();
d.computeFaceNormals();return d}};THREE.SceneLoader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};this.callbackSync=function(){};this.callbackProgress=function(){};this.geometryHandlerMap={};this.addGeometryHandler("ascii",THREE.JSONLoader);this.addGeometryHandler("binary",THREE.BinaryLoader)};THREE.SceneLoader.prototype.constructor=THREE.SceneLoader;
THREE.SceneLoader.prototype.load=function(a,b){var c=this,d=new XMLHttpRequest;d.onreadystatechange=function(){if(4===d.readyState)if(200===d.status||0===d.status){var e=JSON.parse(d.responseText);c.parse(e,b,a)}else console.error("THREE.SceneLoader: Couldn't load ["+a+"] ["+d.status+"]")};d.open("GET",a,!0);d.send(null)};THREE.SceneLoader.prototype.addGeometryHandler=function(a,b){this.geometryHandlerMap[a]={loaderClass:b}};
THREE.SceneLoader.prototype.parse=function(a,b,c){function d(a,b){return"relativeToHTML"==b?a:k+"/"+a}function e(a,b){for(var c in b)if(void 0===C.objects[c]){var d=b[c],f=null;if(void 0!==d.geometry){if(R=C.geometries[d.geometry])f=!1,M=C.materials[d.materials[0]],(f=M instanceof THREE.ShaderMaterial)&&R.computeTangents(),A=d.position,w=d.rotation,v=d.quaternion,B=d.scale,p=d.matrix,v=0,0===d.materials.length&&(M=new THREE.MeshFaceMaterial),1<d.materials.length&&(M=new THREE.MeshFaceMaterial),d.morph?
(f=new THREE.MorphAnimMesh(R,M),void 0!==d.duration&&(f.duration=d.duration),void 0!==d.time&&(f.time=d.time),void 0!==d.mirroredLoop&&(f.mirroredLoop=d.mirroredLoop),M.morphNormals&&R.computeMorphNormals()):f=new THREE.Mesh(R,M),f.name=c,p?(f.matrixAutoUpdate=!1,f.matrix.set(p[0],p[1],p[2],p[3],p[4],p[5],p[6],p[7],p[8],p[9],p[10],p[11],p[12],p[13],p[14],p[15])):(f.position.set(A[0],A[1],A[2]),v?(f.quaternion.set(v[0],v[1],v[2],v[3]),f.useQuaternion=!0):f.rotation.set(w[0],w[1],w[2]),f.scale.set(B[0],
B[1],B[2])),f.visible=d.visible,f.castShadow=d.castShadow,f.receiveShadow=d.receiveShadow,a.add(f),C.objects[c]=f}else A=d.position,w=d.rotation,v=d.quaternion,B=d.scale,v=0,f=new THREE.Object3D,f.name=c,f.position.set(A[0],A[1],A[2]),v?(f.quaternion.set(v[0],v[1],v[2],v[3]),f.useQuaternion=!0):f.rotation.set(w[0],w[1],w[2]),f.scale.set(B[0],B[1],B[2]),f.visible=void 0!==d.visible?d.visible:!1,a.add(f),C.objects[c]=f,C.empties[c]=f;if(f){if(void 0!==d.properties)for(var g in d.properties)f.properties[g]=
d.properties[g];void 0!==d.children&&e(f,d.children)}}}function f(a){return function(b){C.geometries[a]=b;e(C.scene,E.objects);I-=1;l.onLoadComplete();j()}}function g(a){return function(b){C.geometries[a]=b}}function j(){l.callbackProgress({totalModels:F,totalTextures:N,loadedModels:F-I,loadedTextures:N-Q},C);l.onLoadProgress();0===I&&0===Q&&b(C)}var l=this,k=THREE.Loader.prototype.extractUrlBase(c),i,o,m,s,n,u,p,r,A,w,v,B,y,x,R,M,T,D,G,I,Q,F,N,C,E=a;for(y in this.geometryHandlerMap)this.geometryHandlerMap[y].loaderObject=
new this.geometryHandlerMap[y].loaderClass;Q=I=0;C={scene:new THREE.Scene,geometries:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{}};if(E.transform&&(a=E.transform.position,c=E.transform.rotation,y=E.transform.scale,a&&C.scene.position.set(a[0],a[1],a[2]),c&&C.scene.rotation.set(c[0],c[1],c[2]),y&&C.scene.scale.set(y[0],y[1],y[2]),a||c||y))C.scene.updateMatrix(),C.scene.updateMatrixWorld();a=function(a){return function(){Q-=a;j();l.onLoadComplete()}};for(s in E.cameras)y=
E.cameras[s],"perspective"===y.type?T=new THREE.PerspectiveCamera(y.fov,y.aspect,y.near,y.far):"ortho"===y.type&&(T=new THREE.OrthographicCamera(y.left,y.right,y.top,y.bottom,y.near,y.far)),A=y.position,c=y.target,y=y.up,T.position.set(A[0],A[1],A[2]),T.target=new THREE.Vector3(c[0],c[1],c[2]),y&&T.up.set(y[0],y[1],y[2]),C.cameras[s]=T;for(m in E.lights)c=E.lights[m],s=void 0!==c.color?c.color:16777215,T=void 0!==c.intensity?c.intensity:1,"directional"===c.type?(A=c.direction,r=new THREE.DirectionalLight(s,
T),r.position.set(A[0],A[1],A[2]),r.position.normalize()):"point"===c.type?(A=c.position,r=c.distance,r=new THREE.PointLight(s,T,r),r.position.set(A[0],A[1],A[2])):"ambient"===c.type&&(r=new THREE.AmbientLight(s)),C.scene.add(r),C.lights[m]=r;for(n in E.fogs)m=E.fogs[n],"linear"===m.type?D=new THREE.Fog(0,m.near,m.far):"exp2"===m.type&&(D=new THREE.FogExp2(0,m.density)),y=m.color,D.color.setRGB(y[0],y[1],y[2]),C.fogs[n]=D;C.cameras&&E.defaults.camera&&(C.currentCamera=C.cameras[E.defaults.camera]);
C.fogs&&E.defaults.fog&&(C.scene.fog=C.fogs[E.defaults.fog]);y=E.defaults.bgcolor;C.bgColor=new THREE.Color;C.bgColor.setRGB(y[0],y[1],y[2]);C.bgColorAlpha=E.defaults.bgalpha;for(i in E.geometries)n=E.geometries[i],n.type in this.geometryHandlerMap&&(I+=1,l.onLoadStart());F=I;for(i in E.geometries)if(n=E.geometries[i],"cube"===n.type)R=new THREE.CubeGeometry(n.width,n.height,n.depth,n.segmentsWidth,n.segmentsHeight,n.segmentsDepth,null,n.flipped,n.sides),C.geometries[i]=R;else if("plane"===n.type)R=
new THREE.PlaneGeometry(n.width,n.height,n.segmentsWidth,n.segmentsHeight),C.geometries[i]=R;else if("sphere"===n.type)R=new THREE.SphereGeometry(n.radius,n.segmentsWidth,n.segmentsHeight),C.geometries[i]=R;else if("cylinder"===n.type)R=new THREE.CylinderGeometry(n.topRad,n.botRad,n.height,n.radSegs,n.heightSegs),C.geometries[i]=R;else if("torus"===n.type)R=new THREE.TorusGeometry(n.radius,n.tube,n.segmentsR,n.segmentsT),C.geometries[i]=R;else if("icosahedron"===n.type)R=new THREE.IcosahedronGeometry(n.radius,
n.subdivisions),C.geometries[i]=R;else if(n.type in this.geometryHandlerMap){D={};for(G in n)"type"!==G&&"url"!==G&&(D[G]=n[G]);this.geometryHandlerMap[n.type].loaderObject.load(d(n.url,E.urlBaseType),f(i),D)}else"embedded"===n.type&&(n=E.embeds[n.id],n.metadata=E.metadata,n&&this.geometryHandlerMap.ascii.loaderObject.createModel(n,g(i),""));for(u in E.textures)if(i=E.textures[u],i.url instanceof Array){Q+=i.url.length;for(G=0;G<i.url.length;G++)l.onLoadStart()}else Q+=1,l.onLoadStart();N=Q;for(u in E.textures){i=
E.textures[u];void 0!==i.mapping&&void 0!==THREE[i.mapping]&&(i.mapping=new THREE[i.mapping]);if(i.url instanceof Array){n=i.url.length;D=[];for(G=0;G<n;G++)D[G]=d(i.url[G],E.urlBaseType);G=(G=D[0].endsWith(".dds"))?THREE.ImageUtils.loadCompressedTextureCube(D,i.mapping,a(n)):THREE.ImageUtils.loadTextureCube(D,i.mapping,a(n))}else{G=i.url.toLowerCase().endsWith(".dds");n=d(i.url,E.urlBaseType);D=a(1);G=G?THREE.ImageUtils.loadCompressedTexture(n,i.mapping,D):THREE.ImageUtils.loadTexture(n,i.mapping,
D);void 0!==THREE[i.minFilter]&&(G.minFilter=THREE[i.minFilter]);void 0!==THREE[i.magFilter]&&(G.magFilter=THREE[i.magFilter]);i.anisotropy&&(G.anisotropy=i.anisotropy);if(i.repeat&&(G.repeat.set(i.repeat[0],i.repeat[1]),1!==i.repeat[0]&&(G.wrapS=THREE.RepeatWrapping),1!==i.repeat[1]))G.wrapT=THREE.RepeatWrapping;i.offset&&G.offset.set(i.offset[0],i.offset[1]);if(i.wrap&&(n={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==n[i.wrap[0]]&&(G.wrapS=n[i.wrap[0]]),void 0!==n[i.wrap[1]]))G.wrapT=
n[i.wrap[1]]}C.textures[u]=G}for(o in E.materials){p=E.materials[o];for(x in p.parameters)"envMap"===x||"map"===x||"lightMap"===x||"bumpMap"===x?p.parameters[x]=C.textures[p.parameters[x]]:"shading"===x?p.parameters[x]="flat"===p.parameters[x]?THREE.FlatShading:THREE.SmoothShading:"side"===x?p.parameters[x]="double"==p.parameters[x]?THREE.DoubleSide:"back"==p.parameters[x]?THREE.BackSide:THREE.FrontSide:"blending"===x?p.parameters[x]=p.parameters[x]in THREE?THREE[p.parameters[x]]:THREE.NormalBlending:
"combine"===x?p.parameters[x]="MixOperation"==p.parameters[x]?THREE.MixOperation:THREE.MultiplyOperation:"vertexColors"===x?"face"==p.parameters[x]?p.parameters[x]=THREE.FaceColors:p.parameters[x]&&(p.parameters[x]=THREE.VertexColors):"wrapRGB"===x&&(u=p.parameters[x],p.parameters[x]=new THREE.Vector3(u[0],u[1],u[2]));void 0!==p.parameters.opacity&&1>p.parameters.opacity&&(p.parameters.transparent=!0);p.parameters.normalMap?(u=THREE.ShaderUtils.lib.normal,a=THREE.UniformsUtils.clone(u.uniforms),i=
p.parameters.color,G=p.parameters.specular,n=p.parameters.ambient,D=p.parameters.shininess,a.tNormal.value=C.textures[p.parameters.normalMap],p.parameters.normalScale&&a.uNormalScale.value.set(p.parameters.normalScale[0],p.parameters.normalScale[1]),p.parameters.map&&(a.tDiffuse.value=p.parameters.map,a.enableDiffuse.value=!0),p.parameters.envMap&&(a.tCube.value=p.parameters.envMap,a.enableReflection.value=!0,a.uReflectivity.value=p.parameters.reflectivity),p.parameters.lightMap&&(a.tAO.value=p.parameters.lightMap,
a.enableAO.value=!0),p.parameters.specularMap&&(a.tSpecular.value=C.textures[p.parameters.specularMap],a.enableSpecular.value=!0),p.parameters.displacementMap&&(a.tDisplacement.value=C.textures[p.parameters.displacementMap],a.enableDisplacement.value=!0,a.uDisplacementBias.value=p.parameters.displacementBias,a.uDisplacementScale.value=p.parameters.displacementScale),a.uDiffuseColor.value.setHex(i),a.uSpecularColor.value.setHex(G),a.uAmbientColor.value.setHex(n),a.uShininess.value=D,p.parameters.opacity&&
(a.uOpacity.value=p.parameters.opacity),M=new THREE.ShaderMaterial({fragmentShader:u.fragmentShader,vertexShader:u.vertexShader,uniforms:a,lights:!0,fog:!0})):M=new THREE[p.type](p.parameters);C.materials[o]=M}e(C.scene,E.objects);l.callbackSync(C);j()};THREE.TextureLoader=function(){THREE.EventTarget.call(this);this.crossOrigin=null};
THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(a){var b=this,c=new Image;c.addEventListener("load",function(){var a=new THREE.Texture(c);a.needsUpdate=!0;b.dispatchEvent({type:"load",content:a})},!1);c.addEventListener("error",function(){b.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);b.crossOrigin&&(c.crossOrigin=b.crossOrigin);c.src=a}};
THREE.Material=function(){THREE.MaterialLibrary.push(this);this.id=THREE.MaterialIdCount++;this.name="";this.side=THREE.FrontSide;this.opacity=1;this.transparent=!1;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.depthWrite=this.depthTest=!0;this.polygonOffset=!1;this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.overdraw=!1;this.needsUpdate=this.visible=!0};
THREE.Material.prototype.setValues=function(a){if(void 0!==a)for(var b in a){var c=a[b];if(void 0===c)console.warn("THREE.Material: '"+b+"' parameter is undefined.");else if(b in this){var d=this[b];d instanceof THREE.Color&&c instanceof THREE.Color?d.copy(c):d instanceof THREE.Color&&"number"===typeof c?d.setHex(c):d instanceof THREE.Vector3&&c instanceof THREE.Vector3?d.copy(c):this[b]=c}}};
THREE.Material.prototype.clone=function(a){void 0===a&&(a=new THREE.Material);a.name=this.name;a.side=this.side;a.opacity=this.opacity;a.transparent=this.transparent;a.blending=this.blending;a.blendSrc=this.blendSrc;a.blendDst=this.blendDst;a.blendEquation=this.blendEquation;a.depthTest=this.depthTest;a.depthWrite=this.depthWrite;a.polygonOffset=this.polygonOffset;a.polygonOffsetFactor=this.polygonOffsetFactor;a.polygonOffsetUnits=this.polygonOffsetUnits;a.alphaTest=this.alphaTest;a.overdraw=this.overdraw;
a.visible=this.visible;return a};THREE.Material.prototype.deallocate=function(){var a=THREE.MaterialLibrary.indexOf(this);-1!==a&&THREE.MaterialLibrary.splice(a,1)};THREE.MaterialIdCount=0;THREE.MaterialLibrary=[];THREE.LineBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.linewidth=1;this.linejoin=this.linecap="round";this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.LineBasicMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.linecap=this.linecap;a.linejoin=this.linejoin;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};
THREE.MeshBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphTargets=this.skinning=!1;this.setValues(a)};
THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshBasicMaterial.prototype.clone=function(){var a=new THREE.MeshBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=
this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;return a};
THREE.MeshLambertMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=
"round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshLambertMaterial.prototype.clone=function(){var a=new THREE.MeshLambertMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;
a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};
THREE.MeshPhongMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.wrapAround=this.perPixel=this.metal=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.bumpMap=this.lightMap=this.map=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.envMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=
1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshPhongMaterial.prototype.clone=function(){var a=new THREE.MeshPhongMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.specular.copy(this.specular);a.shininess=this.shininess;a.metal=this.metal;a.perPixel=this.perPixel;a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.bumpMap=this.bumpMap;a.bumpScale=this.bumpScale;a.normalMap=this.normalMap;a.normalScale.copy(this.normalScale);
a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};
THREE.MeshDepthMaterial=function(a){THREE.Material.call(this);this.wireframe=!1;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};
THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);this.shading=THREE.FlatShading;this.wireframe=!1;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.clone=function(){var a=new THREE.MeshNormalMaterial;THREE.Material.prototype.clone.call(this,a);a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};THREE.MeshFaceMaterial=function(){};
THREE.MeshFaceMaterial.prototype.clone=function(){return new THREE.MeshFaceMaterial};THREE.ParticleBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=!0;this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.ParticleBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ParticleBasicMaterial.prototype.clone=function(){var a=new THREE.ParticleBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.size=this.size;a.sizeAttenuation=this.sizeAttenuation;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};
THREE.ShaderMaterial=function(a){THREE.Material.call(this);this.vertexShader=this.fragmentShader="void main() {}";this.uniforms={};this.defines={};this.attributes=null;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ShaderMaterial.prototype.clone=function(){var a=new THREE.ShaderMaterial;THREE.Material.prototype.clone.call(this,a);a.fragmentShader=this.fragmentShader;a.vertexShader=this.vertexShader;a.uniforms=this.uniforms;a.attributes=this.attributes;a.defines=this.defines;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.fog=this.fog;a.lights=this.lights;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=
this.morphNormals;return a};
THREE.Texture=function(a,b,c,d,e,f,g,j,l){THREE.TextureLibrary.push(this);this.id=THREE.TextureIdCount++;this.image=a;this.mapping=void 0!==b?b:new THREE.UVMapping;this.wrapS=void 0!==c?c:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==d?d:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==e?e:THREE.LinearFilter;this.minFilter=void 0!==f?f:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==l?l:1;this.format=void 0!==g?g:THREE.RGBAFormat;this.type=void 0!==j?j:THREE.UnsignedByteType;this.offset=
new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.needsUpdate=!1;this.onUpdate=null};
THREE.Texture.prototype={constructor:THREE.Texture,clone:function(){var a=new THREE.Texture;a.image=this.image;a.mapping=this.mapping;a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.format=this.format;a.type=this.type;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.generateMipmaps=this.generateMipmaps;a.premultiplyAlpha=this.premultiplyAlpha;a.flipY=this.flipY;return a},deallocate:function(){var a=THREE.TextureLibrary.indexOf(this);
-1!==a&&THREE.TextureLibrary.splice(a,1)}};THREE.TextureIdCount=0;THREE.TextureLibrary=[];THREE.CompressedTexture=function(a,b,c,d,e,f,g,j,l,k){THREE.Texture.call(this,null,f,g,j,l,k,d,e);this.image={width:b,height:c};this.mipmaps=a};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);
THREE.CompressedTexture.prototype.clone=function(){var a=new THREE.CompressedTexture;a.image=this.image;a.mipmaps=this.mipmaps;a.format=this.format;a.type=this.type;a.mapping=this.mapping;a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a};THREE.DataTexture=function(a,b,c,d,e,f,g,j,l,k){THREE.Texture.call(this,null,f,g,j,l,k,d,e);this.image={data:a,width:b,height:c}};
THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture(this.image.data,this.image.width,this.image.height,this.format,this.type,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a};THREE.Particle=function(a){THREE.Object3D.call(this);this.material=a};THREE.Particle.prototype=Object.create(THREE.Object3D.prototype);
THREE.Particle.prototype.clone=function(a){void 0===a&&(a=new THREE.Particle(this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.ParticleSystem=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.ParticleBasicMaterial({color:16777215*Math.random()});this.sortParticles=!1;this.geometry&&(null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere(),this.boundRadius=a.boundingSphere.radius);this.frustumCulled=!1};
THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype);THREE.ParticleSystem.prototype.clone=function(a){void 0===a&&(a=new THREE.ParticleSystem(this.geometry,this.material));a.sortParticles=this.sortParticles;THREE.Object3D.prototype.clone.call(this,a);return a};
THREE.Line=function(a,b,c){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.LineBasicMaterial({color:16777215*Math.random()});this.type=void 0!==c?c:THREE.LineStrip;this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=Object.create(THREE.Object3D.prototype);
THREE.Line.prototype.clone=function(a){void 0===a&&(a=new THREE.Line(this.geometry,this.material,this.type));THREE.Object3D.prototype.clone.call(this,a);return a};
THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.MeshBasicMaterial({color:16777215*Math.random(),wireframe:!0});if(this.geometry&&(null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere(),this.boundRadius=a.boundingSphere.radius,this.geometry.morphTargets.length)){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var c=0;c<this.geometry.morphTargets.length;c++)this.morphTargetInfluences.push(0),
this.morphTargetDictionary[this.geometry.morphTargets[c].name]=c}};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(void 0!==this.morphTargetDictionary[a])return this.morphTargetDictionary[a];console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0.");return 0};
THREE.Mesh.prototype.clone=function(a){void 0===a&&(a=new THREE.Mesh(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Bone=function(a){THREE.Object3D.call(this);this.skin=a;this.skinMatrix=new THREE.Matrix4};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);
THREE.Bone.prototype.update=function(a,b){this.matrixAutoUpdate&&(b|=this.updateMatrix());if(b||this.matrixWorldNeedsUpdate)a?this.skinMatrix.multiply(a,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,b=!0;var c,d=this.children.length;for(c=0;c<d;c++)this.children[c].update(this.skinMatrix,b)};
THREE.SkinnedMesh=function(a,b,c){THREE.Mesh.call(this,a,b);this.useVertexTexture=void 0!==c?c:!0;this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];var d,e,f;if(void 0!==this.geometry.bones){for(a=0;a<this.geometry.bones.length;a++)c=this.geometry.bones[a],d=c.pos,e=c.rotq,f=c.scl,b=this.addBone(),b.name=c.name,b.position.set(d[0],d[1],d[2]),b.quaternion.set(e[0],e[1],e[2],e[3]),b.useQuaternion=!0,void 0!==f?b.scale.set(f[0],f[1],f[2]):b.scale.set(1,1,1);for(a=0;a<this.bones.length;a++)c=
this.geometry.bones[a],b=this.bones[a],-1===c.parent?this.add(b):this.bones[c.parent].add(b);a=this.bones.length;this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=a=256<a?64:64<a?32:16<a?16:8,this.boneMatrices=new Float32Array(4*this.boneTextureWidth*this.boneTextureHeight),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=
THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*a);this.pose()}};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.addBone=function(a){void 0===a&&(a=new THREE.Bone(this));this.bones.push(a);return a};
THREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1;for(var a=0,b=this.children.length;a<b;a++){var c=this.children[a];c instanceof THREE.Bone?c.update(this.identityMatrix,!1):c.updateMatrixWorld(!0)}if(void 0==this.boneInverses){this.boneInverses=[];a=0;for(b=this.bones.length;a<
b;a++)c=new THREE.Matrix4,c.getInverse(this.bones[a].skinMatrix),this.boneInverses.push(c)}a=0;for(b=this.bones.length;a<b;a++)THREE.SkinnedMesh.offsetMatrix.multiply(this.bones[a].skinMatrix,this.boneInverses[a]),THREE.SkinnedMesh.offsetMatrix.flattenToArrayOffset(this.boneMatrices,16*a);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)};
THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var a=0;a<this.geometry.skinIndices.length;a++){var b=this.geometry.skinWeights[a],c=1/b.lengthManhattan();Infinity!==c?b.multiplyScalar(c):b.set(1)}};THREE.SkinnedMesh.prototype.clone=function(a){void 0===a&&(a=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture));THREE.Mesh.prototype.clone.call(this,a);return a};THREE.SkinnedMesh.offsetMatrix=new THREE.Matrix4;
THREE.MorphAnimMesh=function(a,b){THREE.Mesh.call(this,a,b);this.duration=1E3;this.mirroredLoop=!1;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=!1;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphAnimMesh.prototype.setFrameRange=function(a,b){this.startKeyframe=a;this.endKeyframe=b;this.length=this.endKeyframe-this.startKeyframe+1};
THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=!0};
THREE.MorphAnimMesh.prototype.parseAnimations=function(){var a=this.geometry;a.animations||(a.animations={});for(var b,c=a.animations,d=/([a-z]+)(\d+)/,e=0,f=a.morphTargets.length;e<f;e++){var g=a.morphTargets[e].name.match(d);if(g&&1<g.length){g=g[1];c[g]||(c[g]={start:Infinity,end:-Infinity});var j=c[g];e<j.start&&(j.start=e);e>j.end&&(j.end=e);b||(b=g)}}a.firstAnimation=b};
THREE.MorphAnimMesh.prototype.setAnimationLabel=function(a,b,c){this.geometry.animations||(this.geometry.animations={});this.geometry.animations[a]={start:b,end:c}};THREE.MorphAnimMesh.prototype.playAnimation=function(a,b){var c=this.geometry.animations[a];c?(this.setFrameRange(c.start,c.end),this.duration=1E3*((c.end-c.start)/b),this.time=0):console.warn("animation["+a+"] undefined")};
THREE.MorphAnimMesh.prototype.updateAnimation=function(a){var b=this.duration/this.length;this.time+=this.direction*a;if(this.mirroredLoop){if(this.time>this.duration||0>this.time)if(this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time)this.time=0,this.directionBackwards=!1}else this.time%=this.duration,0>this.time&&(this.time+=this.duration);a=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/b),0,this.length-1);a!==this.currentKeyframe&&
(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[a]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=a);b=this.time%b/b;this.directionBackwards&&(b=1-b);this.morphTargetInfluences[this.currentKeyframe]=b;this.morphTargetInfluences[this.lastKeyframe]=1-b};
THREE.MorphAnimMesh.prototype.clone=function(a){void 0===a&&(a=new THREE.MorphAnimMesh(this.geometry,this.material));a.duration=this.duration;a.mirroredLoop=this.mirroredLoop;a.time=this.time;a.lastKeyframe=this.lastKeyframe;a.currentKeyframe=this.currentKeyframe;a.direction=this.direction;a.directionBackwards=this.directionBackwards;THREE.Mesh.prototype.clone.call(this,a);return a};THREE.Ribbon=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b};THREE.Ribbon.prototype=Object.create(THREE.Object3D.prototype);
THREE.Ribbon.prototype.clone=function(a){void 0===a&&(a=new THREE.Ribbon(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.LOD=function(){THREE.Object3D.call(this);this.LODs=[]};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);THREE.LOD.prototype.addLevel=function(a,b){void 0===b&&(b=0);for(var b=Math.abs(b),c=0;c<this.LODs.length&&!(b<this.LODs[c].visibleAtDistance);c++);this.LODs.splice(c,0,{visibleAtDistance:b,object3D:a});this.add(a)};
THREE.LOD.prototype.update=function(a){if(1<this.LODs.length){a.matrixWorldInverse.getInverse(a.matrixWorld);a=a.matrixWorldInverse;a=-(a.elements[2]*this.matrixWorld.elements[12]+a.elements[6]*this.matrixWorld.elements[13]+a.elements[10]*this.matrixWorld.elements[14]+a.elements[14]);this.LODs[0].object3D.visible=!0;for(var b=1;b<this.LODs.length;b++)if(a>=this.LODs[b].visibleAtDistance)this.LODs[b-1].object3D.visible=!1,this.LODs[b].object3D.visible=!0;else break;for(;b<this.LODs.length;b++)this.LODs[b].object3D.visible=
!1}};THREE.LOD.prototype.clone=function(){};
THREE.Sprite=function(a){THREE.Object3D.call(this);this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215);this.map=void 0!==a.map?a.map:new THREE.Texture;this.blending=void 0!==a.blending?a.blending:THREE.NormalBlending;this.blendSrc=void 0!==a.blendSrc?a.blendSrc:THREE.SrcAlphaFactor;this.blendDst=void 0!==a.blendDst?a.blendDst:THREE.OneMinusSrcAlphaFactor;this.blendEquation=void 0!==a.blendEquation?a.blendEquation:THREE.AddEquation;this.useScreenCoordinates=void 0!==a.useScreenCoordinates?
a.useScreenCoordinates:!0;this.mergeWith3D=void 0!==a.mergeWith3D?a.mergeWith3D:!this.useScreenCoordinates;this.affectedByDistance=void 0!==a.affectedByDistance?a.affectedByDistance:!this.useScreenCoordinates;this.scaleByViewport=void 0!==a.scaleByViewport?a.scaleByViewport:!this.affectedByDistance;this.alignment=a.alignment instanceof THREE.Vector2?a.alignment:THREE.SpriteAlignment.center;this.rotation3d=this.rotation;this.rotation=0;this.opacity=1;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=
new THREE.Vector2(1,1)};THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position);this.rotation3d.set(0,0,this.rotation);this.matrix.setRotationFromEuler(this.rotation3d);if(1!==this.scale.x||1!==this.scale.y)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,this.scale.y);this.matrixWorldNeedsUpdate=!0};
THREE.Sprite.prototype.clone=function(a){void 0===a&&(a=new THREE.Sprite({}));a.color.copy(this.color);a.map=this.map;a.blending=this.blending;a.useScreenCoordinates=this.useScreenCoordinates;a.mergeWith3D=this.mergeWith3D;a.affectedByDistance=this.affectedByDistance;a.scaleByViewport=this.scaleByViewport;a.alignment=this.alignment;a.rotation3d.copy(this.rotation3d);a.rotation=this.rotation;a.opacity=this.opacity;a.uvOffset.copy(this.uvOffset);a.uvScale.copy(this.uvScale);THREE.Object3D.prototype.clone.call(this,
a);return a};THREE.SpriteAlignment={};THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1);THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1);THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1);THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0);THREE.SpriteAlignment.center=new THREE.Vector2(0,0);THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0);THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1);THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1);
THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1);THREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.matrixAutoUpdate=!1;this.__objects=[];this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);
THREE.Scene.prototype.__addObject=function(a){if(a instanceof THREE.Light)-1===this.__lights.indexOf(a)&&this.__lights.push(a),a.target&&void 0===a.target.parent&&this.add(a.target);else if(!(a instanceof THREE.Camera||a instanceof THREE.Bone)&&-1===this.__objects.indexOf(a)){this.__objects.push(a);this.__objectsAdded.push(a);var b=this.__objectsRemoved.indexOf(a);-1!==b&&this.__objectsRemoved.splice(b,1)}for(b=0;b<a.children.length;b++)this.__addObject(a.children[b])};
THREE.Scene.prototype.__removeObject=function(a){if(a instanceof THREE.Light){var b=this.__lights.indexOf(a);-1!==b&&this.__lights.splice(b,1)}else a instanceof THREE.Camera||(b=this.__objects.indexOf(a),-1!==b&&(this.__objects.splice(b,1),this.__objectsRemoved.push(a),b=this.__objectsAdded.indexOf(a),-1!==b&&this.__objectsAdded.splice(b,1)));for(b=0;b<a.children.length;b++)this.__removeObject(a.children[b])};
THREE.Fog=function(a,b,c){this.color=new THREE.Color(a);this.near=void 0!==b?b:1;this.far=void 0!==c?c:1E3};THREE.FogExp2=function(a,b){this.color=new THREE.Color(a);this.density=void 0!==b?b:2.5E-4};
THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nuniform bool useRefract;\nuniform float refractionRatio;\n#else\nvarying vec3 vReflect;\n#endif\n#endif",
envmap_fragment:"#ifdef USE_ENVMAP\nvec3 reflectVec;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nreflectVec = refract( cameraToVertex, normal, refractionRatio );\n} else { \nreflectVec = reflect( cameraToVertex, normal );\n}\n#else\nreflectVec = vReflect;\n#endif\n#ifdef DOUBLE_SIDED\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#else\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#endif\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n} else {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n}\n#endif",
envmap_pars_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n#ifdef USE_SKINNING\nvec4 mPosition = modelMatrix * skinned;\n#endif\n#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 mPosition = modelMatrix * vec4( morphed, 1.0 );\n#endif\n#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 mPosition = modelMatrix * vec4( position, 1.0 );\n#endif\n#endif",
envmap_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvec3 nWorld = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refractionRatio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n#endif",map_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
map_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( map, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( map, vUv );\n#endif\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",
lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\nuniform sampler2D bumpMap;\nuniform float bumpScale;\nvec2 dHdxy_fwd() {\nvec2 dSTdx = dFdx( vUv );\nvec2 dSTdy = dFdy( vUv );\nfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\nfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\nfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\nreturn vec2( dBx, dBy );\n}\nvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\nvec3 vSigmaX = dFdx( surf_pos );\nvec3 vSigmaY = dFdy( surf_pos );\nvec3 vN = surf_norm;\nvec3 R1 = cross( vSigmaY, vN );\nvec3 R2 = cross( vN, vSigmaX );\nfloat fDet = dot( vSigmaX, R1 );\nvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\nreturn normalize( abs( fDet ) * surf_norm - vGrad );\n}\n#endif",
normalmap_pars_fragment:"#ifdef USE_NORMALMAP\nuniform sampler2D normalMap;\nuniform vec2 normalScale;\nvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\nvec3 q0 = dFdx( eye_pos.xyz );\nvec3 q1 = dFdy( eye_pos.xyz );\nvec2 st0 = dFdx( vUv.st );\nvec2 st1 = dFdy( vUv.st );\nvec3 S = normalize(  q0 * st1.t - q1 * st0.t );\nvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\nvec3 N = normalize( surf_norm );\nvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\nmapN.xy = normalScale * mapN.xy;\nmat3 tsn = mat3( S, T, N );\nreturn normalize( tsn * mapN );\n}\n#endif",
specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\nuniform sampler2D specularMap;\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\nvec4 texelSpecular = texture2D( specularMap, vUv );\nspecularStrength = texelSpecular.r;\n#else\nspecularStrength = 1.0;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif",
lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\nvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, dirVector );\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n#ifdef DOUBLE_SIDED\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef DOUBLE_SIDED\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nlVector = normalize( lVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - mPosition.xyz ) );\nif ( spotEffect > spotLightAngle[ i ] ) {\nspotEffect = pow( spotEffect, spotLightExponent[ i ] );\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\nspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\nspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n#ifdef DOUBLE_SIDED\nvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\nvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n#ifdef DOUBLE_SIDED\nvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n#endif\n}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",
lights_phong_pars_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif",
lights_phong_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nvSpotLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvWorldPosition = mPosition.xyz;\n#endif",
lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#else\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#ifdef USE_NORMALMAP\nnormal = perturbNormal2Arb( -viewPosition, normal );\n#elif defined( USE_BUMPMAP )\nnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse  = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vSpotLight[ i ].xyz );\nfloat lDistance = vSpotLight[ i ].w;\n#endif\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngle[ i ] ) {\nspotEffect = pow( spotEffect, spotLightExponent[ i ] );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n#endif\nspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\nvec3 spotHalfVector = normalize( lVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, dirVector );\n#ifdef WRAP_AROUND\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );\nvec3 lVector = normalize( lPosition.xyz + vViewPosition.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += diffuse * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\nvec3 lVectorGround = normalize( -lPosition.xyz + vViewPosition.xyz );\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",
color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n#ifdef BONE_TEXTURE\nuniform sampler2D boneTexture;\nmat4 getBoneMatrix( const in float i ) {\nfloat j = i * 4.0;\nfloat x = mod( j, N_BONE_PIXEL_X );\nfloat y = floor( j / N_BONE_PIXEL_X );\nconst float dx = 1.0 / N_BONE_PIXEL_X;\nconst float dy = 1.0 / N_BONE_PIXEL_Y;\ny = dy * ( y + 0.5 );\nvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\nvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\nvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\nvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\nmat4 bone = mat4( v1, v2, v3, v4 );\nreturn bone;\n}\n#else\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\nmat4 getBoneMatrix( const in float i ) {\nmat4 bone = boneGlobalMatrices[ int(i) ];\nreturn bone;\n}\n#endif\n#endif",
skinbase_vertex:"#ifdef USE_SKINNING\nmat4 boneMatX = getBoneMatrix( skinIndex.x );\nmat4 boneMatY = getBoneMatrix( skinIndex.y );\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n#ifdef USE_MORPHTARGETS\nvec4 skinVertex = vec4( morphed, 1.0 );\n#else\nvec4 skinVertex = vec4( position, 1.0 );\n#endif\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n#ifndef USE_MORPHNORMALS\nuniform float morphTargetInfluences[ 8 ];\n#else\nuniform float morphTargetInfluences[ 4 ];\n#endif\n#endif",
morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n#ifndef USE_MORPHNORMALS\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n#endif\nmorphed += position;\n#endif",
default_vertex:"vec4 mvPosition;\n#ifdef USE_SKINNING\nmvPosition = modelViewMatrix * skinned;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\nvec3 morphedNormal = vec3( 0.0 );\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\nmorphedNormal += normal;\n#endif",
skinnormal_vertex:"#ifdef USE_SKINNING\nmat4 skinMatrix = skinWeight.x * boneMatX;\nskinMatrix \t+= skinWeight.y * boneMatY;\n#ifdef USE_MORPHNORMALS\nvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n#else\nvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n#endif\n#endif",defaultnormal_vertex:"vec3 objectNormal;\n#ifdef USE_SKINNING\nobjectNormal = skinnedNormal.xyz;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\nobjectNormal = morphedNormal;\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\nobjectNormal = normal;\n#endif\n#ifdef FLIP_SIDED\nobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;",
shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\nuniform float shadowDarkness[ MAX_SHADOWS ];\nuniform float shadowBias[ MAX_SHADOWS ];\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_DEBUG\nvec3 frustumColors[3];\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n#endif\n#ifdef SHADOWMAP_CASCADE\nint inFrustumCount = 0;\n#endif\nfloat fDepth;\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\n#ifdef SHADOWMAP_CASCADE\ninFrustumCount += int( inFrustum );\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n#else\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n#endif\nbool frustumTest = all( frustumTestVec );\nif ( frustumTest ) {\nshadowCoord.z += shadowBias[ i ];\n#ifdef SHADOWMAP_SOFT\nfloat shadow = 0.0;\nconst float shadowDelta = 1.0 / 9.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.25 * xPixelOffset;\nfloat dy0 = -1.25 * yPixelOffset;\nfloat dx1 = 1.25 * xPixelOffset;\nfloat dy1 = 1.25 * yPixelOffset;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n#endif\n}\n#ifdef SHADOWMAP_DEBUG\n#ifdef SHADOWMAP_CASCADE\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n#else\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n#endif\n#endif\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",
shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * mPosition;\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"};
THREE.UniformsUtils={merge:function(a){var b,c,d,e={};for(b=0;b<a.length;b++)for(c in d=this.clone(a[b]),d)e[c]=d[c];return e},clone:function(a){var b,c,d,e={};for(b in a)for(c in e[b]={},a[b])d=a[b][c],e[b][c]=d instanceof THREE.Color||d instanceof THREE.Vector2||d instanceof THREE.Vector3||d instanceof THREE.Vector4||d instanceof THREE.Matrix4||d instanceof THREE.Texture?d.clone():d instanceof Array?d.slice():d;return e}};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",
value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightPosition:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",
value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngle:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",
value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};
THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",
value:1}},vertexShader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalMatrix * normal;\ngl_Position = projectionMatrix * mvPosition;\n}",fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,
THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,
"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,
THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,
THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,
THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,
THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,
"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED\nif ( gl_FrontFacing )\ngl_FragColor.xyz *= vLightFront;\nelse\ngl_FragColor.xyz *= vLightBack;\n#else\ngl_FragColor.xyz *= vLightFront;\n#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,
THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,
THREE.ShaderChunk.defaultnormal_vertex,"vNormal = transformedNormal;",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",
THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,
THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,
THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,
THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",
THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}};
THREE.WebGLRenderer=function(a){function b(a,b){var c=a.vertices.length,d=b.material;if(d.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var f in d.attributes){var e=d.attributes[f];if(!e.__webglInitialized||e.createUniqueBuffers){e.__webglInitialized=!0;var g=1;"v2"===e.type?g=2:"v3"===e.type?g=3:"v4"===e.type?g=4:"c"===e.type&&(g=3);e.size=g;e.array=new Float32Array(c*g);e.buffer=h.createBuffer();e.buffer.belongsToAttribute=f;e.needsUpdate=!0}a.__webglCustomAttributesList.push(e)}}}
function c(a,b){if(a.material&&!(a.material instanceof THREE.MeshFaceMaterial))return a.material;if(0<=b.materialIndex)return a.geometry.materials[b.materialIndex]}function d(a){return a instanceof THREE.MeshBasicMaterial&&!a.envMap||a instanceof THREE.MeshDepthMaterial?!1:a&&void 0!==a.shading&&a.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function e(a){return a.map||a.lightMap||a.bumpMap||a.normalMap||a.specularMap||a instanceof THREE.ShaderMaterial?!0:!1}function f(a){var b,
c,d;for(b in a.attributes)d="index"===b?h.ELEMENT_ARRAY_BUFFER:h.ARRAY_BUFFER,c=a.attributes[b],c.buffer=h.createBuffer(),h.bindBuffer(d,c.buffer),h.bufferData(d,c.array,h.STATIC_DRAW)}function g(a,b,c){var d,f,e,g,i=a.vertices;g=i.length;var j=a.colors,k=j.length,l=a.__vertexArray,m=a.__colorArray,n=a.__sortArray,o=a.verticesNeedUpdate,p=a.colorsNeedUpdate,r=a.__webglCustomAttributesList;if(c.sortParticles){cc.copy(Qb);cc.multiplySelf(c.matrixWorld);for(d=0;d<g;d++)f=i[d],vb.copy(f),cc.multiplyVector3(vb),
n[d]=[vb.z,d];n.sort(function(a,b){return b[0]-a[0]});for(d=0;d<g;d++)f=i[n[d][1]],e=3*d,l[e]=f.x,l[e+1]=f.y,l[e+2]=f.z;for(d=0;d<k;d++)e=3*d,f=j[n[d][1]],m[e]=f.r,m[e+1]=f.g,m[e+2]=f.b;if(r){j=0;for(k=r.length;j<k;j++)if(i=r[j],void 0===i.boundTo||"vertices"===i.boundTo)if(e=0,f=i.value.length,1===i.size)for(d=0;d<f;d++)g=n[d][1],i.array[d]=i.value[g];else if(2===i.size)for(d=0;d<f;d++)g=n[d][1],g=i.value[g],i.array[e]=g.x,i.array[e+1]=g.y,e+=2;else if(3===i.size)if("c"===i.type)for(d=0;d<f;d++)g=
n[d][1],g=i.value[g],i.array[e]=g.r,i.array[e+1]=g.g,i.array[e+2]=g.b,e+=3;else for(d=0;d<f;d++)g=n[d][1],g=i.value[g],i.array[e]=g.x,i.array[e+1]=g.y,i.array[e+2]=g.z,e+=3;else if(4===i.size)for(d=0;d<f;d++)g=n[d][1],g=i.value[g],i.array[e]=g.x,i.array[e+1]=g.y,i.array[e+2]=g.z,i.array[e+3]=g.w,e+=4}}else{if(o)for(d=0;d<g;d++)f=i[d],e=3*d,l[e]=f.x,l[e+1]=f.y,l[e+2]=f.z;if(p)for(d=0;d<k;d++)f=j[d],e=3*d,m[e]=f.r,m[e+1]=f.g,m[e+2]=f.b;if(r){j=0;for(k=r.length;j<k;j++)if(i=r[j],i.needsUpdate&&(void 0===
i.boundTo||"vertices"===i.boundTo))if(f=i.value.length,e=0,1===i.size)for(d=0;d<f;d++)i.array[d]=i.value[d];else if(2===i.size)for(d=0;d<f;d++)g=i.value[d],i.array[e]=g.x,i.array[e+1]=g.y,e+=2;else if(3===i.size)if("c"===i.type)for(d=0;d<f;d++)g=i.value[d],i.array[e]=g.r,i.array[e+1]=g.g,i.array[e+2]=g.b,e+=3;else for(d=0;d<f;d++)g=i.value[d],i.array[e]=g.x,i.array[e+1]=g.y,i.array[e+2]=g.z,e+=3;else if(4===i.size)for(d=0;d<f;d++)g=i.value[d],i.array[e]=g.x,i.array[e+1]=g.y,i.array[e+2]=g.z,i.array[e+
3]=g.w,e+=4}}if(o||c.sortParticles)h.bindBuffer(h.ARRAY_BUFFER,a.__webglVertexBuffer),h.bufferData(h.ARRAY_BUFFER,l,b);if(p||c.sortParticles)h.bindBuffer(h.ARRAY_BUFFER,a.__webglColorBuffer),h.bufferData(h.ARRAY_BUFFER,m,b);if(r){j=0;for(k=r.length;j<k;j++)if(i=r[j],i.needsUpdate||c.sortParticles)h.bindBuffer(h.ARRAY_BUFFER,i.buffer),h.bufferData(h.ARRAY_BUFFER,i.array,b)}}function j(a,b,c){var d=a.attributes,f=d.index,e=d.position,g=d.normal,i=d.uv,j=d.color,d=d.tangent;a.elementsNeedUpdate&&void 0!==
f&&(h.bindBuffer(h.ELEMENT_ARRAY_BUFFER,f.buffer),h.bufferData(h.ELEMENT_ARRAY_BUFFER,f.array,b));a.verticesNeedUpdate&&void 0!==e&&(h.bindBuffer(h.ARRAY_BUFFER,e.buffer),h.bufferData(h.ARRAY_BUFFER,e.array,b));a.normalsNeedUpdate&&void 0!==g&&(h.bindBuffer(h.ARRAY_BUFFER,g.buffer),h.bufferData(h.ARRAY_BUFFER,g.array,b));a.uvsNeedUpdate&&void 0!==i&&(h.bindBuffer(h.ARRAY_BUFFER,i.buffer),h.bufferData(h.ARRAY_BUFFER,i.array,b));a.colorsNeedUpdate&&void 0!==j&&(h.bindBuffer(h.ARRAY_BUFFER,j.buffer),
h.bufferData(h.ARRAY_BUFFER,j.array,b));a.tangentsNeedUpdate&&void 0!==d&&(h.bindBuffer(h.ARRAY_BUFFER,d.buffer),h.bufferData(h.ARRAY_BUFFER,d.array,b));if(c)for(var k in a.attributes)delete a.attributes[k].array}function l(a,b){return b.z-a.z}function k(a,b){return b[1]-a[1]}function i(a,b,c){if(a.length)for(var d=0,f=a.length;d<f;d++)Aa=ra=null,Z=da=Ha=wa=Sa=$a=Ma=-1,Ua=!0,a[d].render(b,c,rc,dc),Aa=ra=null,Z=da=Ha=wa=Sa=$a=Ma=-1,Ua=!0}function o(a,b,c,d,f,e,h,g){var i,j,k,l;b?(j=a.length-1,l=b=
-1):(j=0,b=a.length,l=1);for(var m=j;m!==b;m+=l)if(i=a[m],i.render){j=i.object;k=i.buffer;if(g)i=g;else{i=i[c];if(!i)continue;h&&P.setBlending(i.blending,i.blendEquation,i.blendSrc,i.blendDst);P.setDepthTest(i.depthTest);P.setDepthWrite(i.depthWrite);x(i.polygonOffset,i.polygonOffsetFactor,i.polygonOffsetUnits)}P.setMaterialFaces(i);k instanceof THREE.BufferGeometry?P.renderBufferDirect(d,f,e,i,k,j):P.renderBuffer(d,f,e,i,k,j)}}function m(a,b,c,d,f,e,h){for(var g,i,j=0,k=a.length;j<k;j++)if(g=a[j],
i=g.object,i.visible){if(h)g=h;else{g=g[b];if(!g)continue;e&&P.setBlending(g.blending,g.blendEquation,g.blendSrc,g.blendDst);P.setDepthTest(g.depthTest);P.setDepthWrite(g.depthWrite);x(g.polygonOffset,g.polygonOffsetFactor,g.polygonOffsetUnits)}P.renderImmediateObject(c,d,f,g,i)}}function s(a,b,c){a.push({buffer:b,object:c,opaque:null,transparent:null})}function n(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;return!1}function u(a){for(var b in a.attributes)a.attributes[b].needsUpdate=
!1}function p(a,b){for(var c=a.length-1;0<=c;c--)a[c].object===b&&a.splice(c,1)}function r(a,b){for(var c=a.length-1;0<=c;c--)a[c]===b&&a.splice(c,1)}function A(a,b,c,d,f){sa=0;d.needsUpdate&&(d.program&&P.deallocateMaterial(d),P.initMaterial(d,b,c,f),d.needsUpdate=!1);d.morphTargets&&!f.__webglMorphTargetInfluences&&(f.__webglMorphTargetInfluences=new Float32Array(P.maxMorphTargets));var e=!1,g=d.program,i=g.uniforms,j=d.uniforms;g!==ra&&(h.useProgram(g),ra=g,e=!0);d.id!==Z&&(Z=d.id,e=!0);if(e||
a!==Aa)h.uniformMatrix4fv(i.projectionMatrix,!1,a._projectionMatrixArray),a!==Aa&&(Aa=a);if(d.skinning)if(ec&&f.useVertexTexture){if(null!==i.boneTexture){var k=w();h.uniform1i(i.boneTexture,k);P.setTexture(f.boneTexture,k)}}else null!==i.boneGlobalMatrices&&h.uniformMatrix4fv(i.boneGlobalMatrices,!1,f.boneMatrices);if(e){c&&d.fog&&(j.fogColor.value=c.color,c instanceof THREE.Fog?(j.fogNear.value=c.near,j.fogFar.value=c.far):c instanceof THREE.FogExp2&&(j.fogDensity.value=c.density));if(d instanceof
THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d.lights){if(Ua){for(var l=0,m=0,n=0,o,p,r,s,u=sc,v=u.directional.colors,x=u.directional.positions,A=u.point.colors,C=u.point.positions,D=u.point.distances,G=u.spot.colors,M=u.spot.positions,N=u.spot.distances,F=u.spot.directions,R=u.spot.angles,E=u.spot.exponents,W=u.hemi.skyColors,da=u.hemi.groundColors,Y=u.hemi.positions,ha=0,ia=0,ma=0,fa=0,c=o=r=r=p=0,e=b.length;c<e;c++)k=b[c],!k.onlyShadow&&k.visible&&(o=k.color,s=k.intensity,p=
k.distance,k instanceof THREE.AmbientLight?P.gammaInput?(l+=o.r*o.r,m+=o.g*o.g,n+=o.b*o.b):(l+=o.r,m+=o.g,n+=o.b):k instanceof THREE.DirectionalLight?(p=3*ha,P.gammaInput?B(v,p,o,s*s):y(v,p,o,s),Qa.copy(k.matrixWorld.getPosition()),Qa.subSelf(k.target.matrixWorld.getPosition()),Qa.normalize(),x[p]=Qa.x,x[p+1]=Qa.y,x[p+2]=Qa.z,ha+=1):k instanceof THREE.PointLight?(r=3*ia,P.gammaInput?B(A,r,o,s*s):y(A,r,o,s),s=k.matrixWorld.getPosition(),C[r]=s.x,C[r+1]=s.y,C[r+2]=s.z,D[ia]=p,ia+=1):k instanceof THREE.SpotLight?
(r=3*ma,P.gammaInput?B(G,r,o,s*s):y(G,r,o,s),s=k.matrixWorld.getPosition(),M[r]=s.x,M[r+1]=s.y,M[r+2]=s.z,N[ma]=p,Qa.copy(s),Qa.subSelf(k.target.matrixWorld.getPosition()),Qa.normalize(),F[r]=Qa.x,F[r+1]=Qa.y,F[r+2]=Qa.z,R[ma]=Math.cos(k.angle),E[ma]=k.exponent,ma+=1):k instanceof THREE.HemisphereLight&&(p=k.color,r=k.groundColor,o=3*fa,P.gammaInput?(s*=s,B(W,o,p,s),B(da,o,r,s)):(y(W,o,p,s),y(da,o,r,s)),s=k.matrixWorld.getPosition(),Y[o]=s.x,Y[o+1]=s.y,Y[o+2]=s.z,fa+=1));c=3*ha;for(e=v.length;c<e;c++)v[c]=
0;c=3*ia;for(e=A.length;c<e;c++)A[c]=0;c=3*ma;for(e=G.length;c<e;c++)G[c]=0;c=3*fa;for(e=W.length;c<e;c++)W[c]=0;c=3*fa;for(e=da.length;c<e;c++)da[c]=0;u.directional.length=ha;u.point.length=ia;u.spot.length=ma;u.hemi.length=fa;u.ambient[0]=l;u.ambient[1]=m;u.ambient[2]=n;Ua=!1}c=sc;j.ambientLightColor.value=c.ambient;j.directionalLightColor.value=c.directional.colors;j.directionalLightDirection.value=c.directional.positions;j.pointLightColor.value=c.point.colors;j.pointLightPosition.value=c.point.positions;
j.pointLightDistance.value=c.point.distances;j.spotLightColor.value=c.spot.colors;j.spotLightPosition.value=c.spot.positions;j.spotLightDistance.value=c.spot.distances;j.spotLightDirection.value=c.spot.directions;j.spotLightAngle.value=c.spot.angles;j.spotLightExponent.value=c.spot.exponents;j.hemisphereLightSkyColor.value=c.hemi.skyColors;j.hemisphereLightGroundColor.value=c.hemi.groundColors;j.hemisphereLightPosition.value=c.hemi.positions}if(d instanceof THREE.MeshBasicMaterial||d instanceof THREE.MeshLambertMaterial||
d instanceof THREE.MeshPhongMaterial){j.opacity.value=d.opacity;P.gammaInput?j.diffuse.value.copyGammaToLinear(d.color):j.diffuse.value=d.color;j.map.value=d.map;j.lightMap.value=d.lightMap;j.specularMap.value=d.specularMap;d.bumpMap&&(j.bumpMap.value=d.bumpMap,j.bumpScale.value=d.bumpScale);d.normalMap&&(j.normalMap.value=d.normalMap,j.normalScale.value.copy(d.normalScale));var xa;d.map?xa=d.map:d.specularMap?xa=d.specularMap:d.normalMap?xa=d.normalMap:d.bumpMap&&(xa=d.bumpMap);void 0!==xa&&(c=xa.offset,
xa=xa.repeat,j.offsetRepeat.value.set(c.x,c.y,xa.x,xa.y));j.envMap.value=d.envMap;j.flipEnvMap.value=d.envMap instanceof THREE.WebGLRenderTargetCube?1:-1;j.reflectivity.value=d.reflectivity;j.refractionRatio.value=d.refractionRatio;j.combine.value=d.combine;j.useRefract.value=d.envMap&&d.envMap.mapping instanceof THREE.CubeRefractionMapping}d instanceof THREE.LineBasicMaterial?(j.diffuse.value=d.color,j.opacity.value=d.opacity):d instanceof THREE.ParticleBasicMaterial?(j.psColor.value=d.color,j.opacity.value=
d.opacity,j.size.value=d.size,j.scale.value=Q.height/2,j.map.value=d.map):d instanceof THREE.MeshPhongMaterial?(j.shininess.value=d.shininess,P.gammaInput?(j.ambient.value.copyGammaToLinear(d.ambient),j.emissive.value.copyGammaToLinear(d.emissive),j.specular.value.copyGammaToLinear(d.specular)):(j.ambient.value=d.ambient,j.emissive.value=d.emissive,j.specular.value=d.specular),d.wrapAround&&j.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshLambertMaterial?(P.gammaInput?(j.ambient.value.copyGammaToLinear(d.ambient),
j.emissive.value.copyGammaToLinear(d.emissive)):(j.ambient.value=d.ambient,j.emissive.value=d.emissive),d.wrapAround&&j.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshDepthMaterial?(j.mNear.value=a.near,j.mFar.value=a.far,j.opacity.value=d.opacity):d instanceof THREE.MeshNormalMaterial&&(j.opacity.value=d.opacity);if(f.receiveShadow&&!d._shadowPass&&j.shadowMatrix){c=xa=0;for(e=b.length;c<e;c++)if(k=b[c],k.castShadow&&(k instanceof THREE.SpotLight||k instanceof THREE.DirectionalLight&&!k.shadowCascade))j.shadowMap.value[xa]=
k.shadowMap,j.shadowMapSize.value[xa]=k.shadowMapSize,j.shadowMatrix.value[xa]=k.shadowMatrix,j.shadowDarkness.value[xa]=k.shadowDarkness,j.shadowBias.value[xa]=k.shadowBias,xa++}b=d.uniformsList;j=0;for(xa=b.length;j<xa;j++)if(e=g.uniforms[b[j][1]])if(c=b[j][0],l=c.type,k=c.value,"i"===l)h.uniform1i(e,k);else if("f"===l)h.uniform1f(e,k);else if("v2"===l)h.uniform2f(e,k.x,k.y);else if("v3"===l)h.uniform3f(e,k.x,k.y,k.z);else if("v4"===l)h.uniform4f(e,k.x,k.y,k.z,k.w);else if("c"===l)h.uniform3f(e,
k.r,k.g,k.b);else if("iv1"===l)h.uniform1iv(e,k);else if("iv"===l)h.uniform3iv(e,k);else if("fv1"===l)h.uniform1fv(e,k);else if("fv"===l)h.uniform3fv(e,k);else if("v2v"===l){void 0===c._array&&(c._array=new Float32Array(2*k.length));l=0;for(m=k.length;l<m;l++)n=2*l,c._array[n]=k[l].x,c._array[n+1]=k[l].y;h.uniform2fv(e,c._array)}else if("v3v"===l){void 0===c._array&&(c._array=new Float32Array(3*k.length));l=0;for(m=k.length;l<m;l++)n=3*l,c._array[n]=k[l].x,c._array[n+1]=k[l].y,c._array[n+2]=k[l].z;
h.uniform3fv(e,c._array)}else if("v4v"===l){void 0===c._array&&(c._array=new Float32Array(4*k.length));l=0;for(m=k.length;l<m;l++)n=4*l,c._array[n]=k[l].x,c._array[n+1]=k[l].y,c._array[n+2]=k[l].z,c._array[n+3]=k[l].w;h.uniform4fv(e,c._array)}else if("m4"===l)void 0===c._array&&(c._array=new Float32Array(16)),k.flattenToArray(c._array),h.uniformMatrix4fv(e,!1,c._array);else if("m4v"===l){void 0===c._array&&(c._array=new Float32Array(16*k.length));l=0;for(m=k.length;l<m;l++)k[l].flattenToArrayOffset(c._array,
16*l);h.uniformMatrix4fv(e,!1,c._array)}else if("t"===l){if(n=k,k=w(),h.uniform1i(e,k),n)if(n.image instanceof Array&&6===n.image.length){if(c=n,e=k,6===c.image.length)if(c.needsUpdate){c.image.__webglTextureCube||(c.image.__webglTextureCube=h.createTexture());h.activeTexture(h.TEXTURE0+e);h.bindTexture(h.TEXTURE_CUBE_MAP,c.image.__webglTextureCube);h.pixelStorei(h.UNPACK_FLIP_Y_WEBGL,c.flipY);e=c instanceof THREE.CompressedTexture;k=[];for(l=0;6>l;l++)m=k,n=l,P.autoScaleCubemaps&&!e?(u=c.image[l],
x=Hc,u.width<=x&&u.height<=x||(A=Math.max(u.width,u.height),v=Math.floor(u.width*x/A),x=Math.floor(u.height*x/A),A=document.createElement("canvas"),A.width=v,A.height=x,A.getContext("2d").drawImage(u,0,0,u.width,u.height,0,0,v,x),u=A)):u=c.image[l],m[n]=u;l=k[0];m=0===(l.width&l.width-1)&&0===(l.height&l.height-1);n=I(c.format);u=I(c.type);T(h.TEXTURE_CUBE_MAP,c,m);for(l=0;6>l;l++)if(e){x=k[l].mipmaps;A=0;for(C=x.length;A<C;A++)v=x[A],h.compressedTexImage2D(h.TEXTURE_CUBE_MAP_POSITIVE_X+l,A,n,v.width,
v.height,0,v.data)}else h.texImage2D(h.TEXTURE_CUBE_MAP_POSITIVE_X+l,0,n,n,u,k[l]);c.generateMipmaps&&m&&h.generateMipmap(h.TEXTURE_CUBE_MAP);c.needsUpdate=!1;if(c.onUpdate)c.onUpdate()}else h.activeTexture(h.TEXTURE0+e),h.bindTexture(h.TEXTURE_CUBE_MAP,c.image.__webglTextureCube)}else n instanceof THREE.WebGLRenderTargetCube?(c=n,h.activeTexture(h.TEXTURE0+k),h.bindTexture(h.TEXTURE_CUBE_MAP,c.__webglTexture)):P.setTexture(n,k)}else if("tv"===l){void 0===c._array&&(c._array=[]);l=0;for(m=c.value.length;l<
m;l++)c._array[l]=w();h.uniform1iv(e,c._array);l=0;for(m=c.value.length;l<m;l++)n=c.value[l],k=c._array[l],n&&P.setTexture(n,k)}if((d instanceof THREE.ShaderMaterial||d instanceof THREE.MeshPhongMaterial||d.envMap)&&null!==i.cameraPosition)b=a.matrixWorld.getPosition(),h.uniform3f(i.cameraPosition,b.x,b.y,b.z);(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.ShaderMaterial||d.skinning)&&null!==i.viewMatrix&&h.uniformMatrix4fv(i.viewMatrix,!1,a._viewMatrixArray)}h.uniformMatrix4fv(i.modelViewMatrix,
!1,f._modelViewMatrix.elements);i.normalMatrix&&h.uniformMatrix3fv(i.normalMatrix,!1,f._normalMatrix.elements);null!==i.modelMatrix&&h.uniformMatrix4fv(i.modelMatrix,!1,f.matrixWorld.elements);return g}function w(){var a=sa;a>=tc&&console.warn("Trying to use "+a+" texture units while this GPU supports only "+tc);sa+=1;return a}function v(a,b){a._modelViewMatrix.multiply(b.matrixWorldInverse,a.matrixWorld);a._normalMatrix.getInverse(a._modelViewMatrix);a._normalMatrix.transpose()}function B(a,b,c,
d){a[b]=c.r*c.r*d;a[b+1]=c.g*c.g*d;a[b+2]=c.b*c.b*d}function y(a,b,c,d){a[b]=c.r*d;a[b+1]=c.g*d;a[b+2]=c.b*d}function x(a,b,c){ub!==a&&(a?h.enable(h.POLYGON_OFFSET_FILL):h.disable(h.POLYGON_OFFSET_FILL),ub=a);if(a&&(cb!==b||ac!==c))h.polygonOffset(b,c),cb=b,ac=c}function R(a){for(var a=a.split("\n"),b=0,c=a.length;b<c;b++)a[b]=b+1+": "+a[b];return a.join("\n")}function M(a,b){var c;"fragment"===a?c=h.createShader(h.FRAGMENT_SHADER):"vertex"===a&&(c=h.createShader(h.VERTEX_SHADER));h.shaderSource(c,
b);h.compileShader(c);return!h.getShaderParameter(c,h.COMPILE_STATUS)?(console.error(h.getShaderInfoLog(c)),console.error(R(b)),null):c}function T(a,b,c){c?(h.texParameteri(a,h.TEXTURE_WRAP_S,I(b.wrapS)),h.texParameteri(a,h.TEXTURE_WRAP_T,I(b.wrapT)),h.texParameteri(a,h.TEXTURE_MAG_FILTER,I(b.magFilter)),h.texParameteri(a,h.TEXTURE_MIN_FILTER,I(b.minFilter))):(h.texParameteri(a,h.TEXTURE_WRAP_S,h.CLAMP_TO_EDGE),h.texParameteri(a,h.TEXTURE_WRAP_T,h.CLAMP_TO_EDGE),h.texParameteri(a,h.TEXTURE_MAG_FILTER,
G(b.magFilter)),h.texParameteri(a,h.TEXTURE_MIN_FILTER,G(b.minFilter)));if(Cb&&b.type!==THREE.FloatType&&(1<b.anisotropy||b.__oldAnisotropy))h.texParameterf(a,Cb.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(b.anisotropy,uc)),b.__oldAnisotropy=b.anisotropy}function D(a,b){h.bindRenderbuffer(h.RENDERBUFFER,a);b.depthBuffer&&!b.stencilBuffer?(h.renderbufferStorage(h.RENDERBUFFER,h.DEPTH_COMPONENT16,b.width,b.height),h.framebufferRenderbuffer(h.FRAMEBUFFER,h.DEPTH_ATTACHMENT,h.RENDERBUFFER,a)):b.depthBuffer&&
b.stencilBuffer?(h.renderbufferStorage(h.RENDERBUFFER,h.DEPTH_STENCIL,b.width,b.height),h.framebufferRenderbuffer(h.FRAMEBUFFER,h.DEPTH_STENCIL_ATTACHMENT,h.RENDERBUFFER,a)):h.renderbufferStorage(h.RENDERBUFFER,h.RGBA4,b.width,b.height)}function G(a){return a===THREE.NearestFilter||a===THREE.NearestMipMapNearestFilter||a===THREE.NearestMipMapLinearFilter?h.NEAREST:h.LINEAR}function I(a){if(a===THREE.RepeatWrapping)return h.REPEAT;if(a===THREE.ClampToEdgeWrapping)return h.CLAMP_TO_EDGE;if(a===THREE.MirroredRepeatWrapping)return h.MIRRORED_REPEAT;
if(a===THREE.NearestFilter)return h.NEAREST;if(a===THREE.NearestMipMapNearestFilter)return h.NEAREST_MIPMAP_NEAREST;if(a===THREE.NearestMipMapLinearFilter)return h.NEAREST_MIPMAP_LINEAR;if(a===THREE.LinearFilter)return h.LINEAR;if(a===THREE.LinearMipMapNearestFilter)return h.LINEAR_MIPMAP_NEAREST;if(a===THREE.LinearMipMapLinearFilter)return h.LINEAR_MIPMAP_LINEAR;if(a===THREE.UnsignedByteType)return h.UNSIGNED_BYTE;if(a===THREE.UnsignedShort4444Type)return h.UNSIGNED_SHORT_4_4_4_4;if(a===THREE.UnsignedShort5551Type)return h.UNSIGNED_SHORT_5_5_5_1;
if(a===THREE.UnsignedShort565Type)return h.UNSIGNED_SHORT_5_6_5;if(a===THREE.ByteType)return h.BYTE;if(a===THREE.ShortType)return h.SHORT;if(a===THREE.UnsignedShortType)return h.UNSIGNED_SHORT;if(a===THREE.IntType)return h.INT;if(a===THREE.UnsignedIntType)return h.UNSIGNED_INT;if(a===THREE.FloatType)return h.FLOAT;if(a===THREE.AlphaFormat)return h.ALPHA;if(a===THREE.RGBFormat)return h.RGB;if(a===THREE.RGBAFormat)return h.RGBA;if(a===THREE.LuminanceFormat)return h.LUMINANCE;if(a===THREE.LuminanceAlphaFormat)return h.LUMINANCE_ALPHA;
if(a===THREE.AddEquation)return h.FUNC_ADD;if(a===THREE.SubtractEquation)return h.FUNC_SUBTRACT;if(a===THREE.ReverseSubtractEquation)return h.FUNC_REVERSE_SUBTRACT;if(a===THREE.ZeroFactor)return h.ZERO;if(a===THREE.OneFactor)return h.ONE;if(a===THREE.SrcColorFactor)return h.SRC_COLOR;if(a===THREE.OneMinusSrcColorFactor)return h.ONE_MINUS_SRC_COLOR;if(a===THREE.SrcAlphaFactor)return h.SRC_ALPHA;if(a===THREE.OneMinusSrcAlphaFactor)return h.ONE_MINUS_SRC_ALPHA;if(a===THREE.DstAlphaFactor)return h.DST_ALPHA;
if(a===THREE.OneMinusDstAlphaFactor)return h.ONE_MINUS_DST_ALPHA;if(a===THREE.DstColorFactor)return h.DST_COLOR;if(a===THREE.OneMinusDstColorFactor)return h.ONE_MINUS_DST_COLOR;if(a===THREE.SrcAlphaSaturateFactor)return h.SRC_ALPHA_SATURATE;if(void 0!==Ta){if(a===THREE.RGB_S3TC_DXT1_Format)return Ta.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT1_Format)return Ta.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT3_Format)return Ta.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===THREE.RGBA_S3TC_DXT5_Format)return Ta.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}
console.log("THREE.WebGLRenderer",THREE.REVISION);var a=a||{},Q=void 0!==a.canvas?a.canvas:document.createElement("canvas"),F=void 0!==a.precision?a.precision:"highp",N=void 0!==a.alpha?a.alpha:!0,C=void 0!==a.premultipliedAlpha?a.premultipliedAlpha:!0,E=void 0!==a.antialias?a.antialias:!1,W=void 0!==a.stencil?a.stencil:!0,ha=void 0!==a.preserveDrawingBuffer?a.preserveDrawingBuffer:!1,Y=void 0!==a.clearColor?new THREE.Color(a.clearColor):new THREE.Color(0),Ea=void 0!==a.clearAlpha?a.clearAlpha:0,
fa=void 0!==a.maxLights?a.maxLights:4;this.domElement=Q;this.context=null;this.autoUpdateScene=this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.shadowMapEnabled=this.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1;this.shadowMapCullFrontFaces=this.shadowMapSoft=this.shadowMapAutoUpdate=!0;this.shadowMapCascade=this.shadowMapDebug=!1;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=!0;this.renderPluginsPre=
[];this.renderPluginsPost=[];this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var P=this,Ga=[],La=0,ra=null,ka=null,Z=-1,da=null,Aa=null,ma=0,sa=0,wa=-1,Ha=-1,Ma=-1,tb=-1,ia=-1,Za=-1,$a=-1,Sa=-1,ub=null,cb=null,ac=null,Bb=null,Lb=0,bc=0,Rb=0,Mb=0,rc=0,dc=0,Sb=new THREE.Frustum,Qb=new THREE.Matrix4,cc=new THREE.Matrix4,vb=new THREE.Vector4,Qa=new THREE.Vector3,Ua=!0,sc={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,
colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],angles:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},h,Cb,Ta;try{if(!(h=Q.getContext("experimental-webgl",{alpha:N,premultipliedAlpha:C,antialias:E,stencil:W,preserveDrawingBuffer:ha})))throw"Error creating WebGL context.";}catch(Ic){console.error(Ic)}a=h.getExtension("OES_texture_float");N=h.getExtension("OES_standard_derivatives");Cb=h.getExtension("EXT_texture_filter_anisotropic")||
h.getExtension("MOZ_EXT_texture_filter_anisotropic")||h.getExtension("WEBKIT_EXT_texture_filter_anisotropic");Ta=h.getExtension("WEBGL_compressed_texture_s3tc")||h.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||h.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");a||console.log("THREE.WebGLRenderer: Float textures not supported.");N||console.log("THREE.WebGLRenderer: Standard derivatives not supported.");Cb||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported.");Ta||
console.log("THREE.WebGLRenderer: S3TC compressed textures not supported.");h.clearColor(0,0,0,1);h.clearDepth(1);h.clearStencil(0);h.enable(h.DEPTH_TEST);h.depthFunc(h.LEQUAL);h.frontFace(h.CCW);h.cullFace(h.BACK);h.enable(h.CULL_FACE);h.enable(h.BLEND);h.blendEquation(h.FUNC_ADD);h.blendFunc(h.SRC_ALPHA,h.ONE_MINUS_SRC_ALPHA);h.clearColor(Y.r,Y.g,Y.b,Ea);this.context=h;var tc=h.getParameter(h.MAX_TEXTURE_IMAGE_UNITS),N=h.getParameter(h.MAX_VERTEX_TEXTURE_IMAGE_UNITS);h.getParameter(h.MAX_TEXTURE_SIZE);
var Hc=h.getParameter(h.MAX_CUBE_MAP_TEXTURE_SIZE),uc=Cb?h.getParameter(Cb.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,Tb=0<N,ec=Tb&&a;Ta&&h.getParameter(h.COMPRESSED_TEXTURE_FORMATS);this.getContext=function(){return h};this.supportsVertexTextures=function(){return Tb};this.getMaxAnisotropy=function(){return uc};this.setSize=function(a,b){Q.width=a;Q.height=b;this.setViewport(0,0,Q.width,Q.height)};this.setViewport=function(a,b,c,d){Lb=void 0!==a?a:0;bc=void 0!==b?b:0;Rb=void 0!==c?c:Q.width;Mb=void 0!==d?
d:Q.height;h.viewport(Lb,bc,Rb,Mb)};this.setScissor=function(a,b,c,d){h.scissor(a,b,c,d)};this.enableScissorTest=function(a){a?h.enable(h.SCISSOR_TEST):h.disable(h.SCISSOR_TEST)};this.setClearColorHex=function(a,b){Y.setHex(a);Ea=b;h.clearColor(Y.r,Y.g,Y.b,Ea)};this.setClearColor=function(a,b){Y.copy(a);Ea=b;h.clearColor(Y.r,Y.g,Y.b,Ea)};this.getClearColor=function(){return Y};this.getClearAlpha=function(){return Ea};this.clear=function(a,b,c){var d=0;if(void 0===a||a)d|=h.COLOR_BUFFER_BIT;if(void 0===
b||b)d|=h.DEPTH_BUFFER_BIT;if(void 0===c||c)d|=h.STENCIL_BUFFER_BIT;h.clear(d)};this.clearTarget=function(a,b,c,d){this.setRenderTarget(a);this.clear(b,c,d)};this.addPostPlugin=function(a){a.init(this);this.renderPluginsPost.push(a)};this.addPrePlugin=function(a){a.init(this);this.renderPluginsPre.push(a)};this.deallocateObject=function(a){if(a.__webglInit)if(a.__webglInit=!1,delete a._modelViewMatrix,delete a._normalMatrix,delete a._normalMatrixArray,delete a._modelViewMatrixArray,delete a._modelMatrixArray,
a instanceof THREE.Mesh)for(var b in a.geometry.geometryGroups){var c=a.geometry.geometryGroups[b];h.deleteBuffer(c.__webglVertexBuffer);h.deleteBuffer(c.__webglNormalBuffer);h.deleteBuffer(c.__webglTangentBuffer);h.deleteBuffer(c.__webglColorBuffer);h.deleteBuffer(c.__webglUVBuffer);h.deleteBuffer(c.__webglUV2Buffer);h.deleteBuffer(c.__webglSkinIndicesBuffer);h.deleteBuffer(c.__webglSkinWeightsBuffer);h.deleteBuffer(c.__webglFaceBuffer);h.deleteBuffer(c.__webglLineBuffer);var d=void 0,e=void 0;if(c.numMorphTargets){d=
0;for(e=c.numMorphTargets;d<e;d++)h.deleteBuffer(c.__webglMorphTargetsBuffers[d])}if(c.numMorphNormals){d=0;for(e=c.numMorphNormals;d<e;d++)h.deleteBuffer(c.__webglMorphNormalsBuffers[d])}if(c.__webglCustomAttributesList)for(d in d=void 0,c.__webglCustomAttributesList)h.deleteBuffer(c.__webglCustomAttributesList[d].buffer);P.info.memory.geometries--}else a instanceof THREE.Ribbon?(a=a.geometry,h.deleteBuffer(a.__webglVertexBuffer),h.deleteBuffer(a.__webglColorBuffer),P.info.memory.geometries--):a instanceof
THREE.Line?(a=a.geometry,h.deleteBuffer(a.__webglVertexBuffer),h.deleteBuffer(a.__webglColorBuffer),P.info.memory.geometries--):a instanceof THREE.ParticleSystem&&(a=a.geometry,h.deleteBuffer(a.__webglVertexBuffer),h.deleteBuffer(a.__webglColorBuffer),P.info.memory.geometries--)};this.deallocateTexture=function(a){a.__webglInit&&(a.__webglInit=!1,h.deleteTexture(a.__webglTexture),P.info.memory.textures--)};this.deallocateRenderTarget=function(a){if(a&&a.__webglTexture)if(h.deleteTexture(a.__webglTexture),
a instanceof THREE.WebGLRenderTargetCube)for(var b=0;6>b;b++)h.deleteFramebuffer(a.__webglFramebuffer[b]),h.deleteRenderbuffer(a.__webglRenderbuffer[b]);else h.deleteFramebuffer(a.__webglFramebuffer),h.deleteRenderbuffer(a.__webglRenderbuffer)};this.deallocateMaterial=function(a){var b=a.program;if(b){a.program=void 0;var c,d,e=!1,a=0;for(c=Ga.length;a<c;a++)if(d=Ga[a],d.program===b){d.usedTimes--;0===d.usedTimes&&(e=!0);break}if(e){e=[];a=0;for(c=Ga.length;a<c;a++)d=Ga[a],d.program!==b&&e.push(d);
Ga=e;h.deleteProgram(b);P.info.memory.programs--}}};this.updateShadowMap=function(a,b){ra=null;Z=da=Sa=$a=Ma=-1;Ua=!0;Ha=wa=-1;this.shadowMapPlugin.update(a,b)};this.renderBufferImmediate=function(a,b,c){a.hasPositions&&!a.__webglVertexBuffer&&(a.__webglVertexBuffer=h.createBuffer());a.hasNormals&&!a.__webglNormalBuffer&&(a.__webglNormalBuffer=h.createBuffer());a.hasUvs&&!a.__webglUvBuffer&&(a.__webglUvBuffer=h.createBuffer());a.hasColors&&!a.__webglColorBuffer&&(a.__webglColorBuffer=h.createBuffer());
a.hasPositions&&(h.bindBuffer(h.ARRAY_BUFFER,a.__webglVertexBuffer),h.bufferData(h.ARRAY_BUFFER,a.positionArray,h.DYNAMIC_DRAW),h.enableVertexAttribArray(b.attributes.position),h.vertexAttribPointer(b.attributes.position,3,h.FLOAT,!1,0,0));if(a.hasNormals){h.bindBuffer(h.ARRAY_BUFFER,a.__webglNormalBuffer);if(c.shading===THREE.FlatShading){var d,e,f,g,i,j,k,l,n,m,o,p=3*a.count;for(o=0;o<p;o+=9)m=a.normalArray,d=m[o],e=m[o+1],f=m[o+2],g=m[o+3],j=m[o+4],l=m[o+5],i=m[o+6],k=m[o+7],n=m[o+8],d=(d+g+i)/
3,e=(e+j+k)/3,f=(f+l+n)/3,m[o]=d,m[o+1]=e,m[o+2]=f,m[o+3]=d,m[o+4]=e,m[o+5]=f,m[o+6]=d,m[o+7]=e,m[o+8]=f}h.bufferData(h.ARRAY_BUFFER,a.normalArray,h.DYNAMIC_DRAW);h.enableVertexAttribArray(b.attributes.normal);h.vertexAttribPointer(b.attributes.normal,3,h.FLOAT,!1,0,0)}a.hasUvs&&c.map&&(h.bindBuffer(h.ARRAY_BUFFER,a.__webglUvBuffer),h.bufferData(h.ARRAY_BUFFER,a.uvArray,h.DYNAMIC_DRAW),h.enableVertexAttribArray(b.attributes.uv),h.vertexAttribPointer(b.attributes.uv,2,h.FLOAT,!1,0,0));a.hasColors&&
c.vertexColors!==THREE.NoColors&&(h.bindBuffer(h.ARRAY_BUFFER,a.__webglColorBuffer),h.bufferData(h.ARRAY_BUFFER,a.colorArray,h.DYNAMIC_DRAW),h.enableVertexAttribArray(b.attributes.color),h.vertexAttribPointer(b.attributes.color,3,h.FLOAT,!1,0,0));h.drawArrays(h.TRIANGLES,0,a.count);a.count=0};this.renderBufferDirect=function(a,b,c,d,e,f){if(!1!==d.visible)if(c=A(a,b,c,d,f),a=c.attributes,b=!1,d=16777215*e.id+2*c.id+(d.wireframe?1:0),d!==da&&(da=d,b=!0),f instanceof THREE.Mesh){f=e.offsets;1<f.length&&
(b=!0);d=0;for(c=f.length;d<c;++d){var g=f[d].index;if(b){var i=e.attributes.position,j=i.itemSize;h.bindBuffer(h.ARRAY_BUFFER,i.buffer);h.vertexAttribPointer(a.position,j,h.FLOAT,!1,0,4*g*j);i=e.attributes.normal;0<=a.normal&&i&&(j=i.itemSize,h.bindBuffer(h.ARRAY_BUFFER,i.buffer),h.vertexAttribPointer(a.normal,j,h.FLOAT,!1,0,4*g*j));i=e.attributes.uv;0<=a.uv&&i&&(i.buffer?(j=i.itemSize,h.bindBuffer(h.ARRAY_BUFFER,i.buffer),h.vertexAttribPointer(a.uv,j,h.FLOAT,!1,0,4*g*j),h.enableVertexAttribArray(a.uv)):
h.disableVertexAttribArray(a.uv));j=e.attributes.color;if(0<=a.color&&j){var k=j.itemSize;h.bindBuffer(h.ARRAY_BUFFER,j.buffer);h.vertexAttribPointer(a.color,k,h.FLOAT,!1,0,4*g*k)}i=e.attributes.tangent;0<=a.tangent&&i&&(j=i.itemSize,h.bindBuffer(h.ARRAY_BUFFER,i.buffer),h.vertexAttribPointer(a.tangent,j,h.FLOAT,!1,0,4*g*j));h.bindBuffer(h.ELEMENT_ARRAY_BUFFER,e.attributes.index.buffer)}h.drawElements(h.TRIANGLES,f[d].count,h.UNSIGNED_SHORT,2*f[d].start);P.info.render.calls++;P.info.render.vertices+=
f[d].count;P.info.render.faces+=f[d].count/3}}else f instanceof THREE.ParticleSystem&&b&&(i=e.attributes.position,j=i.itemSize,h.bindBuffer(h.ARRAY_BUFFER,i.buffer),h.vertexAttribPointer(a.position,j,h.FLOAT,!1,0,0),j=e.attributes.color,0<=a.color&&j&&(k=j.itemSize,h.bindBuffer(h.ARRAY_BUFFER,j.buffer),h.vertexAttribPointer(a.color,k,h.FLOAT,!1,0,0)),h.drawArrays(h.POINTS,0,i.numItems/3),P.info.render.calls++,P.info.render.points+=i.numItems/3)};this.renderBuffer=function(a,b,c,d,e,f){if(!1!==d.visible){var g,
i,c=A(a,b,c,d,f),b=c.attributes,a=!1,c=16777215*e.id+2*c.id+(d.wireframe?1:0);c!==da&&(da=c,a=!0);if(!d.morphTargets&&0<=b.position)a&&(h.bindBuffer(h.ARRAY_BUFFER,e.__webglVertexBuffer),h.vertexAttribPointer(b.position,3,h.FLOAT,!1,0,0));else if(f.morphTargetBase){c=d.program.attributes;-1!==f.morphTargetBase?(h.bindBuffer(h.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[f.morphTargetBase]),h.vertexAttribPointer(c.position,3,h.FLOAT,!1,0,0)):0<=c.position&&(h.bindBuffer(h.ARRAY_BUFFER,e.__webglVertexBuffer),
h.vertexAttribPointer(c.position,3,h.FLOAT,!1,0,0));if(f.morphTargetForcedOrder.length){var j=0;i=f.morphTargetForcedOrder;for(g=f.morphTargetInfluences;j<d.numSupportedMorphTargets&&j<i.length;)h.bindBuffer(h.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[i[j]]),h.vertexAttribPointer(c["morphTarget"+j],3,h.FLOAT,!1,0,0),d.morphNormals&&(h.bindBuffer(h.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[i[j]]),h.vertexAttribPointer(c["morphNormal"+j],3,h.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[j]=g[i[j]],
j++}else{i=[];g=f.morphTargetInfluences;var l,m=g.length;for(l=0;l<m;l++)j=g[l],0<j&&i.push([l,j]);i.length>d.numSupportedMorphTargets?(i.sort(k),i.length=d.numSupportedMorphTargets):i.length>d.numSupportedMorphNormals?i.sort(k):0===i.length&&i.push([0,0]);for(j=0;j<d.numSupportedMorphTargets;)i[j]?(l=i[j][0],h.bindBuffer(h.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[l]),h.vertexAttribPointer(c["morphTarget"+j],3,h.FLOAT,!1,0,0),d.morphNormals&&(h.bindBuffer(h.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[l]),
h.vertexAttribPointer(c["morphNormal"+j],3,h.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[j]=g[l]):(h.vertexAttribPointer(c["morphTarget"+j],3,h.FLOAT,!1,0,0),d.morphNormals&&h.vertexAttribPointer(c["morphNormal"+j],3,h.FLOAT,!1,0,0),f.__webglMorphTargetInfluences[j]=0),j++}null!==d.program.uniforms.morphTargetInfluences&&h.uniform1fv(d.program.uniforms.morphTargetInfluences,f.__webglMorphTargetInfluences)}if(a){if(e.__webglCustomAttributesList){g=0;for(i=e.__webglCustomAttributesList.length;g<i;g++)c=
e.__webglCustomAttributesList[g],0<=b[c.buffer.belongsToAttribute]&&(h.bindBuffer(h.ARRAY_BUFFER,c.buffer),h.vertexAttribPointer(b[c.buffer.belongsToAttribute],c.size,h.FLOAT,!1,0,0))}0<=b.color&&(h.bindBuffer(h.ARRAY_BUFFER,e.__webglColorBuffer),h.vertexAttribPointer(b.color,3,h.FLOAT,!1,0,0));0<=b.normal&&(h.bindBuffer(h.ARRAY_BUFFER,e.__webglNormalBuffer),h.vertexAttribPointer(b.normal,3,h.FLOAT,!1,0,0));0<=b.tangent&&(h.bindBuffer(h.ARRAY_BUFFER,e.__webglTangentBuffer),h.vertexAttribPointer(b.tangent,
4,h.FLOAT,!1,0,0));0<=b.uv&&(e.__webglUVBuffer?(h.bindBuffer(h.ARRAY_BUFFER,e.__webglUVBuffer),h.vertexAttribPointer(b.uv,2,h.FLOAT,!1,0,0),h.enableVertexAttribArray(b.uv)):h.disableVertexAttribArray(b.uv));0<=b.uv2&&(e.__webglUV2Buffer?(h.bindBuffer(h.ARRAY_BUFFER,e.__webglUV2Buffer),h.vertexAttribPointer(b.uv2,2,h.FLOAT,!1,0,0),h.enableVertexAttribArray(b.uv2)):h.disableVertexAttribArray(b.uv2));d.skinning&&(0<=b.skinIndex&&0<=b.skinWeight)&&(h.bindBuffer(h.ARRAY_BUFFER,e.__webglSkinIndicesBuffer),
h.vertexAttribPointer(b.skinIndex,4,h.FLOAT,!1,0,0),h.bindBuffer(h.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),h.vertexAttribPointer(b.skinWeight,4,h.FLOAT,!1,0,0))}f instanceof THREE.Mesh?(d.wireframe?(d=d.wireframeLinewidth,d!==Bb&&(h.lineWidth(d),Bb=d),a&&h.bindBuffer(h.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),h.drawElements(h.LINES,e.__webglLineCount,h.UNSIGNED_SHORT,0)):(a&&h.bindBuffer(h.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),h.drawElements(h.TRIANGLES,e.__webglFaceCount,h.UNSIGNED_SHORT,0)),
P.info.render.calls++,P.info.render.vertices+=e.__webglFaceCount,P.info.render.faces+=e.__webglFaceCount/3):f instanceof THREE.Line?(f=f.type===THREE.LineStrip?h.LINE_STRIP:h.LINES,d=d.linewidth,d!==Bb&&(h.lineWidth(d),Bb=d),h.drawArrays(f,0,e.__webglLineCount),P.info.render.calls++):f instanceof THREE.ParticleSystem?(h.drawArrays(h.POINTS,0,e.__webglParticleCount),P.info.render.calls++,P.info.render.points+=e.__webglParticleCount):f instanceof THREE.Ribbon&&(h.drawArrays(h.TRIANGLE_STRIP,0,e.__webglVertexCount),
P.info.render.calls++)}};this.render=function(a,b,c,d){if(!1===b instanceof THREE.Camera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else{var e,f,g,j,k=a.__lights,n=a.fog;Z=-1;Ua=!0;this.autoUpdateScene&&a.updateMatrixWorld();void 0===b.parent&&b.updateMatrixWorld();b._viewMatrixArray||(b._viewMatrixArray=new Float32Array(16));b._projectionMatrixArray||(b._projectionMatrixArray=new Float32Array(16));b.matrixWorldInverse.getInverse(b.matrixWorld);b.matrixWorldInverse.flattenToArray(b._viewMatrixArray);
b.projectionMatrix.flattenToArray(b._projectionMatrixArray);Qb.multiply(b.projectionMatrix,b.matrixWorldInverse);Sb.setFromMatrix(Qb);this.autoUpdateObjects&&this.initWebGLObjects(a);i(this.renderPluginsPre,a,b);P.info.render.calls=0;P.info.render.vertices=0;P.info.render.faces=0;P.info.render.points=0;this.setRenderTarget(c);(this.autoClear||d)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);j=a.__webglObjects;d=0;for(e=j.length;d<e;d++)if(f=j[d],g=f.object,f.render=!1,
g.visible&&(!(g instanceof THREE.Mesh||g instanceof THREE.ParticleSystem)||!g.frustumCulled||Sb.contains(g))){v(g,b);var p=f,r=p.object,s=p.buffer,u=void 0,u=u=void 0,u=r.material;u instanceof THREE.MeshFaceMaterial?(u=s.materialIndex,0<=u&&(u=r.geometry.materials[u],u.transparent?(p.transparent=u,p.opaque=null):(p.opaque=u,p.transparent=null))):u&&(u.transparent?(p.transparent=u,p.opaque=null):(p.opaque=u,p.transparent=null));f.render=!0;!0===this.sortObjects&&(null!==g.renderDepth?f.z=g.renderDepth:
(vb.copy(g.matrixWorld.getPosition()),Qb.multiplyVector3(vb),f.z=vb.z))}this.sortObjects&&j.sort(l);j=a.__webglObjectsImmediate;d=0;for(e=j.length;d<e;d++)f=j[d],g=f.object,g.visible&&(v(g,b),g=f.object.material,g.transparent?(f.transparent=g,f.opaque=null):(f.opaque=g,f.transparent=null));a.overrideMaterial?(d=a.overrideMaterial,this.setBlending(d.blending,d.blendEquation,d.blendSrc,d.blendDst),this.setDepthTest(d.depthTest),this.setDepthWrite(d.depthWrite),x(d.polygonOffset,d.polygonOffsetFactor,
d.polygonOffsetUnits),o(a.__webglObjects,!1,"",b,k,n,!0,d),m(a.__webglObjectsImmediate,"",b,k,n,!1,d)):(this.setBlending(THREE.NormalBlending),o(a.__webglObjects,!0,"opaque",b,k,n,!1),m(a.__webglObjectsImmediate,"opaque",b,k,n,!1),o(a.__webglObjects,!1,"transparent",b,k,n,!0),m(a.__webglObjectsImmediate,"transparent",b,k,n,!0));i(this.renderPluginsPost,a,b);c&&(c.generateMipmaps&&c.minFilter!==THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter)&&(c instanceof THREE.WebGLRenderTargetCube?(h.bindTexture(h.TEXTURE_CUBE_MAP,
c.__webglTexture),h.generateMipmap(h.TEXTURE_CUBE_MAP),h.bindTexture(h.TEXTURE_CUBE_MAP,null)):(h.bindTexture(h.TEXTURE_2D,c.__webglTexture),h.generateMipmap(h.TEXTURE_2D),h.bindTexture(h.TEXTURE_2D,null)));this.setDepthTest(!0);this.setDepthWrite(!0)}};this.renderImmediateObject=function(a,b,c,d,e){var f=A(a,b,c,d,e);da=-1;P.setMaterialFaces(d);e.immediateRenderCallback?e.immediateRenderCallback(f,h,Sb):e.render(function(a){P.renderBufferImmediate(a,f,d)})};this.initWebGLObjects=function(a){a.__webglObjects||
(a.__webglObjects=[],a.__webglObjectsImmediate=[],a.__webglSprites=[],a.__webglFlares=[]);for(;a.__objectsAdded.length;){var i=a.__objectsAdded[0],k=a,l=void 0,m=void 0,o=void 0;if(!i.__webglInit)if(i.__webglInit=!0,i._modelViewMatrix=new THREE.Matrix4,i._normalMatrix=new THREE.Matrix3,i instanceof THREE.Mesh)if(m=i.geometry,m instanceof THREE.Geometry){if(void 0===m.geometryGroups){var v=m,w=void 0,x=void 0,y=void 0,A=void 0,B=void 0,C=void 0,D=void 0,G={},I=v.morphTargets.length,M=v.morphNormals.length;
v.geometryGroups={};w=0;for(x=v.faces.length;w<x;w++)y=v.faces[w],A=y.materialIndex,C=void 0!==A?A:-1,void 0===G[C]&&(G[C]={hash:C,counter:0}),D=G[C].hash+"_"+G[C].counter,void 0===v.geometryGroups[D]&&(v.geometryGroups[D]={faces3:[],faces4:[],materialIndex:A,vertices:0,numMorphTargets:I,numMorphNormals:M}),B=y instanceof THREE.Face3?3:4,65535<v.geometryGroups[D].vertices+B&&(G[C].counter+=1,D=G[C].hash+"_"+G[C].counter,void 0===v.geometryGroups[D]&&(v.geometryGroups[D]={faces3:[],faces4:[],materialIndex:A,
vertices:0,numMorphTargets:I,numMorphNormals:M})),y instanceof THREE.Face3?v.geometryGroups[D].faces3.push(w):v.geometryGroups[D].faces4.push(w),v.geometryGroups[D].vertices+=B;v.geometryGroupsList=[];var N=void 0;for(N in v.geometryGroups)v.geometryGroups[N].id=ma++,v.geometryGroupsList.push(v.geometryGroups[N])}for(l in m.geometryGroups)if(o=m.geometryGroups[l],!o.__webglVertexBuffer){var F=o;F.__webglVertexBuffer=h.createBuffer();F.__webglNormalBuffer=h.createBuffer();F.__webglTangentBuffer=h.createBuffer();
F.__webglColorBuffer=h.createBuffer();F.__webglUVBuffer=h.createBuffer();F.__webglUV2Buffer=h.createBuffer();F.__webglSkinIndicesBuffer=h.createBuffer();F.__webglSkinWeightsBuffer=h.createBuffer();F.__webglFaceBuffer=h.createBuffer();F.__webglLineBuffer=h.createBuffer();var Q=void 0,R=void 0;if(F.numMorphTargets){F.__webglMorphTargetsBuffers=[];Q=0;for(R=F.numMorphTargets;Q<R;Q++)F.__webglMorphTargetsBuffers.push(h.createBuffer())}if(F.numMorphNormals){F.__webglMorphNormalsBuffers=[];Q=0;for(R=F.numMorphNormals;Q<
R;Q++)F.__webglMorphNormalsBuffers.push(h.createBuffer())}P.info.memory.geometries++;var E=o,T=i,W=T.geometry,Z=E.faces3,da=E.faces4,Y=3*Z.length+4*da.length,ha=1*Z.length+2*da.length,ia=3*Z.length+4*da.length,fa=c(T,E),ra=e(fa),sa=d(fa),Aa=fa.vertexColors?fa.vertexColors:!1;E.__vertexArray=new Float32Array(3*Y);sa&&(E.__normalArray=new Float32Array(3*Y));W.hasTangents&&(E.__tangentArray=new Float32Array(4*Y));Aa&&(E.__colorArray=new Float32Array(3*Y));if(ra){if(0<W.faceUvs.length||0<W.faceVertexUvs.length)E.__uvArray=
new Float32Array(2*Y);if(1<W.faceUvs.length||1<W.faceVertexUvs.length)E.__uv2Array=new Float32Array(2*Y)}T.geometry.skinWeights.length&&T.geometry.skinIndices.length&&(E.__skinIndexArray=new Float32Array(4*Y),E.__skinWeightArray=new Float32Array(4*Y));E.__faceArray=new Uint16Array(3*ha);E.__lineArray=new Uint16Array(2*ia);var wa=void 0,Ea=void 0;if(E.numMorphTargets){E.__morphTargetsArrays=[];wa=0;for(Ea=E.numMorphTargets;wa<Ea;wa++)E.__morphTargetsArrays.push(new Float32Array(3*Y))}if(E.numMorphNormals){E.__morphNormalsArrays=
[];wa=0;for(Ea=E.numMorphNormals;wa<Ea;wa++)E.__morphNormalsArrays.push(new Float32Array(3*Y))}E.__webglFaceCount=3*ha;E.__webglLineCount=2*ia;if(fa.attributes){void 0===E.__webglCustomAttributesList&&(E.__webglCustomAttributesList=[]);var Ga=void 0;for(Ga in fa.attributes){var xa=fa.attributes[Ga],ka={},La;for(La in xa)ka[La]=xa[La];if(!ka.__webglInitialized||ka.createUniqueBuffers){ka.__webglInitialized=!0;var Ha=1;"v2"===ka.type?Ha=2:"v3"===ka.type?Ha=3:"v4"===ka.type?Ha=4:"c"===ka.type&&(Ha=3);
ka.size=Ha;ka.array=new Float32Array(Y*Ha);ka.buffer=h.createBuffer();ka.buffer.belongsToAttribute=Ga;xa.needsUpdate=!0;ka.__original=xa}E.__webglCustomAttributesList.push(ka)}}E.__inittedArrays=!0;m.verticesNeedUpdate=!0;m.morphTargetsNeedUpdate=!0;m.elementsNeedUpdate=!0;m.uvsNeedUpdate=!0;m.normalsNeedUpdate=!0;m.tangentsNeedUpdate=!0;m.colorsNeedUpdate=!0}}else m instanceof THREE.BufferGeometry&&f(m);else if(i instanceof THREE.Ribbon){if(m=i.geometry,!m.__webglVertexBuffer){var Qa=m;Qa.__webglVertexBuffer=
h.createBuffer();Qa.__webglColorBuffer=h.createBuffer();P.info.memory.geometries++;var Ma=m,Sa=Ma.vertices.length;Ma.__vertexArray=new Float32Array(3*Sa);Ma.__colorArray=new Float32Array(3*Sa);Ma.__webglVertexCount=Sa;m.verticesNeedUpdate=!0;m.colorsNeedUpdate=!0}}else if(i instanceof THREE.Line){if(m=i.geometry,!m.__webglVertexBuffer){var $a=m;$a.__webglVertexBuffer=h.createBuffer();$a.__webglColorBuffer=h.createBuffer();P.info.memory.geometries++;var Ta=m,tb=i,Za=Ta.vertices.length;Ta.__vertexArray=
new Float32Array(3*Za);Ta.__colorArray=new Float32Array(3*Za);Ta.__webglLineCount=Za;b(Ta,tb);m.verticesNeedUpdate=!0;m.colorsNeedUpdate=!0}}else if(i instanceof THREE.ParticleSystem&&(m=i.geometry,!m.__webglVertexBuffer))if(m instanceof THREE.Geometry){var vb=m;vb.__webglVertexBuffer=h.createBuffer();vb.__webglColorBuffer=h.createBuffer();P.info.memory.geometries++;var Ua=m,Cb=i,ub=Ua.vertices.length;Ua.__vertexArray=new Float32Array(3*ub);Ua.__colorArray=new Float32Array(3*ub);Ua.__sortArray=[];
Ua.__webglParticleCount=ub;b(Ua,Cb);m.verticesNeedUpdate=!0;m.colorsNeedUpdate=!0}else m instanceof THREE.BufferGeometry&&f(m);if(!i.__webglActive){if(i instanceof THREE.Mesh)if(m=i.geometry,m instanceof THREE.BufferGeometry)s(k.__webglObjects,m,i);else for(l in m.geometryGroups)o=m.geometryGroups[l],s(k.__webglObjects,o,i);else i instanceof THREE.Ribbon||i instanceof THREE.Line||i instanceof THREE.ParticleSystem?(m=i.geometry,s(k.__webglObjects,m,i)):i instanceof THREE.ImmediateRenderObject||i.immediateRenderCallback?
k.__webglObjectsImmediate.push({object:i,opaque:null,transparent:null}):i instanceof THREE.Sprite?k.__webglSprites.push(i):i instanceof THREE.LensFlare&&k.__webglFlares.push(i);i.__webglActive=!0}a.__objectsAdded.splice(0,1)}for(;a.__objectsRemoved.length;){var Va=a.__objectsRemoved[0],cb=a;Va instanceof THREE.Mesh||Va instanceof THREE.ParticleSystem||Va instanceof THREE.Ribbon||Va instanceof THREE.Line?p(cb.__webglObjects,Va):Va instanceof THREE.Sprite?r(cb.__webglSprites,Va):Va instanceof THREE.LensFlare?
r(cb.__webglFlares,Va):(Va instanceof THREE.ImmediateRenderObject||Va.immediateRenderCallback)&&p(cb.__webglObjectsImmediate,Va);Va.__webglActive=!1;a.__objectsRemoved.splice(0,1)}for(var Bb=0,Qb=a.__webglObjects.length;Bb<Qb;Bb++){var ab=a.__webglObjects[Bb].object,V=ab.geometry,fc=void 0,Ub=void 0,Na=void 0;if(ab instanceof THREE.Mesh)if(V instanceof THREE.BufferGeometry)(V.verticesNeedUpdate||V.elementsNeedUpdate||V.uvsNeedUpdate||V.normalsNeedUpdate||V.colorsNeedUpdate||V.tangentsNeedUpdate)&&
j(V,h.DYNAMIC_DRAW,!V.dynamic),V.verticesNeedUpdate=!1,V.elementsNeedUpdate=!1,V.uvsNeedUpdate=!1,V.normalsNeedUpdate=!1,V.colorsNeedUpdate=!1,V.tangentsNeedUpdate=!1;else{for(var Lb=0,bc=V.geometryGroupsList.length;Lb<bc;Lb++)if(fc=V.geometryGroupsList[Lb],Na=c(ab,fc),Ub=Na.attributes&&n(Na),V.verticesNeedUpdate||V.morphTargetsNeedUpdate||V.elementsNeedUpdate||V.uvsNeedUpdate||V.normalsNeedUpdate||V.colorsNeedUpdate||V.tangentsNeedUpdate||Ub){var aa=fc,cc=ab,Wa=h.DYNAMIC_DRAW,ec=!V.dynamic,Nb=Na;
if(aa.__inittedArrays){var Rb=d(Nb),Mb=Nb.vertexColors?Nb.vertexColors:!1,Sb=e(Nb),vc=Rb===THREE.SmoothShading,z=void 0,O=void 0,Db=void 0,H=void 0,Vb=void 0,Eb=void 0,bb=void 0,wc=void 0,wb=void 0,Wb=void 0,Xb=void 0,J=void 0,K=void 0,L=void 0,$=void 0,db=void 0,eb=void 0,fb=void 0,gc=void 0,gb=void 0,hb=void 0,ib=void 0,hc=void 0,jb=void 0,kb=void 0,lb=void 0,ic=void 0,mb=void 0,nb=void 0,ob=void 0,jc=void 0,pb=void 0,qb=void 0,rb=void 0,kc=void 0,ea=void 0,Tb=void 0,Fb=void 0,Yb=void 0,Zb=void 0,
Ba=void 0,ac=void 0,ya=void 0,za=void 0,Gb=void 0,xb=void 0,ta=0,va=0,yb=0,zb=0,Xa=0,Ia=0,ja=0,Ka=0,ua=0,U=0,X=0,t=0,ga=void 0,Ca=aa.__vertexArray,lc=aa.__uvArray,mc=aa.__uv2Array,Ya=aa.__normalArray,na=aa.__tangentArray,Da=aa.__colorArray,oa=aa.__skinIndexArray,pa=aa.__skinWeightArray,Jc=aa.__morphTargetsArrays,Kc=aa.__morphNormalsArrays,Lc=aa.__webglCustomAttributesList,q=void 0,sb=aa.__faceArray,Ra=aa.__lineArray,Oa=cc.geometry,rc=Oa.elementsNeedUpdate,dc=Oa.uvsNeedUpdate,sc=Oa.normalsNeedUpdate,
tc=Oa.tangentsNeedUpdate,uc=Oa.colorsNeedUpdate,Hc=Oa.morphTargetsNeedUpdate,Ob=Oa.vertices,ba=aa.faces3,ca=aa.faces4,Ja=Oa.faces,Mc=Oa.faceVertexUvs[0],Nc=Oa.faceVertexUvs[1],Pb=Oa.skinIndices,Hb=Oa.skinWeights,Ib=Oa.morphTargets,xc=Oa.morphNormals;if(Oa.verticesNeedUpdate){z=0;for(O=ba.length;z<O;z++)H=Ja[ba[z]],J=Ob[H.a],K=Ob[H.b],L=Ob[H.c],Ca[va]=J.x,Ca[va+1]=J.y,Ca[va+2]=J.z,Ca[va+3]=K.x,Ca[va+4]=K.y,Ca[va+5]=K.z,Ca[va+6]=L.x,Ca[va+7]=L.y,Ca[va+8]=L.z,va+=9;z=0;for(O=ca.length;z<O;z++)H=Ja[ca[z]],
J=Ob[H.a],K=Ob[H.b],L=Ob[H.c],$=Ob[H.d],Ca[va]=J.x,Ca[va+1]=J.y,Ca[va+2]=J.z,Ca[va+3]=K.x,Ca[va+4]=K.y,Ca[va+5]=K.z,Ca[va+6]=L.x,Ca[va+7]=L.y,Ca[va+8]=L.z,Ca[va+9]=$.x,Ca[va+10]=$.y,Ca[va+11]=$.z,va+=12;h.bindBuffer(h.ARRAY_BUFFER,aa.__webglVertexBuffer);h.bufferData(h.ARRAY_BUFFER,Ca,Wa)}if(Hc){Ba=0;for(ac=Ib.length;Ba<ac;Ba++){z=X=0;for(O=ba.length;z<O;z++)Gb=ba[z],H=Ja[Gb],J=Ib[Ba].vertices[H.a],K=Ib[Ba].vertices[H.b],L=Ib[Ba].vertices[H.c],ya=Jc[Ba],ya[X]=J.x,ya[X+1]=J.y,ya[X+2]=J.z,ya[X+3]=K.x,
ya[X+4]=K.y,ya[X+5]=K.z,ya[X+6]=L.x,ya[X+7]=L.y,ya[X+8]=L.z,Nb.morphNormals&&(vc?(xb=xc[Ba].vertexNormals[Gb],gb=xb.a,hb=xb.b,ib=xb.c):ib=hb=gb=xc[Ba].faceNormals[Gb],za=Kc[Ba],za[X]=gb.x,za[X+1]=gb.y,za[X+2]=gb.z,za[X+3]=hb.x,za[X+4]=hb.y,za[X+5]=hb.z,za[X+6]=ib.x,za[X+7]=ib.y,za[X+8]=ib.z),X+=9;z=0;for(O=ca.length;z<O;z++)Gb=ca[z],H=Ja[Gb],J=Ib[Ba].vertices[H.a],K=Ib[Ba].vertices[H.b],L=Ib[Ba].vertices[H.c],$=Ib[Ba].vertices[H.d],ya=Jc[Ba],ya[X]=J.x,ya[X+1]=J.y,ya[X+2]=J.z,ya[X+3]=K.x,ya[X+4]=K.y,
ya[X+5]=K.z,ya[X+6]=L.x,ya[X+7]=L.y,ya[X+8]=L.z,ya[X+9]=$.x,ya[X+10]=$.y,ya[X+11]=$.z,Nb.morphNormals&&(vc?(xb=xc[Ba].vertexNormals[Gb],gb=xb.a,hb=xb.b,ib=xb.c,hc=xb.d):hc=ib=hb=gb=xc[Ba].faceNormals[Gb],za=Kc[Ba],za[X]=gb.x,za[X+1]=gb.y,za[X+2]=gb.z,za[X+3]=hb.x,za[X+4]=hb.y,za[X+5]=hb.z,za[X+6]=ib.x,za[X+7]=ib.y,za[X+8]=ib.z,za[X+9]=hc.x,za[X+10]=hc.y,za[X+11]=hc.z),X+=12;h.bindBuffer(h.ARRAY_BUFFER,aa.__webglMorphTargetsBuffers[Ba]);h.bufferData(h.ARRAY_BUFFER,Jc[Ba],Wa);Nb.morphNormals&&(h.bindBuffer(h.ARRAY_BUFFER,
aa.__webglMorphNormalsBuffers[Ba]),h.bufferData(h.ARRAY_BUFFER,Kc[Ba],Wa))}}if(Hb.length){z=0;for(O=ba.length;z<O;z++)H=Ja[ba[z]],mb=Hb[H.a],nb=Hb[H.b],ob=Hb[H.c],pa[U]=mb.x,pa[U+1]=mb.y,pa[U+2]=mb.z,pa[U+3]=mb.w,pa[U+4]=nb.x,pa[U+5]=nb.y,pa[U+6]=nb.z,pa[U+7]=nb.w,pa[U+8]=ob.x,pa[U+9]=ob.y,pa[U+10]=ob.z,pa[U+11]=ob.w,pb=Pb[H.a],qb=Pb[H.b],rb=Pb[H.c],oa[U]=pb.x,oa[U+1]=pb.y,oa[U+2]=pb.z,oa[U+3]=pb.w,oa[U+4]=qb.x,oa[U+5]=qb.y,oa[U+6]=qb.z,oa[U+7]=qb.w,oa[U+8]=rb.x,oa[U+9]=rb.y,oa[U+10]=rb.z,oa[U+11]=
rb.w,U+=12;z=0;for(O=ca.length;z<O;z++)H=Ja[ca[z]],mb=Hb[H.a],nb=Hb[H.b],ob=Hb[H.c],jc=Hb[H.d],pa[U]=mb.x,pa[U+1]=mb.y,pa[U+2]=mb.z,pa[U+3]=mb.w,pa[U+4]=nb.x,pa[U+5]=nb.y,pa[U+6]=nb.z,pa[U+7]=nb.w,pa[U+8]=ob.x,pa[U+9]=ob.y,pa[U+10]=ob.z,pa[U+11]=ob.w,pa[U+12]=jc.x,pa[U+13]=jc.y,pa[U+14]=jc.z,pa[U+15]=jc.w,pb=Pb[H.a],qb=Pb[H.b],rb=Pb[H.c],kc=Pb[H.d],oa[U]=pb.x,oa[U+1]=pb.y,oa[U+2]=pb.z,oa[U+3]=pb.w,oa[U+4]=qb.x,oa[U+5]=qb.y,oa[U+6]=qb.z,oa[U+7]=qb.w,oa[U+8]=rb.x,oa[U+9]=rb.y,oa[U+10]=rb.z,oa[U+11]=
rb.w,oa[U+12]=kc.x,oa[U+13]=kc.y,oa[U+14]=kc.z,oa[U+15]=kc.w,U+=16;0<U&&(h.bindBuffer(h.ARRAY_BUFFER,aa.__webglSkinIndicesBuffer),h.bufferData(h.ARRAY_BUFFER,oa,Wa),h.bindBuffer(h.ARRAY_BUFFER,aa.__webglSkinWeightsBuffer),h.bufferData(h.ARRAY_BUFFER,pa,Wa))}if(uc&&Mb){z=0;for(O=ba.length;z<O;z++)H=Ja[ba[z]],bb=H.vertexColors,wc=H.color,3===bb.length&&Mb===THREE.VertexColors?(jb=bb[0],kb=bb[1],lb=bb[2]):lb=kb=jb=wc,Da[ua]=jb.r,Da[ua+1]=jb.g,Da[ua+2]=jb.b,Da[ua+3]=kb.r,Da[ua+4]=kb.g,Da[ua+5]=kb.b,Da[ua+
6]=lb.r,Da[ua+7]=lb.g,Da[ua+8]=lb.b,ua+=9;z=0;for(O=ca.length;z<O;z++)H=Ja[ca[z]],bb=H.vertexColors,wc=H.color,4===bb.length&&Mb===THREE.VertexColors?(jb=bb[0],kb=bb[1],lb=bb[2],ic=bb[3]):ic=lb=kb=jb=wc,Da[ua]=jb.r,Da[ua+1]=jb.g,Da[ua+2]=jb.b,Da[ua+3]=kb.r,Da[ua+4]=kb.g,Da[ua+5]=kb.b,Da[ua+6]=lb.r,Da[ua+7]=lb.g,Da[ua+8]=lb.b,Da[ua+9]=ic.r,Da[ua+10]=ic.g,Da[ua+11]=ic.b,ua+=12;0<ua&&(h.bindBuffer(h.ARRAY_BUFFER,aa.__webglColorBuffer),h.bufferData(h.ARRAY_BUFFER,Da,Wa))}if(tc&&Oa.hasTangents){z=0;for(O=
ba.length;z<O;z++)H=Ja[ba[z]],wb=H.vertexTangents,db=wb[0],eb=wb[1],fb=wb[2],na[ja]=db.x,na[ja+1]=db.y,na[ja+2]=db.z,na[ja+3]=db.w,na[ja+4]=eb.x,na[ja+5]=eb.y,na[ja+6]=eb.z,na[ja+7]=eb.w,na[ja+8]=fb.x,na[ja+9]=fb.y,na[ja+10]=fb.z,na[ja+11]=fb.w,ja+=12;z=0;for(O=ca.length;z<O;z++)H=Ja[ca[z]],wb=H.vertexTangents,db=wb[0],eb=wb[1],fb=wb[2],gc=wb[3],na[ja]=db.x,na[ja+1]=db.y,na[ja+2]=db.z,na[ja+3]=db.w,na[ja+4]=eb.x,na[ja+5]=eb.y,na[ja+6]=eb.z,na[ja+7]=eb.w,na[ja+8]=fb.x,na[ja+9]=fb.y,na[ja+10]=fb.z,
na[ja+11]=fb.w,na[ja+12]=gc.x,na[ja+13]=gc.y,na[ja+14]=gc.z,na[ja+15]=gc.w,ja+=16;h.bindBuffer(h.ARRAY_BUFFER,aa.__webglTangentBuffer);h.bufferData(h.ARRAY_BUFFER,na,Wa)}if(sc&&Rb){z=0;for(O=ba.length;z<O;z++)if(H=Ja[ba[z]],Vb=H.vertexNormals,Eb=H.normal,3===Vb.length&&vc)for(ea=0;3>ea;ea++)Fb=Vb[ea],Ya[Ia]=Fb.x,Ya[Ia+1]=Fb.y,Ya[Ia+2]=Fb.z,Ia+=3;else for(ea=0;3>ea;ea++)Ya[Ia]=Eb.x,Ya[Ia+1]=Eb.y,Ya[Ia+2]=Eb.z,Ia+=3;z=0;for(O=ca.length;z<O;z++)if(H=Ja[ca[z]],Vb=H.vertexNormals,Eb=H.normal,4===Vb.length&&
vc)for(ea=0;4>ea;ea++)Fb=Vb[ea],Ya[Ia]=Fb.x,Ya[Ia+1]=Fb.y,Ya[Ia+2]=Fb.z,Ia+=3;else for(ea=0;4>ea;ea++)Ya[Ia]=Eb.x,Ya[Ia+1]=Eb.y,Ya[Ia+2]=Eb.z,Ia+=3;h.bindBuffer(h.ARRAY_BUFFER,aa.__webglNormalBuffer);h.bufferData(h.ARRAY_BUFFER,Ya,Wa)}if(dc&&Mc&&Sb){z=0;for(O=ba.length;z<O;z++)if(Db=ba[z],Wb=Mc[Db],void 0!==Wb)for(ea=0;3>ea;ea++)Yb=Wb[ea],lc[yb]=Yb.u,lc[yb+1]=Yb.v,yb+=2;z=0;for(O=ca.length;z<O;z++)if(Db=ca[z],Wb=Mc[Db],void 0!==Wb)for(ea=0;4>ea;ea++)Yb=Wb[ea],lc[yb]=Yb.u,lc[yb+1]=Yb.v,yb+=2;0<yb&&
(h.bindBuffer(h.ARRAY_BUFFER,aa.__webglUVBuffer),h.bufferData(h.ARRAY_BUFFER,lc,Wa))}if(dc&&Nc&&Sb){z=0;for(O=ba.length;z<O;z++)if(Db=ba[z],Xb=Nc[Db],void 0!==Xb)for(ea=0;3>ea;ea++)Zb=Xb[ea],mc[zb]=Zb.u,mc[zb+1]=Zb.v,zb+=2;z=0;for(O=ca.length;z<O;z++)if(Db=ca[z],Xb=Nc[Db],void 0!==Xb)for(ea=0;4>ea;ea++)Zb=Xb[ea],mc[zb]=Zb.u,mc[zb+1]=Zb.v,zb+=2;0<zb&&(h.bindBuffer(h.ARRAY_BUFFER,aa.__webglUV2Buffer),h.bufferData(h.ARRAY_BUFFER,mc,Wa))}if(rc){z=0;for(O=ba.length;z<O;z++)sb[Xa]=ta,sb[Xa+1]=ta+1,sb[Xa+
2]=ta+2,Xa+=3,Ra[Ka]=ta,Ra[Ka+1]=ta+1,Ra[Ka+2]=ta,Ra[Ka+3]=ta+2,Ra[Ka+4]=ta+1,Ra[Ka+5]=ta+2,Ka+=6,ta+=3;z=0;for(O=ca.length;z<O;z++)sb[Xa]=ta,sb[Xa+1]=ta+1,sb[Xa+2]=ta+3,sb[Xa+3]=ta+1,sb[Xa+4]=ta+2,sb[Xa+5]=ta+3,Xa+=6,Ra[Ka]=ta,Ra[Ka+1]=ta+1,Ra[Ka+2]=ta,Ra[Ka+3]=ta+3,Ra[Ka+4]=ta+1,Ra[Ka+5]=ta+2,Ra[Ka+6]=ta+2,Ra[Ka+7]=ta+3,Ka+=8,ta+=4;h.bindBuffer(h.ELEMENT_ARRAY_BUFFER,aa.__webglFaceBuffer);h.bufferData(h.ELEMENT_ARRAY_BUFFER,sb,Wa);h.bindBuffer(h.ELEMENT_ARRAY_BUFFER,aa.__webglLineBuffer);h.bufferData(h.ELEMENT_ARRAY_BUFFER,
Ra,Wa)}if(Lc){ea=0;for(Tb=Lc.length;ea<Tb;ea++)if(q=Lc[ea],q.__original.needsUpdate){t=0;if(1===q.size)if(void 0===q.boundTo||"vertices"===q.boundTo){z=0;for(O=ba.length;z<O;z++)H=Ja[ba[z]],q.array[t]=q.value[H.a],q.array[t+1]=q.value[H.b],q.array[t+2]=q.value[H.c],t+=3;z=0;for(O=ca.length;z<O;z++)H=Ja[ca[z]],q.array[t]=q.value[H.a],q.array[t+1]=q.value[H.b],q.array[t+2]=q.value[H.c],q.array[t+3]=q.value[H.d],t+=4}else{if("faces"===q.boundTo){z=0;for(O=ba.length;z<O;z++)ga=q.value[ba[z]],q.array[t]=
ga,q.array[t+1]=ga,q.array[t+2]=ga,t+=3;z=0;for(O=ca.length;z<O;z++)ga=q.value[ca[z]],q.array[t]=ga,q.array[t+1]=ga,q.array[t+2]=ga,q.array[t+3]=ga,t+=4}}else if(2===q.size)if(void 0===q.boundTo||"vertices"===q.boundTo){z=0;for(O=ba.length;z<O;z++)H=Ja[ba[z]],J=q.value[H.a],K=q.value[H.b],L=q.value[H.c],q.array[t]=J.x,q.array[t+1]=J.y,q.array[t+2]=K.x,q.array[t+3]=K.y,q.array[t+4]=L.x,q.array[t+5]=L.y,t+=6;z=0;for(O=ca.length;z<O;z++)H=Ja[ca[z]],J=q.value[H.a],K=q.value[H.b],L=q.value[H.c],$=q.value[H.d],
q.array[t]=J.x,q.array[t+1]=J.y,q.array[t+2]=K.x,q.array[t+3]=K.y,q.array[t+4]=L.x,q.array[t+5]=L.y,q.array[t+6]=$.x,q.array[t+7]=$.y,t+=8}else{if("faces"===q.boundTo){z=0;for(O=ba.length;z<O;z++)L=K=J=ga=q.value[ba[z]],q.array[t]=J.x,q.array[t+1]=J.y,q.array[t+2]=K.x,q.array[t+3]=K.y,q.array[t+4]=L.x,q.array[t+5]=L.y,t+=6;z=0;for(O=ca.length;z<O;z++)$=L=K=J=ga=q.value[ca[z]],q.array[t]=J.x,q.array[t+1]=J.y,q.array[t+2]=K.x,q.array[t+3]=K.y,q.array[t+4]=L.x,q.array[t+5]=L.y,q.array[t+6]=$.x,q.array[t+
7]=$.y,t+=8}}else if(3===q.size){var S;S="c"===q.type?["r","g","b"]:["x","y","z"];if(void 0===q.boundTo||"vertices"===q.boundTo){z=0;for(O=ba.length;z<O;z++)H=Ja[ba[z]],J=q.value[H.a],K=q.value[H.b],L=q.value[H.c],q.array[t]=J[S[0]],q.array[t+1]=J[S[1]],q.array[t+2]=J[S[2]],q.array[t+3]=K[S[0]],q.array[t+4]=K[S[1]],q.array[t+5]=K[S[2]],q.array[t+6]=L[S[0]],q.array[t+7]=L[S[1]],q.array[t+8]=L[S[2]],t+=9;z=0;for(O=ca.length;z<O;z++)H=Ja[ca[z]],J=q.value[H.a],K=q.value[H.b],L=q.value[H.c],$=q.value[H.d],
q.array[t]=J[S[0]],q.array[t+1]=J[S[1]],q.array[t+2]=J[S[2]],q.array[t+3]=K[S[0]],q.array[t+4]=K[S[1]],q.array[t+5]=K[S[2]],q.array[t+6]=L[S[0]],q.array[t+7]=L[S[1]],q.array[t+8]=L[S[2]],q.array[t+9]=$[S[0]],q.array[t+10]=$[S[1]],q.array[t+11]=$[S[2]],t+=12}else if("faces"===q.boundTo){z=0;for(O=ba.length;z<O;z++)L=K=J=ga=q.value[ba[z]],q.array[t]=J[S[0]],q.array[t+1]=J[S[1]],q.array[t+2]=J[S[2]],q.array[t+3]=K[S[0]],q.array[t+4]=K[S[1]],q.array[t+5]=K[S[2]],q.array[t+6]=L[S[0]],q.array[t+7]=L[S[1]],
q.array[t+8]=L[S[2]],t+=9;z=0;for(O=ca.length;z<O;z++)$=L=K=J=ga=q.value[ca[z]],q.array[t]=J[S[0]],q.array[t+1]=J[S[1]],q.array[t+2]=J[S[2]],q.array[t+3]=K[S[0]],q.array[t+4]=K[S[1]],q.array[t+5]=K[S[2]],q.array[t+6]=L[S[0]],q.array[t+7]=L[S[1]],q.array[t+8]=L[S[2]],q.array[t+9]=$[S[0]],q.array[t+10]=$[S[1]],q.array[t+11]=$[S[2]],t+=12}else if("faceVertices"===q.boundTo){z=0;for(O=ba.length;z<O;z++)ga=q.value[ba[z]],J=ga[0],K=ga[1],L=ga[2],q.array[t]=J[S[0]],q.array[t+1]=J[S[1]],q.array[t+2]=J[S[2]],
q.array[t+3]=K[S[0]],q.array[t+4]=K[S[1]],q.array[t+5]=K[S[2]],q.array[t+6]=L[S[0]],q.array[t+7]=L[S[1]],q.array[t+8]=L[S[2]],t+=9;z=0;for(O=ca.length;z<O;z++)ga=q.value[ca[z]],J=ga[0],K=ga[1],L=ga[2],$=ga[3],q.array[t]=J[S[0]],q.array[t+1]=J[S[1]],q.array[t+2]=J[S[2]],q.array[t+3]=K[S[0]],q.array[t+4]=K[S[1]],q.array[t+5]=K[S[2]],q.array[t+6]=L[S[0]],q.array[t+7]=L[S[1]],q.array[t+8]=L[S[2]],q.array[t+9]=$[S[0]],q.array[t+10]=$[S[1]],q.array[t+11]=$[S[2]],t+=12}}else if(4===q.size)if(void 0===q.boundTo||
"vertices"===q.boundTo){z=0;for(O=ba.length;z<O;z++)H=Ja[ba[z]],J=q.value[H.a],K=q.value[H.b],L=q.value[H.c],q.array[t]=J.x,q.array[t+1]=J.y,q.array[t+2]=J.z,q.array[t+3]=J.w,q.array[t+4]=K.x,q.array[t+5]=K.y,q.array[t+6]=K.z,q.array[t+7]=K.w,q.array[t+8]=L.x,q.array[t+9]=L.y,q.array[t+10]=L.z,q.array[t+11]=L.w,t+=12;z=0;for(O=ca.length;z<O;z++)H=Ja[ca[z]],J=q.value[H.a],K=q.value[H.b],L=q.value[H.c],$=q.value[H.d],q.array[t]=J.x,q.array[t+1]=J.y,q.array[t+2]=J.z,q.array[t+3]=J.w,q.array[t+4]=K.x,
q.array[t+5]=K.y,q.array[t+6]=K.z,q.array[t+7]=K.w,q.array[t+8]=L.x,q.array[t+9]=L.y,q.array[t+10]=L.z,q.array[t+11]=L.w,q.array[t+12]=$.x,q.array[t+13]=$.y,q.array[t+14]=$.z,q.array[t+15]=$.w,t+=16}else if("faces"===q.boundTo){z=0;for(O=ba.length;z<O;z++)L=K=J=ga=q.value[ba[z]],q.array[t]=J.x,q.array[t+1]=J.y,q.array[t+2]=J.z,q.array[t+3]=J.w,q.array[t+4]=K.x,q.array[t+5]=K.y,q.array[t+6]=K.z,q.array[t+7]=K.w,q.array[t+8]=L.x,q.array[t+9]=L.y,q.array[t+10]=L.z,q.array[t+11]=L.w,t+=12;z=0;for(O=ca.length;z<
O;z++)$=L=K=J=ga=q.value[ca[z]],q.array[t]=J.x,q.array[t+1]=J.y,q.array[t+2]=J.z,q.array[t+3]=J.w,q.array[t+4]=K.x,q.array[t+5]=K.y,q.array[t+6]=K.z,q.array[t+7]=K.w,q.array[t+8]=L.x,q.array[t+9]=L.y,q.array[t+10]=L.z,q.array[t+11]=L.w,q.array[t+12]=$.x,q.array[t+13]=$.y,q.array[t+14]=$.z,q.array[t+15]=$.w,t+=16}else if("faceVertices"===q.boundTo){z=0;for(O=ba.length;z<O;z++)ga=q.value[ba[z]],J=ga[0],K=ga[1],L=ga[2],q.array[t]=J.x,q.array[t+1]=J.y,q.array[t+2]=J.z,q.array[t+3]=J.w,q.array[t+4]=K.x,
q.array[t+5]=K.y,q.array[t+6]=K.z,q.array[t+7]=K.w,q.array[t+8]=L.x,q.array[t+9]=L.y,q.array[t+10]=L.z,q.array[t+11]=L.w,t+=12;z=0;for(O=ca.length;z<O;z++)ga=q.value[ca[z]],J=ga[0],K=ga[1],L=ga[2],$=ga[3],q.array[t]=J.x,q.array[t+1]=J.y,q.array[t+2]=J.z,q.array[t+3]=J.w,q.array[t+4]=K.x,q.array[t+5]=K.y,q.array[t+6]=K.z,q.array[t+7]=K.w,q.array[t+8]=L.x,q.array[t+9]=L.y,q.array[t+10]=L.z,q.array[t+11]=L.w,q.array[t+12]=$.x,q.array[t+13]=$.y,q.array[t+14]=$.z,q.array[t+15]=$.w,t+=16}h.bindBuffer(h.ARRAY_BUFFER,
q.buffer);h.bufferData(h.ARRAY_BUFFER,q.array,Wa)}}ec&&(delete aa.__inittedArrays,delete aa.__colorArray,delete aa.__normalArray,delete aa.__tangentArray,delete aa.__uvArray,delete aa.__uv2Array,delete aa.__faceArray,delete aa.__vertexArray,delete aa.__lineArray,delete aa.__skinIndexArray,delete aa.__skinWeightArray)}}V.verticesNeedUpdate=!1;V.morphTargetsNeedUpdate=!1;V.elementsNeedUpdate=!1;V.uvsNeedUpdate=!1;V.normalsNeedUpdate=!1;V.colorsNeedUpdate=!1;V.tangentsNeedUpdate=!1;Na.attributes&&u(Na)}else if(ab instanceof
THREE.Ribbon){if(V.verticesNeedUpdate||V.colorsNeedUpdate){var Jb=V,Qc=h.DYNAMIC_DRAW,nc=void 0,oc=void 0,yc=void 0,Kb=void 0,zc=void 0,Rc=Jb.vertices,Sc=Jb.colors,Ic=Rc.length,Wc=Sc.length,Ac=Jb.__vertexArray,Bc=Jb.__colorArray,Xc=Jb.colorsNeedUpdate;if(Jb.verticesNeedUpdate){for(nc=0;nc<Ic;nc++)yc=Rc[nc],Kb=3*nc,Ac[Kb]=yc.x,Ac[Kb+1]=yc.y,Ac[Kb+2]=yc.z;h.bindBuffer(h.ARRAY_BUFFER,Jb.__webglVertexBuffer);h.bufferData(h.ARRAY_BUFFER,Ac,Qc)}if(Xc){for(oc=0;oc<Wc;oc++)zc=Sc[oc],Kb=3*oc,Bc[Kb]=zc.r,Bc[Kb+
1]=zc.g,Bc[Kb+2]=zc.b;h.bindBuffer(h.ARRAY_BUFFER,Jb.__webglColorBuffer);h.bufferData(h.ARRAY_BUFFER,Bc,Qc)}}V.verticesNeedUpdate=!1;V.colorsNeedUpdate=!1}else if(ab instanceof THREE.Line){Na=c(ab,fc);Ub=Na.attributes&&n(Na);if(V.verticesNeedUpdate||V.colorsNeedUpdate||Ub){var Ab=V,Oc=h.DYNAMIC_DRAW,pc=void 0,qc=void 0,Cc=void 0,qa=void 0,Dc=void 0,Tc=Ab.vertices,Uc=Ab.colors,Yc=Tc.length,Zc=Uc.length,Ec=Ab.__vertexArray,Fc=Ab.__colorArray,$c=Ab.colorsNeedUpdate,Pc=Ab.__webglCustomAttributesList,
Gc=void 0,Vc=void 0,Fa=void 0,$b=void 0,Pa=void 0,la=void 0;if(Ab.verticesNeedUpdate){for(pc=0;pc<Yc;pc++)Cc=Tc[pc],qa=3*pc,Ec[qa]=Cc.x,Ec[qa+1]=Cc.y,Ec[qa+2]=Cc.z;h.bindBuffer(h.ARRAY_BUFFER,Ab.__webglVertexBuffer);h.bufferData(h.ARRAY_BUFFER,Ec,Oc)}if($c){for(qc=0;qc<Zc;qc++)Dc=Uc[qc],qa=3*qc,Fc[qa]=Dc.r,Fc[qa+1]=Dc.g,Fc[qa+2]=Dc.b;h.bindBuffer(h.ARRAY_BUFFER,Ab.__webglColorBuffer);h.bufferData(h.ARRAY_BUFFER,Fc,Oc)}if(Pc){Gc=0;for(Vc=Pc.length;Gc<Vc;Gc++)if(la=Pc[Gc],la.needsUpdate&&(void 0===
la.boundTo||"vertices"===la.boundTo)){qa=0;$b=la.value.length;if(1===la.size)for(Fa=0;Fa<$b;Fa++)la.array[Fa]=la.value[Fa];else if(2===la.size)for(Fa=0;Fa<$b;Fa++)Pa=la.value[Fa],la.array[qa]=Pa.x,la.array[qa+1]=Pa.y,qa+=2;else if(3===la.size)if("c"===la.type)for(Fa=0;Fa<$b;Fa++)Pa=la.value[Fa],la.array[qa]=Pa.r,la.array[qa+1]=Pa.g,la.array[qa+2]=Pa.b,qa+=3;else for(Fa=0;Fa<$b;Fa++)Pa=la.value[Fa],la.array[qa]=Pa.x,la.array[qa+1]=Pa.y,la.array[qa+2]=Pa.z,qa+=3;else if(4===la.size)for(Fa=0;Fa<$b;Fa++)Pa=
la.value[Fa],la.array[qa]=Pa.x,la.array[qa+1]=Pa.y,la.array[qa+2]=Pa.z,la.array[qa+3]=Pa.w,qa+=4;h.bindBuffer(h.ARRAY_BUFFER,la.buffer);h.bufferData(h.ARRAY_BUFFER,la.array,Oc)}}}V.verticesNeedUpdate=!1;V.colorsNeedUpdate=!1;Na.attributes&&u(Na)}else ab instanceof THREE.ParticleSystem&&(V instanceof THREE.BufferGeometry?((V.verticesNeedUpdate||V.colorsNeedUpdate)&&j(V,h.DYNAMIC_DRAW,!V.dynamic),V.verticesNeedUpdate=!1,V.colorsNeedUpdate=!1):(Na=c(ab,fc),Ub=Na.attributes&&n(Na),(V.verticesNeedUpdate||
V.colorsNeedUpdate||ab.sortParticles||Ub)&&g(V,h.DYNAMIC_DRAW,ab),V.verticesNeedUpdate=!1,V.colorsNeedUpdate=!1,Na.attributes&&u(Na)))}};this.initMaterial=function(a,b,c,d){var e,f,g,i,j,k,l,m,o;a instanceof THREE.MeshDepthMaterial?o="depth":a instanceof THREE.MeshNormalMaterial?o="normal":a instanceof THREE.MeshBasicMaterial?o="basic":a instanceof THREE.MeshLambertMaterial?o="lambert":a instanceof THREE.MeshPhongMaterial?o="phong":a instanceof THREE.LineBasicMaterial?o="basic":a instanceof THREE.ParticleBasicMaterial&&
(o="particle_basic");if(o){var n=THREE.ShaderLib[o];a.uniforms=THREE.UniformsUtils.clone(n.uniforms);a.vertexShader=n.vertexShader;a.fragmentShader=n.fragmentShader}var p,r,u;e=p=r=u=n=0;for(f=b.length;e<f;e++)g=b[e],g.onlyShadow||(g instanceof THREE.DirectionalLight&&p++,g instanceof THREE.PointLight&&r++,g instanceof THREE.SpotLight&&u++,g instanceof THREE.HemisphereLight&&n++);r+u+p+n<=fa?e=p:(e=Math.ceil(fa*p/(r+p)),u=r=fa-e,n=e);f=r;g=u;i=n;n=p=0;for(u=b.length;n<u;n++)r=b[n],r.castShadow&&(r instanceof
THREE.SpotLight&&p++,r instanceof THREE.DirectionalLight&&!r.shadowCascade&&p++);m=p;ec&&d&&d.useVertexTexture?l=1024:(b=h.getParameter(h.MAX_VERTEX_UNIFORM_VECTORS),b=Math.floor((b-20)/4),void 0!==d&&d instanceof THREE.SkinnedMesh&&(b=Math.min(d.bones.length,b),b<d.bones.length&&console.warn("WebGLRenderer: too many bones - "+d.bones.length+", this GPU supports just "+b+" (try OpenGL instead of ANGLE)")),l=b);var s;a:{r=a.fragmentShader;u=a.vertexShader;n=a.uniforms;b=a.attributes;p=a.defines;var c=
{map:!!a.map,envMap:!!a.envMap,lightMap:!!a.lightMap,bumpMap:!!a.bumpMap,normalMap:!!a.normalMap,specularMap:!!a.specularMap,vertexColors:a.vertexColors,fog:c,useFog:a.fog,sizeAttenuation:a.sizeAttenuation,skinning:a.skinning,maxBones:l,useVertexTexture:ec&&d&&d.useVertexTexture,boneTextureWidth:d&&d.boneTextureWidth,boneTextureHeight:d&&d.boneTextureHeight,morphTargets:a.morphTargets,morphNormals:a.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:e,
maxPointLights:f,maxSpotLights:g,maxHemiLights:i,maxShadows:m,shadowMapEnabled:this.shadowMapEnabled&&d.receiveShadow,shadowMapSoft:this.shadowMapSoft,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:a.alphaTest,metal:a.metal,perPixel:a.perPixel,wrapAround:a.wrapAround,doubleSided:a.side===THREE.DoubleSide,flipSided:a.side===THREE.BackSide},v,w,y,d=[];o?d.push(o):(d.push(r),d.push(u));for(w in p)d.push(w),d.push(p[w]);for(v in c)d.push(v),d.push(c[v]);o=d.join();
v=0;for(w=Ga.length;v<w;v++)if(d=Ga[v],d.code===o){d.usedTimes++;s=d.program;break a}v=[];for(y in p)w=p[y],!1!==w&&(w="#define "+y+" "+w,v.push(w));w=v.join("\n");y=h.createProgram();v=["precision "+F+" float;",w,Tb?"#define VERTEX_TEXTURES":"",P.gammaInput?"#define GAMMA_INPUT":"",P.gammaOutput?"#define GAMMA_OUTPUT":"",P.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+c.maxSpotLights,
"#define MAX_HEMI_LIGHTS "+c.maxHemiLights,"#define MAX_SHADOWS "+c.maxShadows,"#define MAX_BONES "+c.maxBones,c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.vertexColors?"#define USE_COLOR":"",c.skinning?"#define USE_SKINNING":"",c.useVertexTexture?"#define BONE_TEXTURE":"",c.boneTextureWidth?"#define N_BONE_PIXEL_X "+c.boneTextureWidth.toFixed(1):
"",c.boneTextureHeight?"#define N_BONE_PIXEL_Y "+c.boneTextureHeight.toFixed(1):"",c.morphTargets?"#define USE_MORPHTARGETS":"",c.morphNormals?"#define USE_MORPHNORMALS":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.wrapAround?"#define WRAP_AROUND":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?"#define SHADOWMAP_CASCADE":
"",c.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\n#ifdef USE_MORPHNORMALS\nattribute vec3 morphNormal0;\nattribute vec3 morphNormal1;\nattribute vec3 morphNormal2;\nattribute vec3 morphNormal3;\n#else\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n");
w=["precision "+F+" float;",c.bumpMap||c.normalMap?"#extension GL_OES_standard_derivatives : enable":"",w,"#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+c.maxSpotLights,"#define MAX_HEMI_LIGHTS "+c.maxHemiLights,"#define MAX_SHADOWS "+c.maxShadows,c.alphaTest?"#define ALPHATEST "+c.alphaTest:"",P.gammaInput?"#define GAMMA_INPUT":"",P.gammaOutput?"#define GAMMA_OUTPUT":"",P.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",
c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fog instanceof THREE.FogExp2?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.vertexColors?"#define USE_COLOR":"",c.metal?"#define METAL":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.wrapAround?"#define WRAP_AROUND":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?
"#define FLIP_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");w=M("fragment",w+r);v=M("vertex",v+u);h.attachShader(y,v);h.attachShader(y,w);h.linkProgram(y);h.getProgramParameter(y,h.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+h.getProgramParameter(y,
h.VALIDATE_STATUS)+", gl error ["+h.getError()+"]");h.deleteShader(w);h.deleteShader(v);y.uniforms={};y.attributes={};var x;v="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences".split(" ");c.useVertexTexture?v.push("boneTexture"):v.push("boneGlobalMatrices");for(x in n)v.push(x);x=v;v=0;for(w=x.length;v<w;v++)d=x[v],y.uniforms[d]=h.getUniformLocation(y,d);v="position normal uv uv2 tangent color skinIndex skinWeight".split(" ");for(x=0;x<c.maxMorphTargets;x++)v.push("morphTarget"+
x);for(x=0;x<c.maxMorphNormals;x++)v.push("morphNormal"+x);for(s in b)v.push(s);s=v;x=0;for(v=s.length;x<v;x++)w=s[x],y.attributes[w]=h.getAttribLocation(y,w);y.id=La++;Ga.push({program:y,code:o,usedTimes:1});P.info.memory.programs=Ga.length;s=y}a.program=s;s=a.program.attributes;0<=s.position&&h.enableVertexAttribArray(s.position);0<=s.color&&h.enableVertexAttribArray(s.color);0<=s.normal&&h.enableVertexAttribArray(s.normal);0<=s.tangent&&h.enableVertexAttribArray(s.tangent);a.skinning&&(0<=s.skinIndex&&
0<=s.skinWeight)&&(h.enableVertexAttribArray(s.skinIndex),h.enableVertexAttribArray(s.skinWeight));if(a.attributes)for(k in a.attributes)void 0!==s[k]&&0<=s[k]&&h.enableVertexAttribArray(s[k]);if(a.morphTargets){a.numSupportedMorphTargets=0;y="morphTarget";for(k=0;k<this.maxMorphTargets;k++)x=y+k,0<=s[x]&&(h.enableVertexAttribArray(s[x]),a.numSupportedMorphTargets++)}if(a.morphNormals){a.numSupportedMorphNormals=0;y="morphNormal";for(k=0;k<this.maxMorphNormals;k++)x=y+k,0<=s[x]&&(h.enableVertexAttribArray(s[x]),
a.numSupportedMorphNormals++)}a.uniformsList=[];for(j in a.uniforms)a.uniformsList.push([a.uniforms[j],j])};this.setFaceCulling=function(a,b){a?(!b||"ccw"===b?h.frontFace(h.CCW):h.frontFace(h.CW),"back"===a?h.cullFace(h.BACK):"front"===a?h.cullFace(h.FRONT):h.cullFace(h.FRONT_AND_BACK),h.enable(h.CULL_FACE)):h.disable(h.CULL_FACE)};this.setMaterialFaces=function(a){var b=a.side===THREE.DoubleSide,a=a.side===THREE.BackSide;wa!==b&&(b?h.disable(h.CULL_FACE):h.enable(h.CULL_FACE),wa=b);Ha!==a&&(a?h.frontFace(h.CW):
h.frontFace(h.CCW),Ha=a)};this.setDepthTest=function(a){$a!==a&&(a?h.enable(h.DEPTH_TEST):h.disable(h.DEPTH_TEST),$a=a)};this.setDepthWrite=function(a){Sa!==a&&(h.depthMask(a),Sa=a)};this.setBlending=function(a,b,c,d){a!==Ma&&(a===THREE.NoBlending?h.disable(h.BLEND):a===THREE.AdditiveBlending?(h.enable(h.BLEND),h.blendEquation(h.FUNC_ADD),h.blendFunc(h.SRC_ALPHA,h.ONE)):a===THREE.SubtractiveBlending?(h.enable(h.BLEND),h.blendEquation(h.FUNC_ADD),h.blendFunc(h.ZERO,h.ONE_MINUS_SRC_COLOR)):a===THREE.MultiplyBlending?
(h.enable(h.BLEND),h.blendEquation(h.FUNC_ADD),h.blendFunc(h.ZERO,h.SRC_COLOR)):a===THREE.CustomBlending?h.enable(h.BLEND):(h.enable(h.BLEND),h.blendEquationSeparate(h.FUNC_ADD,h.FUNC_ADD),h.blendFuncSeparate(h.SRC_ALPHA,h.ONE_MINUS_SRC_ALPHA,h.ONE,h.ONE_MINUS_SRC_ALPHA)),Ma=a);if(a===THREE.CustomBlending){if(b!==tb&&(h.blendEquation(I(b)),tb=b),c!==ia||d!==Za)h.blendFunc(I(c),I(d)),ia=c,Za=d}else Za=ia=tb=null};this.setTexture=function(a,b){if(a.needsUpdate){a.__webglInit||(a.__webglInit=!0,a.__webglTexture=
h.createTexture(),P.info.memory.textures++);h.activeTexture(h.TEXTURE0+b);h.bindTexture(h.TEXTURE_2D,a.__webglTexture);h.pixelStorei(h.UNPACK_FLIP_Y_WEBGL,a.flipY);h.pixelStorei(h.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha);var c=a.image,d=0===(c.width&c.width-1)&&0===(c.height&c.height-1),e=I(a.format),f=I(a.type);T(h.TEXTURE_2D,a,d);if(a instanceof THREE.CompressedTexture)for(var f=a.mipmaps,g=0,i=f.length;g<i;g++)c=f[g],h.compressedTexImage2D(h.TEXTURE_2D,g,e,c.width,c.height,0,c.data);
else a instanceof THREE.DataTexture?h.texImage2D(h.TEXTURE_2D,0,e,c.width,c.height,0,e,f,c.data):h.texImage2D(h.TEXTURE_2D,0,e,e,f,a.image);a.generateMipmaps&&d&&h.generateMipmap(h.TEXTURE_2D);a.needsUpdate=!1;if(a.onUpdate)a.onUpdate()}else h.activeTexture(h.TEXTURE0+b),h.bindTexture(h.TEXTURE_2D,a.__webglTexture)};this.setRenderTarget=function(a){var b=a instanceof THREE.WebGLRenderTargetCube;if(a&&!a.__webglFramebuffer){void 0===a.depthBuffer&&(a.depthBuffer=!0);void 0===a.stencilBuffer&&(a.stencilBuffer=
!0);a.__webglTexture=h.createTexture();var c=0===(a.width&a.width-1)&&0===(a.height&a.height-1),d=I(a.format),e=I(a.type);if(b){a.__webglFramebuffer=[];a.__webglRenderbuffer=[];h.bindTexture(h.TEXTURE_CUBE_MAP,a.__webglTexture);T(h.TEXTURE_CUBE_MAP,a,c);for(var f=0;6>f;f++){a.__webglFramebuffer[f]=h.createFramebuffer();a.__webglRenderbuffer[f]=h.createRenderbuffer();h.texImage2D(h.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,d,a.width,a.height,0,d,e,null);var g=a,i=h.TEXTURE_CUBE_MAP_POSITIVE_X+f;h.bindFramebuffer(h.FRAMEBUFFER,
a.__webglFramebuffer[f]);h.framebufferTexture2D(h.FRAMEBUFFER,h.COLOR_ATTACHMENT0,i,g.__webglTexture,0);D(a.__webglRenderbuffer[f],a)}c&&h.generateMipmap(h.TEXTURE_CUBE_MAP)}else a.__webglFramebuffer=h.createFramebuffer(),a.__webglRenderbuffer=h.createRenderbuffer(),h.bindTexture(h.TEXTURE_2D,a.__webglTexture),T(h.TEXTURE_2D,a,c),h.texImage2D(h.TEXTURE_2D,0,d,a.width,a.height,0,d,e,null),d=h.TEXTURE_2D,h.bindFramebuffer(h.FRAMEBUFFER,a.__webglFramebuffer),h.framebufferTexture2D(h.FRAMEBUFFER,h.COLOR_ATTACHMENT0,
d,a.__webglTexture,0),D(a.__webglRenderbuffer,a),c&&h.generateMipmap(h.TEXTURE_2D);b?h.bindTexture(h.TEXTURE_CUBE_MAP,null):h.bindTexture(h.TEXTURE_2D,null);h.bindRenderbuffer(h.RENDERBUFFER,null);h.bindFramebuffer(h.FRAMEBUFFER,null)}a?(b=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,c=a.width,a=a.height,e=d=0):(b=null,c=Rb,a=Mb,d=Lb,e=bc);b!==ka&&(h.bindFramebuffer(h.FRAMEBUFFER,b),h.viewport(d,e,c,a),ka=b);rc=c;dc=a};this.shadowMapPlugin=new THREE.ShadowMapPlugin;this.addPrePlugin(this.shadowMapPlugin);
this.addPostPlugin(new THREE.SpritePlugin);this.addPostPlugin(new THREE.LensFlarePlugin)};
THREE.WebGLRenderTarget=function(a,b,c){this.width=a;this.height=b;c=c||{};this.wrapS=void 0!==c.wrapS?c.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==c.wrapT?c.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==c.magFilter?c.magFilter:THREE.LinearFilter;this.minFilter=void 0!==c.minFilter?c.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==c.anisotropy?c.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=void 0!==c.format?c.format:
THREE.RGBAFormat;this.type=void 0!==c.type?c.type:THREE.UnsignedByteType;this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0;this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:!0;this.generateMipmaps=!0};
THREE.WebGLRenderTarget.prototype.clone=function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.anisotropy=this.anisotropy;a.minFilter=this.minFilter;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;a.generateMipmaps=this.generateMipmaps;return a};
THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.visible=!0};THREE.RenderableVertex.prototype.copy=function(a){this.positionWorld.copy(a.positionWorld);this.positionScreen.copy(a.positionScreen)};
THREE.RenderableFace3=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsLength=0;this.material=this.color=null;this.uvs=[[]];this.z=null};
THREE.RenderableFace4=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.v4=new THREE.RenderableVertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsLength=0;this.material=this.color=null;this.uvs=[[]];this.z=null};
THREE.RenderableObject=function(){this.z=this.object=null};THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=this.object=null;this.scale=new THREE.Vector2;this.material=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.material=null};THREE.Gyroscope=function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype);
THREE.Gyroscope.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?(this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.rotationWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.rotationObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.rotationObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=
!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)};THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3;THREE.Gyroscope.prototype.translationObject=new THREE.Vector3;THREE.Gyroscope.prototype.rotationWorld=new THREE.Quaternion;THREE.Gyroscope.prototype.rotationObject=new THREE.Quaternion;THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3;THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3;
THREE.CameraHelper=function(a){function b(a,b,d){c(a,d);c(b,d)}function c(a,b){d.geometry.vertices.push(new THREE.Vector3);d.geometry.colors.push(new THREE.Color(b));void 0===d.pointMap[a]&&(d.pointMap[a]=[]);d.pointMap[a].push(d.geometry.vertices.length-1)}THREE.Line.call(this);var d=this;this.geometry=new THREE.Geometry;this.material=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors});this.type=THREE.LinePieces;this.matrixWorld=a.matrixWorld;this.matrixAutoUpdate=!1;this.pointMap=
{};b("n1","n2",16755200);b("n2","n4",16755200);b("n4","n3",16755200);b("n3","n1",16755200);b("f1","f2",16755200);b("f2","f4",16755200);b("f4","f3",16755200);b("f3","f1",16755200);b("n1","f1",16755200);b("n2","f2",16755200);b("n3","f3",16755200);b("n4","f4",16755200);b("p","n1",16711680);b("p","n2",16711680);b("p","n3",16711680);b("p","n4",16711680);b("u1","u2",43775);b("u2","u3",43775);b("u3","u1",43775);b("c","t",16777215);b("p","c",3355443);b("cn1","cn2",3355443);b("cn3","cn4",3355443);b("cf1",
"cf2",3355443);b("cf3","cf4",3355443);this.camera=a;this.update(a)};THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype);
THREE.CameraHelper.prototype.update=function(){function a(a,d,e,f){THREE.CameraHelper.__v.set(d,e,f);THREE.CameraHelper.__projector.unprojectVector(THREE.CameraHelper.__v,THREE.CameraHelper.__c);a=b.pointMap[a];if(void 0!==a){d=0;for(e=a.length;d<e;d++)b.geometry.vertices[a[d]].copy(THREE.CameraHelper.__v)}}var b=this;THREE.CameraHelper.__c.projectionMatrix.copy(this.camera.projectionMatrix);a("c",0,0,-1);a("t",0,0,1);a("n1",-1,-1,-1);a("n2",1,-1,-1);a("n3",-1,1,-1);a("n4",1,1,-1);a("f1",-1,-1,1);
a("f2",1,-1,1);a("f3",-1,1,1);a("f4",1,1,1);a("u1",0.7,1.1,-1);a("u2",-0.7,1.1,-1);a("u3",0,2,-1);a("cf1",-1,0,1);a("cf2",1,0,1);a("cf3",0,-1,1);a("cf4",0,1,1);a("cn1",-1,0,-1);a("cn2",1,0,-1);a("cn3",0,-1,-1);a("cn4",0,1,-1);this.geometry.verticesNeedUpdate=!0};THREE.CameraHelper.__projector=new THREE.Projector;THREE.CameraHelper.__v=new THREE.Vector3;THREE.CameraHelper.__c=new THREE.Camera;
THREE.LensFlare=function(a,b,c,d,e){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;void 0!==a&&this.add(a,b,c,d,e)};THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);
THREE.LensFlare.prototype.add=function(a,b,c,d,e,f){void 0===b&&(b=-1);void 0===c&&(c=0);void 0===f&&(f=1);void 0===e&&(e=new THREE.Color(16777215));void 0===d&&(d=THREE.NormalBlending);c=Math.min(c,Math.max(0,c));this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:1,opacity:f,color:e,blending:d})};
THREE.LensFlare.prototype.updateLensFlares=function(){var a,b=this.lensFlares.length,c,d=2*-this.positionScreen.x,e=2*-this.positionScreen.y;for(a=0;a<b;a++)c=this.lensFlares[a],c.x=this.positionScreen.x+d*c.distance,c.y=this.positionScreen.y+e*c.distance,c.wantedRotation=0.25*c.x*Math.PI,c.rotation+=0.25*(c.wantedRotation-c.rotation)};THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);
THREE.LensFlarePlugin=function(){function a(a){var c=b.createProgram(),d=b.createShader(b.FRAGMENT_SHADER),e=b.createShader(b.VERTEX_SHADER);b.shaderSource(d,a.fragmentShader);b.shaderSource(e,a.vertexShader);b.compileShader(d);b.compileShader(e);b.attachShader(c,d);b.attachShader(c,e);b.linkProgram(c);return c}var b,c,d,e,f,g,j,l,k,i,o,m,s;this.init=function(n){b=n.context;c=n;d=new Float32Array(16);e=new Uint16Array(6);n=0;d[n++]=-1;d[n++]=-1;d[n++]=0;d[n++]=0;d[n++]=1;d[n++]=-1;d[n++]=1;d[n++]=
0;d[n++]=1;d[n++]=1;d[n++]=1;d[n++]=1;d[n++]=-1;d[n++]=1;d[n++]=0;d[n++]=1;n=0;e[n++]=0;e[n++]=1;e[n++]=2;e[n++]=0;e[n++]=2;e[n++]=3;f=b.createBuffer();g=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,f);b.bufferData(b.ARRAY_BUFFER,d,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g);b.bufferData(b.ELEMENT_ARRAY_BUFFER,e,b.STATIC_DRAW);j=b.createTexture();l=b.createTexture();b.bindTexture(b.TEXTURE_2D,j);b.texImage2D(b.TEXTURE_2D,0,b.RGB,16,16,0,b.RGB,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,
b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);b.bindTexture(b.TEXTURE_2D,l);b.texImage2D(b.TEXTURE_2D,0,b.RGBA,16,16,0,b.RGBA,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);
b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);0>=b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS)?(k=!1,i=a(THREE.ShaderFlares.lensFlare)):(k=!0,i=a(THREE.ShaderFlares.lensFlareVertexTexture));o={};m={};o.vertex=b.getAttribLocation(i,"position");o.uv=b.getAttribLocation(i,"uv");m.renderType=b.getUniformLocation(i,"renderType");m.map=b.getUniformLocation(i,"map");m.occlusionMap=b.getUniformLocation(i,"occlusionMap");m.opacity=b.getUniformLocation(i,"opacity");m.color=b.getUniformLocation(i,
"color");m.scale=b.getUniformLocation(i,"scale");m.rotation=b.getUniformLocation(i,"rotation");m.screenPosition=b.getUniformLocation(i,"screenPosition");s=!1};this.render=function(a,d,e,r){var a=a.__webglFlares,A=a.length;if(A){var w=new THREE.Vector3,v=r/e,B=0.5*e,y=0.5*r,x=16/r,R=new THREE.Vector2(x*v,x),M=new THREE.Vector3(1,1,0),T=new THREE.Vector2(1,1),D=m,x=o;b.useProgram(i);s||(b.enableVertexAttribArray(o.vertex),b.enableVertexAttribArray(o.uv),s=!0);b.uniform1i(D.occlusionMap,0);b.uniform1i(D.map,
1);b.bindBuffer(b.ARRAY_BUFFER,f);b.vertexAttribPointer(x.vertex,2,b.FLOAT,!1,16,0);b.vertexAttribPointer(x.uv,2,b.FLOAT,!1,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g);b.disable(b.CULL_FACE);b.depthMask(!1);var G,I,Q,F,N;for(G=0;G<A;G++)if(x=16/r,R.set(x*v,x),F=a[G],w.set(F.matrixWorld.elements[12],F.matrixWorld.elements[13],F.matrixWorld.elements[14]),d.matrixWorldInverse.multiplyVector3(w),d.projectionMatrix.multiplyVector3(w),M.copy(w),T.x=M.x*B+B,T.y=M.y*y+y,k||0<T.x&&T.x<e&&0<T.y&&T.y<r){b.activeTexture(b.TEXTURE1);
b.bindTexture(b.TEXTURE_2D,j);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGB,T.x-8,T.y-8,16,16,0);b.uniform1i(D.renderType,0);b.uniform2f(D.scale,R.x,R.y);b.uniform3f(D.screenPosition,M.x,M.y,M.z);b.disable(b.BLEND);b.enable(b.DEPTH_TEST);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);b.activeTexture(b.TEXTURE0);b.bindTexture(b.TEXTURE_2D,l);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGBA,T.x-8,T.y-8,16,16,0);b.uniform1i(D.renderType,1);b.disable(b.DEPTH_TEST);b.activeTexture(b.TEXTURE1);b.bindTexture(b.TEXTURE_2D,
j);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);F.positionScreen.copy(M);F.customUpdateCallback?F.customUpdateCallback(F):F.updateLensFlares();b.uniform1i(D.renderType,2);b.enable(b.BLEND);I=0;for(Q=F.lensFlares.length;I<Q;I++)N=F.lensFlares[I],0.001<N.opacity&&0.001<N.scale&&(M.x=N.x,M.y=N.y,M.z=N.z,x=N.size*N.scale/r,R.x=x*v,R.y=x,b.uniform3f(D.screenPosition,M.x,M.y,M.z),b.uniform2f(D.scale,R.x,R.y),b.uniform1f(D.rotation,N.rotation),b.uniform1f(D.opacity,N.opacity),b.uniform3f(D.color,N.color.r,
N.color.g,N.color.b),c.setBlending(N.blending,N.blendEquation,N.blendSrc,N.blendDst),c.setTexture(N.texture,1),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0))}b.enable(b.CULL_FACE);b.enable(b.DEPTH_TEST);b.depthMask(!0)}}};
THREE.ShadowMapPlugin=function(){var a,b,c,d,e,f,g=new THREE.Frustum,j=new THREE.Matrix4,l=new THREE.Vector3,k=new THREE.Vector3;this.init=function(g){a=g.context;b=g;var g=THREE.ShaderLib.depthRGBA,j=THREE.UniformsUtils.clone(g.uniforms);c=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:j});d=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:j,morphTargets:!0});e=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,
vertexShader:g.vertexShader,uniforms:j,skinning:!0});f=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:j,morphTargets:!0,skinning:!0});c._shadowPass=!0;d._shadowPass=!0;e._shadowPass=!0;f._shadowPass=!0};this.render=function(a,c){b.shadowMapEnabled&&b.shadowMapAutoUpdate&&this.update(a,c)};this.update=function(i,o){var m,s,n,u,p,r,A,w,v,B=[];u=0;a.clearColor(1,1,1,1);a.disable(a.BLEND);a.enable(a.CULL_FACE);a.frontFace(a.CCW);b.shadowMapCullFrontFaces?
a.cullFace(a.FRONT):a.cullFace(a.BACK);b.setDepthTest(!0);m=0;for(s=i.__lights.length;m<s;m++)if(n=i.__lights[m],n.castShadow)if(n instanceof THREE.DirectionalLight&&n.shadowCascade)for(p=0;p<n.shadowCascadeCount;p++){var y;if(n.shadowCascadeArray[p])y=n.shadowCascadeArray[p];else{v=n;A=p;y=new THREE.DirectionalLight;y.isVirtual=!0;y.onlyShadow=!0;y.castShadow=!0;y.shadowCameraNear=v.shadowCameraNear;y.shadowCameraFar=v.shadowCameraFar;y.shadowCameraLeft=v.shadowCameraLeft;y.shadowCameraRight=v.shadowCameraRight;
y.shadowCameraBottom=v.shadowCameraBottom;y.shadowCameraTop=v.shadowCameraTop;y.shadowCameraVisible=v.shadowCameraVisible;y.shadowDarkness=v.shadowDarkness;y.shadowBias=v.shadowCascadeBias[A];y.shadowMapWidth=v.shadowCascadeWidth[A];y.shadowMapHeight=v.shadowCascadeHeight[A];y.pointsWorld=[];y.pointsFrustum=[];w=y.pointsWorld;r=y.pointsFrustum;for(var x=0;8>x;x++)w[x]=new THREE.Vector3,r[x]=new THREE.Vector3;w=v.shadowCascadeNearZ[A];v=v.shadowCascadeFarZ[A];r[0].set(-1,-1,w);r[1].set(1,-1,w);r[2].set(-1,
1,w);r[3].set(1,1,w);r[4].set(-1,-1,v);r[5].set(1,-1,v);r[6].set(-1,1,v);r[7].set(1,1,v);y.originalCamera=o;r=new THREE.Gyroscope;r.position=n.shadowCascadeOffset;r.add(y);r.add(y.target);o.add(r);n.shadowCascadeArray[p]=y;console.log("Created virtualLight",y)}A=n;w=p;v=A.shadowCascadeArray[w];v.position.copy(A.position);v.target.position.copy(A.target.position);v.lookAt(v.target);v.shadowCameraVisible=A.shadowCameraVisible;v.shadowDarkness=A.shadowDarkness;v.shadowBias=A.shadowCascadeBias[w];r=A.shadowCascadeNearZ[w];
A=A.shadowCascadeFarZ[w];v=v.pointsFrustum;v[0].z=r;v[1].z=r;v[2].z=r;v[3].z=r;v[4].z=A;v[5].z=A;v[6].z=A;v[7].z=A;B[u]=y;u++}else B[u]=n,u++;m=0;for(s=B.length;m<s;m++){n=B[m];n.shadowMap||(n.shadowMap=new THREE.WebGLRenderTarget(n.shadowMapWidth,n.shadowMapHeight,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat}),n.shadowMapSize=new THREE.Vector2(n.shadowMapWidth,n.shadowMapHeight),n.shadowMatrix=new THREE.Matrix4);if(!n.shadowCamera){if(n instanceof THREE.SpotLight)n.shadowCamera=
new THREE.PerspectiveCamera(n.shadowCameraFov,n.shadowMapWidth/n.shadowMapHeight,n.shadowCameraNear,n.shadowCameraFar);else if(n instanceof THREE.DirectionalLight)n.shadowCamera=new THREE.OrthographicCamera(n.shadowCameraLeft,n.shadowCameraRight,n.shadowCameraTop,n.shadowCameraBottom,n.shadowCameraNear,n.shadowCameraFar);else{console.error("Unsupported light type for shadow");continue}i.add(n.shadowCamera);b.autoUpdateScene&&i.updateMatrixWorld()}n.shadowCameraVisible&&!n.cameraHelper&&(n.cameraHelper=
new THREE.CameraHelper(n.shadowCamera),n.shadowCamera.add(n.cameraHelper));if(n.isVirtual&&y.originalCamera==o){p=o;u=n.shadowCamera;r=n.pointsFrustum;v=n.pointsWorld;l.set(Infinity,Infinity,Infinity);k.set(-Infinity,-Infinity,-Infinity);for(A=0;8>A;A++)if(w=v[A],w.copy(r[A]),THREE.ShadowMapPlugin.__projector.unprojectVector(w,p),u.matrixWorldInverse.multiplyVector3(w),w.x<l.x&&(l.x=w.x),w.x>k.x&&(k.x=w.x),w.y<l.y&&(l.y=w.y),w.y>k.y&&(k.y=w.y),w.z<l.z&&(l.z=w.z),w.z>k.z)k.z=w.z;u.left=l.x;u.right=
k.x;u.top=k.y;u.bottom=l.y;u.updateProjectionMatrix()}u=n.shadowMap;r=n.shadowMatrix;p=n.shadowCamera;p.position.copy(n.matrixWorld.getPosition());p.lookAt(n.target.matrixWorld.getPosition());p.updateMatrixWorld();p.matrixWorldInverse.getInverse(p.matrixWorld);n.cameraHelper&&(n.cameraHelper.visible=n.shadowCameraVisible);n.shadowCameraVisible&&n.cameraHelper.update();r.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1);r.multiplySelf(p.projectionMatrix);r.multiplySelf(p.matrixWorldInverse);p._viewMatrixArray||
(p._viewMatrixArray=new Float32Array(16));p._projectionMatrixArray||(p._projectionMatrixArray=new Float32Array(16));p.matrixWorldInverse.flattenToArray(p._viewMatrixArray);p.projectionMatrix.flattenToArray(p._projectionMatrixArray);j.multiply(p.projectionMatrix,p.matrixWorldInverse);g.setFromMatrix(j);b.setRenderTarget(u);b.clear();v=i.__webglObjects;n=0;for(u=v.length;n<u;n++)if(A=v[n],r=A.object,A.render=!1,r.visible&&r.castShadow&&(!(r instanceof THREE.Mesh)||!r.frustumCulled||g.contains(r)))r._modelViewMatrix.multiply(p.matrixWorldInverse,
r.matrixWorld),A.render=!0;n=0;for(u=v.length;n<u;n++)A=v[n],A.render&&(r=A.object,A=A.buffer,x=r.material instanceof THREE.MeshFaceMaterial?r.geometry.materials[0]:r.material,w=0<r.geometry.morphTargets.length&&x.morphTargets,x=r instanceof THREE.SkinnedMesh&&x.skinning,w=r.customDepthMaterial?r.customDepthMaterial:x?w?f:e:w?d:c,A instanceof THREE.BufferGeometry?b.renderBufferDirect(p,i.__lights,null,w,A,r):b.renderBuffer(p,i.__lights,null,w,A,r));v=i.__webglObjectsImmediate;n=0;for(u=v.length;n<
u;n++)A=v[n],r=A.object,r.visible&&r.castShadow&&(r._modelViewMatrix.multiply(p.matrixWorldInverse,r.matrixWorld),b.renderImmediateObject(p,i.__lights,null,c,r))}m=b.getClearColor();s=b.getClearAlpha();a.clearColor(m.r,m.g,m.b,s);a.enable(a.BLEND);b.shadowMapCullFrontFaces&&a.cullFace(a.BACK)}};THREE.ShadowMapPlugin.__projector=new THREE.Projector;
THREE.SpritePlugin=function(){function a(a,b){return b.z-a.z}var b,c,d,e,f,g,j,l,k,i;this.init=function(a){b=a.context;c=a;d=new Float32Array(16);e=new Uint16Array(6);a=0;d[a++]=-1;d[a++]=-1;d[a++]=0;d[a++]=0;d[a++]=1;d[a++]=-1;d[a++]=1;d[a++]=0;d[a++]=1;d[a++]=1;d[a++]=1;d[a++]=1;d[a++]=-1;d[a++]=1;d[a++]=0;d[a++]=1;a=0;e[a++]=0;e[a++]=1;e[a++]=2;e[a++]=0;e[a++]=2;e[a++]=3;f=b.createBuffer();g=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,f);b.bufferData(b.ARRAY_BUFFER,d,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,
g);b.bufferData(b.ELEMENT_ARRAY_BUFFER,e,b.STATIC_DRAW);var a=THREE.ShaderSprite.sprite,m=b.createProgram(),s=b.createShader(b.FRAGMENT_SHADER),n=b.createShader(b.VERTEX_SHADER);b.shaderSource(s,a.fragmentShader);b.shaderSource(n,a.vertexShader);b.compileShader(s);b.compileShader(n);b.attachShader(m,s);b.attachShader(m,n);b.linkProgram(m);j=m;l={};k={};l.position=b.getAttribLocation(j,"position");l.uv=b.getAttribLocation(j,"uv");k.uvOffset=b.getUniformLocation(j,"uvOffset");k.uvScale=b.getUniformLocation(j,
"uvScale");k.rotation=b.getUniformLocation(j,"rotation");k.scale=b.getUniformLocation(j,"scale");k.alignment=b.getUniformLocation(j,"alignment");k.color=b.getUniformLocation(j,"color");k.map=b.getUniformLocation(j,"map");k.opacity=b.getUniformLocation(j,"opacity");k.useScreenCoordinates=b.getUniformLocation(j,"useScreenCoordinates");k.affectedByDistance=b.getUniformLocation(j,"affectedByDistance");k.screenPosition=b.getUniformLocation(j,"screenPosition");k.modelViewMatrix=b.getUniformLocation(j,"modelViewMatrix");
k.projectionMatrix=b.getUniformLocation(j,"projectionMatrix");i=!1};this.render=function(d,e,s,n){var d=d.__webglSprites,u=d.length;if(u){var p=l,r=k,A=n/s,s=0.5*s,w=0.5*n,v=!0;b.useProgram(j);i||(b.enableVertexAttribArray(p.position),b.enableVertexAttribArray(p.uv),i=!0);b.disable(b.CULL_FACE);b.enable(b.BLEND);b.depthMask(!0);b.bindBuffer(b.ARRAY_BUFFER,f);b.vertexAttribPointer(p.position,2,b.FLOAT,!1,16,0);b.vertexAttribPointer(p.uv,2,b.FLOAT,!1,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g);b.uniformMatrix4fv(r.projectionMatrix,
!1,e._projectionMatrixArray);b.activeTexture(b.TEXTURE0);b.uniform1i(r.map,0);for(var B,y=[],p=0;p<u;p++)B=d[p],B.visible&&0!==B.opacity&&(B.useScreenCoordinates?B.z=-B.position.z:(B._modelViewMatrix.multiply(e.matrixWorldInverse,B.matrixWorld),B.z=-B._modelViewMatrix.elements[14]));d.sort(a);for(p=0;p<u;p++)if(B=d[p],B.visible&&0!==B.opacity&&B.map&&B.map.image&&B.map.image.width)B.useScreenCoordinates?(b.uniform1i(r.useScreenCoordinates,1),b.uniform3f(r.screenPosition,(B.position.x-s)/s,(w-B.position.y)/
w,Math.max(0,Math.min(1,B.position.z)))):(b.uniform1i(r.useScreenCoordinates,0),b.uniform1i(r.affectedByDistance,B.affectedByDistance?1:0),b.uniformMatrix4fv(r.modelViewMatrix,!1,B._modelViewMatrix.elements)),e=B.map.image.width/(B.scaleByViewport?n:1),y[0]=e*A*B.scale.x,y[1]=e*B.scale.y,b.uniform2f(r.uvScale,B.uvScale.x,B.uvScale.y),b.uniform2f(r.uvOffset,B.uvOffset.x,B.uvOffset.y),b.uniform2f(r.alignment,B.alignment.x,B.alignment.y),b.uniform1f(r.opacity,B.opacity),b.uniform3f(r.color,B.color.r,
B.color.g,B.color.b),b.uniform1f(r.rotation,B.rotation),b.uniform2fv(r.scale,y),B.mergeWith3D&&!v?(b.enable(b.DEPTH_TEST),v=!0):!B.mergeWith3D&&v&&(b.disable(b.DEPTH_TEST),v=!1),c.setBlending(B.blending,B.blendEquation,B.blendSrc,B.blendDst),c.setTexture(B.map,0),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);b.enable(b.CULL_FACE);b.enable(b.DEPTH_TEST);b.depthMask(!0)}}};
THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform int renderType;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility = (       visibility.r / 9.0 ) *\n( 1.0 - visibility.g / 9.0 ) *\n(       visibility.b / 9.0 ) *\n( 1.0 - visibility.a / 9.0 );\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform sampler2D map;\nuniform float opacity;\nuniform int renderType;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},
lensFlare:{vertexShader:"uniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform int renderType;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform int renderType;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}};
THREE.ShaderSprite={sprite:{vertexShader:"uniform int useScreenCoordinates;\nuniform int affectedByDistance;\nuniform vec3 screenPosition;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 alignment;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position + alignment;\nvec2 rotatedPosition;\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\nvec4 finalPosition;\nif( useScreenCoordinates != 0 ) {\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\n} else {\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition * ( affectedByDistance == 1 ? 1.0 : finalPosition.z );\n}\ngl_Position = finalPosition;\n}",
fragmentShader:"precision mediump float;\nuniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\n}"}};
